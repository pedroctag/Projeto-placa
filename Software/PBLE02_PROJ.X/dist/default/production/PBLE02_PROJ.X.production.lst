

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jul 10 23:27:03 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    84   000000                     
    85                           ; Version 2.40
    86                           ; Generated 17/11/2021 GMT
    87                           ; 
    88                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F4550 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120   000000                     
   121                           	psect	idataBANK0
   122   003D68                     __pidataBANK0:
   123                           	callstack 0
   124                           
   125                           ;initializer for _msgsL2
   126   003D68  CE                 	db	low STR_26
   127   003D69  7F                 	db	high STR_26
   128   003D6A  CE                 	db	low STR_26
   129   003D6B  7F                 	db	high STR_26
   130   003D6C  44                 	db	low STR_28
   131   003D6D  7F                 	db	high STR_28
   132   003D6E  14                 	db	low STR_29
   133   003D6F  7F                 	db	high STR_29
   134   003D70  24                 	db	low STR_30
   135   003D71  7F                 	db	high STR_30
   136   003D72  24                 	db	low STR_30
   137   003D73  7F                 	db	high STR_30
   138   003D74  34                 	db	low STR_32
   139   003D75  7F                 	db	high STR_32
   140   003D76  34                 	db	low STR_32
   141   003D77  7F                 	db	high STR_32
   142   003D78  E1                 	db	low STR_34
   143   003D79  7F                 	db	high STR_34
   144   003D7A  D8                 	db	low STR_35
   145   003D7B  7F                 	db	high STR_35
   146   003D7C  E1                 	db	low STR_34
   147   003D7D  7F                 	db	high STR_34
   148   003D7E  D8                 	db	low STR_35
   149   003D7F  7F                 	db	high STR_35
   150   003D80  E1                 	db	low STR_34
   151   003D81  7F                 	db	high STR_34
   152   003D82  D8                 	db	low STR_35
   153   003D83  7F                 	db	high STR_35
   154   003D84  E1                 	db	low STR_34
   155   003D85  7F                 	db	high STR_34
   156   003D86  D8                 	db	low STR_35
   157   003D87  7F                 	db	high STR_35
   158                           
   159                           ;initializer for _msgsL1
   160   003D88  C4                 	db	low STR_10
   161   003D89  7F                 	db	high STR_10
   162   003D8A  C4                 	db	low STR_10
   163   003D8B  7F                 	db	high STR_10
   164   003D8C  74                 	db	low STR_12
   165   003D8D  7F                 	db	high STR_12
   166   003D8E  B4                 	db	low STR_13
   167   003D8F  7F                 	db	high STR_13
   168   003D90  84                 	db	low STR_14
   169   003D91  7F                 	db	high STR_14
   170   003D92  03                 	db	low STR_15
   171   003D93  7F                 	db	high STR_15
   172   003D94  84                 	db	low STR_14
   173   003D95  7F                 	db	high STR_14
   174   003D96  03                 	db	low STR_15
   175   003D97  7F                 	db	high STR_15
   176   003D98  54                 	db	low STR_18
   177   003D99  7F                 	db	high STR_18
   178   003D9A  E1                 	db	low STR_19
   179   003D9B  7E                 	db	high STR_19
   180   003D9C  94                 	db	low STR_20
   181   003D9D  7F                 	db	high STR_20
   182   003D9E  BF                 	db	low STR_21
   183   003D9F  7E                 	db	high STR_21
   184   003DA0  64                 	db	low STR_22
   185   003DA1  7F                 	db	high STR_22
   186   003DA2  F2                 	db	low STR_23
   187   003DA3  7E                 	db	high STR_23
   188   003DA4  A4                 	db	low STR_24
   189   003DA5  7F                 	db	high STR_24
   190   003DA6  D0                 	db	low STR_25
   191   003DA7  7E                 	db	high STR_25
   192                           
   193                           ;initializer for _serialAlerts
   194   003DA8  86                 	db	low STR_46
   195   003DA9  7E                 	db	high STR_46
   196   003DAA  29                 	db	low STR_47
   197   003DAB  7E                 	db	high STR_47
   198   003DAC  68                 	db	low STR_48
   199   003DAD  7E                 	db	high STR_48
   200   003DAE  49                 	db	low STR_49
   201   003DAF  7E                 	db	high STR_49
   202                           
   203                           ;initializer for _lcdAlerts
   204   003DB0  EA                 	db	low STR_42
   205   003DB1  7F                 	db	high STR_42
   206   003DB2  F4                 	db	low STR_43
   207   003DB3  7F                 	db	high STR_43
   208   003DB4  EF                 	db	low STR_44
   209   003DB5  7F                 	db	high STR_44
   210   003DB6  F9                 	db	low STR_45
   211   003DB7  7F                 	db	high STR_45
   212   000000                     _SPBRG	set	4015
   213   000000                     _SPBRGH	set	4016
   214   000000                     _BAUDCON	set	4024
   215   000000                     _TXSTA	set	4012
   216   000000                     _RCREG	set	4014
   217   000000                     _ADRESL	set	4035
   218   000000                     _ADRESH	set	4036
   219   000000                     _ADCON1	set	4033
   220   000000                     _PORTAbits	set	3968
   221   000000                     _SPPCFG	set	3939
   222   000000                     _PORTA	set	3968
   223   000000                     _ADCON2	set	4032
   224   000000                     _ADCON0	set	4034
   225   000000                     _T2CON	set	4042
   226   000000                     _PR2	set	4043
   227   000000                     _TRISA	set	3986
   228   000000                     _PORTE	set	3972
   229   000000                     _PORTD	set	3971
   230   000000                     _PORTC	set	3970
   231   000000                     _PORTB	set	3969
   232   000000                     _PIR1	set	3998
   233   000000                     _CCP2CON	set	4026
   234   000000                     _CCPR2L	set	4027
   235   000000                     _TRISE	set	3990
   236   000000                     _TRISD	set	3989
   237   000000                     _TRISC	set	3988
   238   000000                     _TRISB	set	3987
   239   000000                     _T0CON	set	4053
   240   000000                     _TMR0L	set	4054
   241   000000                     _TMR0H	set	4055
   242   000000                     _INTCON	set	4082
   243   000000                     _RCSTA	set	4011
   244   000000                     _TXREG	set	4013
   245                           
   246                           	psect	mediumconst
   247   007E02                     __pmediumconst:
   248                           	callstack 0
   249   007E02  00                 	db	0
   250   007E03                     STR_9:
   251   007E03  70                 	db	112	;'p'
   252   007E04  72                 	db	114	;'r'
   253   007E05  6F                 	db	111	;'o'
   254   007E06  74                 	db	116	;'t'
   255   007E07  6F                 	db	111	;'o'
   256   007E08  63                 	db	99	;'c'
   257   007E09  6F                 	db	111	;'o'
   258   007E0A  6C                 	db	108	;'l'
   259   007E0B  6F                 	db	111	;'o'
   260   007E0C  20                 	db	32
   261   007E0D  69                 	db	105	;'i'
   262   007E0E  6E                 	db	110	;'n'
   263   007E0F  76                 	db	118	;'v'
   264   007E10  61                 	db	97	;'a'
   265   007E11  6C                 	db	108	;'l'
   266   007E12  69                 	db	105	;'i'
   267   007E13  64                 	db	100	;'d'
   268   007E14  6F                 	db	111	;'o'
   269   007E15  20                 	db	32
   270   007E16  7C                 	db	124
   271   007E17  20                 	db	32
   272   007E18  69                 	db	105	;'i'
   273   007E19  6E                 	db	110	;'n'
   274   007E1A  76                 	db	118	;'v'
   275   007E1B  61                 	db	97	;'a'
   276   007E1C  6C                 	db	108	;'l'
   277   007E1D  69                 	db	105	;'i'
   278   007E1E  64                 	db	100	;'d'
   279   007E1F  20                 	db	32
   280   007E20  70                 	db	112	;'p'
   281   007E21  72                 	db	114	;'r'
   282   007E22  6F                 	db	111	;'o'
   283   007E23  74                 	db	116	;'t'
   284   007E24  6F                 	db	111	;'o'
   285   007E25  63                 	db	99	;'c'
   286   007E26  6F                 	db	111	;'o'
   287   007E27  6C                 	db	108	;'l'
   288   007E28  00                 	db	0
   289   007E29                     STR_47:
   290   007E29  57                 	db	87	;'W'
   291   007E2A  41                 	db	65	;'A'
   292   007E2B  52                 	db	82	;'R'
   293   007E2C  4E                 	db	78	;'N'
   294   007E2D  49                 	db	73	;'I'
   295   007E2E  4E                 	db	78	;'N'
   296   007E2F  47                 	db	71	;'G'
   297   007E30  3A                 	db	58	;':'
   298   007E31  20                 	db	32
   299   007E32  48                 	db	72	;'H'
   300   007E33  49                 	db	73	;'I'
   301   007E34  47                 	db	71	;'G'
   302   007E35  48                 	db	72	;'H'
   303   007E36  20                 	db	32
   304   007E37  54                 	db	84	;'T'
   305   007E38  68                 	db	104	;'h'
   306   007E39  72                 	db	114	;'r'
   307   007E3A  65                 	db	101	;'e'
   308   007E3B  73                 	db	115	;'s'
   309   007E3C  68                 	db	104	;'h'
   310   007E3D  6F                 	db	111	;'o'
   311   007E3E  6C                 	db	108	;'l'
   312   007E3F  64                 	db	100	;'d'
   313   007E40  20                 	db	32
   314   007E41  52                 	db	82	;'R'
   315   007E42  65                 	db	101	;'e'
   316   007E43  61                 	db	97	;'a'
   317   007E44  63                 	db	99	;'c'
   318   007E45  68                 	db	104	;'h'
   319   007E46  65                 	db	101	;'e'
   320   007E47  64                 	db	100	;'d'
   321   007E48  00                 	db	0
   322   007E49                     STR_49:
   323   007E49  57                 	db	87	;'W'
   324   007E4A  41                 	db	65	;'A'
   325   007E4B  52                 	db	82	;'R'
   326   007E4C  4E                 	db	78	;'N'
   327   007E4D  49                 	db	73	;'I'
   328   007E4E  4E                 	db	78	;'N'
   329   007E4F  47                 	db	71	;'G'
   330   007E50  3A                 	db	58	;':'
   331   007E51  20                 	db	32
   332   007E52  4C                 	db	76	;'L'
   333   007E53  4F                 	db	79	;'O'
   334   007E54  57                 	db	87	;'W'
   335   007E55  20                 	db	32
   336   007E56  54                 	db	84	;'T'
   337   007E57  68                 	db	104	;'h'
   338   007E58  72                 	db	114	;'r'
   339   007E59  65                 	db	101	;'e'
   340   007E5A  73                 	db	115	;'s'
   341   007E5B  68                 	db	104	;'h'
   342   007E5C  6F                 	db	111	;'o'
   343   007E5D  6C                 	db	108	;'l'
   344   007E5E  64                 	db	100	;'d'
   345   007E5F  20                 	db	32
   346   007E60  52                 	db	82	;'R'
   347   007E61  65                 	db	101	;'e'
   348   007E62  61                 	db	97	;'a'
   349   007E63  63                 	db	99	;'c'
   350   007E64  68                 	db	104	;'h'
   351   007E65  65                 	db	101	;'e'
   352   007E66  64                 	db	100	;'d'
   353   007E67  00                 	db	0
   354   007E68                     STR_48:
   355   007E68  41                 	db	65	;'A'
   356   007E69  4C                 	db	76	;'L'
   357   007E6A  45                 	db	69	;'E'
   358   007E6B  52                 	db	82	;'R'
   359   007E6C  54                 	db	84	;'T'
   360   007E6D  41                 	db	65	;'A'
   361   007E6E  3A                 	db	58	;':'
   362   007E6F  20                 	db	32
   363   007E70  4C                 	db	76	;'L'
   364   007E71  69                 	db	105	;'i'
   365   007E72  6D                 	db	109	;'m'
   366   007E73  69                 	db	105	;'i'
   367   007E74  74                 	db	116	;'t'
   368   007E75  65                 	db	101	;'e'
   369   007E76  20                 	db	32
   370   007E77  42                 	db	66	;'B'
   371   007E78  41                 	db	65	;'A'
   372   007E79  49                 	db	73	;'I'
   373   007E7A  58                 	db	88	;'X'
   374   007E7B  4F                 	db	79	;'O'
   375   007E7C  20                 	db	32
   376   007E7D  41                 	db	65	;'A'
   377   007E7E  74                 	db	116	;'t'
   378   007E7F  69                 	db	105	;'i'
   379   007E80  6E                 	db	110	;'n'
   380   007E81  67                 	db	103	;'g'
   381   007E82  69                 	db	105	;'i'
   382   007E83  64                 	db	100	;'d'
   383   007E84  6F                 	db	111	;'o'
   384   007E85  00                 	db	0
   385   007E86                     STR_46:
   386   007E86  41                 	db	65	;'A'
   387   007E87  4C                 	db	76	;'L'
   388   007E88  45                 	db	69	;'E'
   389   007E89  52                 	db	82	;'R'
   390   007E8A  54                 	db	84	;'T'
   391   007E8B  41                 	db	65	;'A'
   392   007E8C  3A                 	db	58	;':'
   393   007E8D  20                 	db	32
   394   007E8E  4C                 	db	76	;'L'
   395   007E8F  69                 	db	105	;'i'
   396   007E90  6D                 	db	109	;'m'
   397   007E91  69                 	db	105	;'i'
   398   007E92  74                 	db	116	;'t'
   399   007E93  65                 	db	101	;'e'
   400   007E94  20                 	db	32
   401   007E95  41                 	db	65	;'A'
   402   007E96  4C                 	db	76	;'L'
   403   007E97  54                 	db	84	;'T'
   404   007E98  4F                 	db	79	;'O'
   405   007E99  20                 	db	32
   406   007E9A  41                 	db	65	;'A'
   407   007E9B  74                 	db	116	;'t'
   408   007E9C  69                 	db	105	;'i'
   409   007E9D  6E                 	db	110	;'n'
   410   007E9E  67                 	db	103	;'g'
   411   007E9F  69                 	db	105	;'i'
   412   007EA0  64                 	db	100	;'d'
   413   007EA1  6F                 	db	111	;'o'
   414   007EA2  00                 	db	0
   415   007EA3                     STR_1:
   416   007EA3  45                 	db	69	;'E'
   417   007EA4  72                 	db	114	;'r'
   418   007EA5  72                 	db	114	;'r'
   419   007EA6  6F                 	db	111	;'o'
   420   007EA7  72                 	db	114	;'r'
   421   007EA8  3A                 	db	58	;':'
   422   007EA9  20                 	db	32
   423   007EAA  69                 	db	105	;'i'
   424   007EAB  6E                 	db	110	;'n'
   425   007EAC  76                 	db	118	;'v'
   426   007EAD  61                 	db	97	;'a'
   427   007EAE  6C                 	db	108	;'l'
   428   007EAF  69                 	db	105	;'i'
   429   007EB0  64                 	db	100	;'d'
   430   007EB1  20                 	db	32
   431   007EB2  70                 	db	112	;'p'
   432   007EB3  72                 	db	114	;'r'
   433   007EB4  6F                 	db	111	;'o'
   434   007EB5  6D                 	db	109	;'m'
   435   007EB6  70                 	db	112	;'p'
   436   007EB7  74                 	db	116	;'t'
   437   007EB8  20                 	db	32
   438   007EB9  76                 	db	118	;'v'
   439   007EBA  61                 	db	97	;'a'
   440   007EBB  6C                 	db	108	;'l'
   441   007EBC  75                 	db	117	;'u'
   442   007EBD  65                 	db	101	;'e'
   443   007EBE  00                 	db	0
   444   007EBF                     STR_21:
   445   007EBF  41                 	db	65	;'A'
   446   007EC0  6C                 	db	108	;'l'
   447   007EC1  61                 	db	97	;'a'
   448   007EC2  72                 	db	114	;'r'
   449   007EC3  6D                 	db	109	;'m'
   450   007EC4  20                 	db	32
   451   007EC5  31                 	db	49	;'1'
   452   007EC6  20                 	db	32
   453   007EC7  4C                 	db	76	;'L'
   454   007EC8  6F                 	db	111	;'o'
   455   007EC9  77                 	db	119	;'w'
   456   007ECA  20                 	db	32
   457   007ECB  20                 	db	32
   458   007ECC  20                 	db	32
   459   007ECD  20                 	db	32
   460   007ECE  20                 	db	32
   461   007ECF  00                 	db	0
   462   007ED0                     STR_25:
   463   007ED0  41                 	db	65	;'A'
   464   007ED1  6C                 	db	108	;'l'
   465   007ED2  61                 	db	97	;'a'
   466   007ED3  72                 	db	114	;'r'
   467   007ED4  6D                 	db	109	;'m'
   468   007ED5  20                 	db	32
   469   007ED6  32                 	db	50	;'2'
   470   007ED7  20                 	db	32
   471   007ED8  4C                 	db	76	;'L'
   472   007ED9  6F                 	db	111	;'o'
   473   007EDA  77                 	db	119	;'w'
   474   007EDB  20                 	db	32
   475   007EDC  20                 	db	32
   476   007EDD  20                 	db	32
   477   007EDE  20                 	db	32
   478   007EDF  20                 	db	32
   479   007EE0  00                 	db	0
   480   007EE1                     STR_19:
   481   007EE1  41                 	db	65	;'A'
   482   007EE2  6C                 	db	108	;'l'
   483   007EE3  61                 	db	97	;'a'
   484   007EE4  72                 	db	114	;'r'
   485   007EE5  6D                 	db	109	;'m'
   486   007EE6  20                 	db	32
   487   007EE7  31                 	db	49	;'1'
   488   007EE8  20                 	db	32
   489   007EE9  48                 	db	72	;'H'
   490   007EEA  69                 	db	105	;'i'
   491   007EEB  67                 	db	103	;'g'
   492   007EEC  68                 	db	104	;'h'
   493   007EED  20                 	db	32
   494   007EEE  20                 	db	32
   495   007EEF  20                 	db	32
   496   007EF0  20                 	db	32
   497   007EF1  00                 	db	0
   498   007EF2                     STR_23:
   499   007EF2  41                 	db	65	;'A'
   500   007EF3  6C                 	db	108	;'l'
   501   007EF4  61                 	db	97	;'a'
   502   007EF5  72                 	db	114	;'r'
   503   007EF6  6D                 	db	109	;'m'
   504   007EF7  20                 	db	32
   505   007EF8  32                 	db	50	;'2'
   506   007EF9  20                 	db	32
   507   007EFA  48                 	db	72	;'H'
   508   007EFB  69                 	db	105	;'i'
   509   007EFC  67                 	db	103	;'g'
   510   007EFD  68                 	db	104	;'h'
   511   007EFE  20                 	db	32
   512   007EFF  20                 	db	32
   513   007F00  20                 	db	32
   514   007F01  20                 	db	32
   515   007F02  00                 	db	0
   516   007F03                     STR_15:
   517   007F03  43                 	db	67	;'C'
   518   007F04  68                 	db	104	;'h'
   519   007F05  61                 	db	97	;'a'
   520   007F06  6E                 	db	110	;'n'
   521   007F07  67                 	db	103	;'g'
   522   007F08  65                 	db	101	;'e'
   523   007F09  20                 	db	32
   524   007F0A  61                 	db	97	;'a'
   525   007F0B  6C                 	db	108	;'l'
   526   007F0C  61                 	db	97	;'a'
   527   007F0D  72                 	db	114	;'r'
   528   007F0E  6D                 	db	109	;'m'
   529   007F0F  20                 	db	32
   530   007F10  20                 	db	32
   531   007F11  20                 	db	32
   532   007F12  20                 	db	32
   533   007F13  00                 	db	0
   534   007F14                     STR_29:
   535   007F14  45                 	db	69	;'E'
   536   007F15  6E                 	db	110	;'n'
   537   007F16  67                 	db	103	;'g'
   538   007F17  6C                 	db	108	;'l'
   539   007F18  69                 	db	105	;'i'
   540   007F19  73                 	db	115	;'s'
   541   007F1A  68                 	db	104	;'h'
   542   007F1B  20                 	db	32
   543   007F1C  20                 	db	32
   544   007F1D  20                 	db	32
   545   007F1E  20                 	db	32
   546   007F1F  20                 	db	32
   547   007F20  20                 	db	32
   548   007F21  20                 	db	32
   549   007F22  20                 	db	32
   550   007F23  00                 	db	0
   551   007F24                     STR_30:
   552   007F24  53                 	db	83	;'S'
   553   007F25  65                 	db	101	;'e'
   554   007F26  6E                 	db	110	;'n'
   555   007F27  73                 	db	115	;'s'
   556   007F28  6F                 	db	111	;'o'
   557   007F29  72                 	db	114	;'r'
   558   007F2A  20                 	db	32
   559   007F2B  31                 	db	49	;'1'
   560   007F2C  20                 	db	32
   561   007F2D  20                 	db	32
   562   007F2E  20                 	db	32
   563   007F2F  20                 	db	32
   564   007F30  20                 	db	32
   565   007F31  20                 	db	32
   566   007F32  20                 	db	32
   567   007F33  00                 	db	0
   568   007F34                     STR_32:
   569   007F34  53                 	db	83	;'S'
   570   007F35  65                 	db	101	;'e'
   571   007F36  6E                 	db	110	;'n'
   572   007F37  73                 	db	115	;'s'
   573   007F38  6F                 	db	111	;'o'
   574   007F39  72                 	db	114	;'r'
   575   007F3A  20                 	db	32
   576   007F3B  32                 	db	50	;'2'
   577   007F3C  20                 	db	32
   578   007F3D  20                 	db	32
   579   007F3E  20                 	db	32
   580   007F3F  20                 	db	32
   581   007F40  20                 	db	32
   582   007F41  20                 	db	32
   583   007F42  20                 	db	32
   584   007F43  00                 	db	0
   585   007F44                     STR_28:
   586   007F44  50                 	db	80	;'P'
   587   007F45  6F                 	db	111	;'o'
   588   007F46  72                 	db	114	;'r'
   589   007F47  74                 	db	116	;'t'
   590   007F48  75                 	db	117	;'u'
   591   007F49  67                 	db	103	;'g'
   592   007F4A  75                 	db	117	;'u'
   593   007F4B  65                 	db	101	;'e'
   594   007F4C  73                 	db	115	;'s'
   595   007F4D  20                 	db	32
   596   007F4E  20                 	db	32
   597   007F4F  20                 	db	32
   598   007F50  20                 	db	32
   599   007F51  20                 	db	32
   600   007F52  20                 	db	32
   601   007F53  00                 	db	0
   602   007F54                     STR_18:
   603   007F54  41                 	db	65	;'A'
   604   007F55  6C                 	db	108	;'l'
   605   007F56  61                 	db	97	;'a'
   606   007F57  72                 	db	114	;'r'
   607   007F58  6D                 	db	109	;'m'
   608   007F59  65                 	db	101	;'e'
   609   007F5A  20                 	db	32
   610   007F5B  31                 	db	49	;'1'
   611   007F5C  20                 	db	32
   612   007F5D  61                 	db	97	;'a'
   613   007F5E  6C                 	db	108	;'l'
   614   007F5F  74                 	db	116	;'t'
   615   007F60  6F                 	db	111	;'o'
   616   007F61  20                 	db	32
   617   007F62  20                 	db	32
   618   007F63  00                 	db	0
   619   007F64                     STR_22:
   620   007F64  41                 	db	65	;'A'
   621   007F65  6C                 	db	108	;'l'
   622   007F66  61                 	db	97	;'a'
   623   007F67  72                 	db	114	;'r'
   624   007F68  6D                 	db	109	;'m'
   625   007F69  65                 	db	101	;'e'
   626   007F6A  20                 	db	32
   627   007F6B  32                 	db	50	;'2'
   628   007F6C  20                 	db	32
   629   007F6D  61                 	db	97	;'a'
   630   007F6E  6C                 	db	108	;'l'
   631   007F6F  74                 	db	116	;'t'
   632   007F70  6F                 	db	111	;'o'
   633   007F71  20                 	db	32
   634   007F72  20                 	db	32
   635   007F73  00                 	db	0
   636   007F74                     STR_12:
   637   007F74  41                 	db	65	;'A'
   638   007F75  6C                 	db	108	;'l'
   639   007F76  74                 	db	116	;'t'
   640   007F77  65                 	db	101	;'e'
   641   007F78  72                 	db	114	;'r'
   642   007F79  61                 	db	97	;'a'
   643   007F7A  72                 	db	114	;'r'
   644   007F7B  20                 	db	32
   645   007F7C  69                 	db	105	;'i'
   646   007F7D  64                 	db	100	;'d'
   647   007F7E  69                 	db	105	;'i'
   648   007F7F  6F                 	db	111	;'o'
   649   007F80  6D                 	db	109	;'m'
   650   007F81  61                 	db	97	;'a'
   651   007F82  20                 	db	32
   652   007F83  00                 	db	0
   653   007F84                     STR_14:
   654   007F84  41                 	db	65	;'A'
   655   007F85  6C                 	db	108	;'l'
   656   007F86  74                 	db	116	;'t'
   657   007F87  65                 	db	101	;'e'
   658   007F88  72                 	db	114	;'r'
   659   007F89  61                 	db	97	;'a'
   660   007F8A  72                 	db	114	;'r'
   661   007F8B  20                 	db	32
   662   007F8C  61                 	db	97	;'a'
   663   007F8D  6C                 	db	108	;'l'
   664   007F8E  61                 	db	97	;'a'
   665   007F8F  72                 	db	114	;'r'
   666   007F90  6D                 	db	109	;'m'
   667   007F91  65                 	db	101	;'e'
   668   007F92  20                 	db	32
   669   007F93  00                 	db	0
   670   007F94                     STR_20:
   671   007F94  41                 	db	65	;'A'
   672   007F95  6C                 	db	108	;'l'
   673   007F96  61                 	db	97	;'a'
   674   007F97  72                 	db	114	;'r'
   675   007F98  6D                 	db	109	;'m'
   676   007F99  65                 	db	101	;'e'
   677   007F9A  20                 	db	32
   678   007F9B  31                 	db	49	;'1'
   679   007F9C  20                 	db	32
   680   007F9D  62                 	db	98	;'b'
   681   007F9E  61                 	db	97	;'a'
   682   007F9F  69                 	db	105	;'i'
   683   007FA0  78                 	db	120	;'x'
   684   007FA1  6F                 	db	111	;'o'
   685   007FA2  20                 	db	32
   686   007FA3  00                 	db	0
   687   007FA4                     STR_24:
   688   007FA4  41                 	db	65	;'A'
   689   007FA5  6C                 	db	108	;'l'
   690   007FA6  61                 	db	97	;'a'
   691   007FA7  72                 	db	114	;'r'
   692   007FA8  6D                 	db	109	;'m'
   693   007FA9  65                 	db	101	;'e'
   694   007FAA  20                 	db	32
   695   007FAB  32                 	db	50	;'2'
   696   007FAC  20                 	db	32
   697   007FAD  62                 	db	98	;'b'
   698   007FAE  61                 	db	97	;'a'
   699   007FAF  69                 	db	105	;'i'
   700   007FB0  78                 	db	120	;'x'
   701   007FB1  6F                 	db	111	;'o'
   702   007FB2  20                 	db	32
   703   007FB3  00                 	db	0
   704   007FB4                     STR_13:
   705   007FB4  43                 	db	67	;'C'
   706   007FB5  68                 	db	104	;'h'
   707   007FB6  61                 	db	97	;'a'
   708   007FB7  6E                 	db	110	;'n'
   709   007FB8  67                 	db	103	;'g'
   710   007FB9  65                 	db	101	;'e'
   711   007FBA  20                 	db	32
   712   007FBB  6C                 	db	108	;'l'
   713   007FBC  61                 	db	97	;'a'
   714   007FBD  6E                 	db	110	;'n'
   715   007FBE  67                 	db	103	;'g'
   716   007FBF  75                 	db	117	;'u'
   717   007FC0  61                 	db	97	;'a'
   718   007FC1  67                 	db	103	;'g'
   719   007FC2  65                 	db	101	;'e'
   720   007FC3  00                 	db	0
   721   007FC4                     STR_10:
   722   007FC4  53                 	db	83	;'S'
   723   007FC5  45                 	db	69	;'E'
   724   007FC6  4E                 	db	78	;'N'
   725   007FC7  53                 	db	83	;'S'
   726   007FC8  4F                 	db	79	;'O'
   727   007FC9  52                 	db	82	;'R'
   728   007FCA  20                 	db	32
   729   007FCB  31                 	db	49	;'1'
   730   007FCC  3A                 	db	58	;':'
   731   007FCD  00                 	db	0
   732   007FCE                     STR_26:
   733   007FCE  53                 	db	83	;'S'
   734   007FCF  45                 	db	69	;'E'
   735   007FD0  4E                 	db	78	;'N'
   736   007FD1  53                 	db	83	;'S'
   737   007FD2  4F                 	db	79	;'O'
   738   007FD3  52                 	db	82	;'R'
   739   007FD4  20                 	db	32
   740   007FD5  32                 	db	50	;'2'
   741   007FD6  3A                 	db	58	;':'
   742   007FD7  00                 	db	0
   743   007FD8                     STR_35:
   744   007FD8  56                 	db	86	;'V'
   745   007FD9  61                 	db	97	;'a'
   746   007FDA  6C                 	db	108	;'l'
   747   007FDB  75                 	db	117	;'u'
   748   007FDC  65                 	db	101	;'e'
   749   007FDD  20                 	db	32
   750   007FDE  3A                 	db	58	;':'
   751   007FDF  20                 	db	32
   752   007FE0  00                 	db	0
   753   007FE1                     STR_34:
   754   007FE1  56                 	db	86	;'V'
   755   007FE2  61                 	db	97	;'a'
   756   007FE3  6C                 	db	108	;'l'
   757   007FE4  6F                 	db	111	;'o'
   758   007FE5  72                 	db	114	;'r'
   759   007FE6  20                 	db	32
   760   007FE7  3A                 	db	58	;':'
   761   007FE8  20                 	db	32
   762   007FE9  00                 	db	0
   763   007FEA                     STR_42:
   764   007FEA  20                 	db	32
   765   007FEB  20                 	db	32
   766   007FEC  21                 	db	33
   767   007FED  41                 	db	65	;'A'
   768   007FEE  00                 	db	0
   769   007FEF                     STR_44:
   770   007FEF  20                 	db	32
   771   007FF0  20                 	db	32
   772   007FF1  21                 	db	33
   773   007FF2  42                 	db	66	;'B'
   774   007FF3  00                 	db	0
   775   007FF4                     STR_43:
   776   007FF4  20                 	db	32
   777   007FF5  20                 	db	32
   778   007FF6  21                 	db	33
   779   007FF7  48                 	db	72	;'H'
   780   007FF8  00                 	db	0
   781   007FF9                     STR_45:
   782   007FF9  20                 	db	32
   783   007FFA  20                 	db	32
   784   007FFB  21                 	db	33
   785   007FFC  4C                 	db	76	;'L'
   786   007FFD  00                 	db	0
   787   007FFE  00                 	db	0	; dummy byte at the end
   788   000000                     
   789                           ; #config settings
   790                           
   791                           	psect	cinit
   792   003B6A                     __pcinit:
   793                           	callstack 0
   794   003B6A                     start_initialization:
   795                           	callstack 0
   796   003B6A                     __initialization:
   797                           	callstack 0
   798                           
   799                           ; Initialize objects allocated to BANK0 (80 bytes)
   800                           ; load TBLPTR registers with __pidataBANK0
   801   003B6A  0E68               	movlw	low __pidataBANK0
   802   003B6C  6EF6               	movwf	tblptrl,c
   803   003B6E  0E3D               	movlw	high __pidataBANK0
   804   003B70  6EF7               	movwf	tblptrh,c
   805   003B72  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   806   003B74  6EF8               	movwf	tblptru,c
   807   003B76  EE00  F060         	lfsr	0,__pdataBANK0
   808   003B7A  EE10 F050          	lfsr	1,80
   809   003B7E                     copy_data0:
   810   003B7E  0009               	tblrd		*+
   811   003B80  CFF5 FFEE          	movff	tablat,postinc0
   812   003B84  50E5               	movf	postdec1,w,c
   813   003B86  50E1               	movf	fsr1l,w,c
   814   003B88  E1FA               	bnz	copy_data0
   815                           
   816                           ; Clear objects allocated to BANK0 (45 bytes)
   817   003B8A  EE00  F0B0         	lfsr	0,__pbssBANK0
   818   003B8E  0E2D               	movlw	45
   819   003B90                     clear_0:
   820   003B90  6AEE               	clrf	postinc0,c
   821   003B92  06E8               	decf	wreg,f,c
   822   003B94  E1FD               	bnz	clear_0
   823   003B96                     end_of_initialization:
   824                           	callstack 0
   825   003B96                     __end_of__initialization:
   826                           	callstack 0
   827   003B96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   828   003B98  6EF8               	movwf	tblptru,c
   829   003B9A  0100               	movlb	0
   830   003B9C  EF08  F01E         	goto	_main	;jump to C main() function
   831                           
   832                           	psect	bssBANK0
   833   0000B0                     __pbssBANK0:
   834                           	callstack 0
   835   0000B0                     _tela_ant:
   836                           	callstack 0
   837   0000B0                     	ds	2
   838   0000B2                     _timer:
   839                           	callstack 0
   840   0000B2                     	ds	2
   841   0000B4                     _protocolo_index:
   842                           	callstack 0
   843   0000B4                     	ds	2
   844   0000B6                     _key_ant:
   845                           	callstack 0
   846   0000B6                     	ds	2
   847   0000B8                     _state:
   848                           	callstack 0
   849   0000B8                     	ds	1
   850   0000B9                     _j:
   851                           	callstack 0
   852   0000B9                     	ds	1
   853   0000BA                     _valorAntigo:
   854                           	callstack 0
   855   0000BA                     	ds	1
   856   0000BB                     _valor:
   857                           	callstack 0
   858   0000BB                     	ds	1
   859   0000BC                     _started:
   860                           	callstack 0
   861   0000BC                     	ds	1
   862   0000BD                     _protocolo:
   863                           	callstack 0
   864   0000BD                     	ds	32
   865                           
   866                           	psect	dataBANK0
   867   000060                     __pdataBANK0:
   868                           	callstack 0
   869   000060                     _msgsL2:
   870                           	callstack 0
   871   000060                     	ds	32
   872   000080                     _msgsL1:
   873                           	callstack 0
   874   000080                     	ds	32
   875   0000A0                     _serialAlerts:
   876                           	callstack 0
   877   0000A0                     	ds	8
   878   0000A8                     _lcdAlerts:
   879                           	callstack 0
   880   0000A8                     	ds	8
   881                           
   882                           	psect	cstackBANK0
   883   0000DD                     __pcstackBANK0:
   884                           	callstack 0
   885   0000DD                     ??_eventRead:
   886                           
   887                           ; 1 bytes @ 0x0
   888   0000DD                     	ds	1
   889   0000DE                     eventRead@ev:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x1
   893   0000DE                     	ds	2
   894   0000E0                     eventRead@key:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x3
   898   0000E0                     	ds	2
   899   0000E2                     eventRead@serial_command:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x5
   903   0000E2                     	ds	1
   904   0000E3                     ??_smLoop:
   905                           
   906                           ; 1 bytes @ 0x6
   907   0000E3                     	ds	2
   908   0000E5                     smLoop@evento:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x8
   912   0000E5                     	ds	1
   913                           
   914                           	psect	cstackCOMRAM
   915   000001                     __pcstackCOMRAM:
   916                           	callstack 0
   917   000001                     ??_kpRead:
   918   000001                     ?_digitalRead:
   919                           	callstack 0
   920   000001                     ?_getTimer:
   921                           	callstack 0
   922   000001                     ?___wmul:
   923                           	callstack 0
   924   000001                     ?___awdiv:
   925                           	callstack 0
   926   000001                     ?___xxtofl:
   927                           	callstack 0
   928   000001                     Delay40us@j:
   929                           	callstack 0
   930   000001                     Delay2ms@j:
   931                           	callstack 0
   932   000001                     lcdCommand4bits@data:
   933                           	callstack 0
   934   000001                     serialSend@c:
   935                           	callstack 0
   936   000001                     serialRead@resp:
   937                           	callstack 0
   938   000001                     setState@newState:
   939                           	callstack 0
   940   000001                     digitalWrite@pin:
   941                           	callstack 0
   942   000001                     digitalRead@pin:
   943                           	callstack 0
   944   000001                     pinMode@pin:
   945                           	callstack 0
   946   000001                     timerReset@tempo:
   947                           	callstack 0
   948   000001                     ___wmul@multiplier:
   949                           	callstack 0
   950   000001                     ___awdiv@dividend:
   951                           	callstack 0
   952   000001                     memset@dest:
   953                           	callstack 0
   954   000001                     ___flge@ff1:
   955                           	callstack 0
   956   000001                     ___xxtofl@val:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x0
   960   000001                     	ds	1
   961   000002                     Delay2ms@k:
   962                           	callstack 0
   963   000002                     lcdCommand4bits@cmd:
   964                           	callstack 0
   965   000002                     serialString@msg:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x1
   969   000002                     	ds	1
   970   000003                     ??_digitalRead:
   971   000003                     lcdCommand@cmd:
   972                           	callstack 0
   973   000003                     lcdData@valor:
   974                           	callstack 0
   975   000003                     digitalWrite@value:
   976                           	callstack 0
   977   000003                     pinMode@type:
   978                           	callstack 0
   979   000003                     timerReset@ciclos:
   980                           	callstack 0
   981   000003                     setTimer@val:
   982                           	callstack 0
   983   000003                     ___wmul@multiplicand:
   984                           	callstack 0
   985   000003                     ___awdiv@divisor:
   986                           	callstack 0
   987   000003                     memset@c:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x2
   991   000003                     	ds	1
   992   000004                     ??_serialString:
   993   000004                     lcdInit@i:
   994                           	callstack 0
   995   000004                     lcdString@msg:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x3
   999   000004                     	ds	1
  1000   000005                     ??_pinMode:
  1001   000005                     ??_digitalWrite:
  1002   000005                     ??___xxtofl:
  1003   000005                     ___awdiv@counter:
  1004                           	callstack 0
  1005   000005                     ___wmul@product:
  1006                           	callstack 0
  1007   000005                     memset@n:
  1008                           	callstack 0
  1009   000005                     ___flge@ff2:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x4
  1013   000005                     	ds	1
  1014   000006                     ??_lcdString:
  1015   000006                     ___awdiv@sign:
  1016                           	callstack 0
  1017   000006                     serialString@i:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x5
  1021   000006                     	ds	1
  1022   000007                     ??_memset:
  1023   000007                     i2c_write_bit@bit:
  1024                           	callstack 0
  1025   000007                     i2c_read_bit@bit:
  1026                           	callstack 0
  1027   000007                     ledOff@pos:
  1028                           	callstack 0
  1029   000007                     ledBlink@pos:
  1030                           	callstack 0
  1031   000007                     ___awdiv@quotient:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x6
  1035   000007                     	ds	1
  1036   000008                     i2cWriteByte@send_stop:
  1037                           	callstack 0
  1038   000008                     i2cReadByte@send_stop:
  1039                           	callstack 0
  1040   000008                     lcdString@i:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x7
  1044   000008                     	ds	1
  1045   000009                     ??_ledBlink:
  1046   000009                     ??_ledOff:
  1047   000009                     ??_i2cReadByte:
  1048   000009                     ??___flge:
  1049   000009                     ?___awmod:
  1050                           	callstack 0
  1051   000009                     i2cWriteByte@byte:
  1052                           	callstack 0
  1053   000009                     ___xxtofl@sign:
  1054                           	callstack 0
  1055   000009                     ___awmod@dividend:
  1056                           	callstack 0
  1057   000009                     memset@k:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x8
  1061   000009                     	ds	1
  1062   00000A                     i2cWriteByte@send_start:
  1063                           	callstack 0
  1064   00000A                     i2cReadByte@nack:
  1065                           	callstack 0
  1066   00000A                     ___xxtofl@exp:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x9
  1070   00000A                     	ds	1
  1071   00000B                     i2cWriteByte@bit:
  1072                           	callstack 0
  1073   00000B                     i2cReadByte@bit:
  1074                           	callstack 0
  1075   00000B                     ___awmod@divisor:
  1076                           	callstack 0
  1077   00000B                     memset@s:
  1078                           	callstack 0
  1079   00000B                     ___xxtofl@arg:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0xA
  1083   00000B                     	ds	2
  1084   00000D                     i2cReadByte@byte:
  1085                           	callstack 0
  1086   00000D                     ___awmod@counter:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0xC
  1090   00000D                     	ds	1
  1091   00000E                     ?_dsReadData:
  1092                           	callstack 0
  1093   00000E                     ___awmod@sign:
  1094                           	callstack 0
  1095   00000E                     dsReadData@address:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0xD
  1099   00000E                     	ds	1
  1100   00000F                     ?___fldiv:
  1101                           	callstack 0
  1102   00000F                     ___fldiv@b:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0xE
  1106   00000F                     	ds	1
  1107   000010                     ??_dsReadData:
  1108                           
  1109                           ; 1 bytes @ 0xF
  1110   000010                     	ds	1
  1111   000011                     dsReadData@result:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x10
  1115   000011                     	ds	2
  1116   000013                     ?_getAlarmLevel:
  1117                           	callstack 0
  1118   000013                     ?_getLanguage:
  1119                           	callstack 0
  1120   000013                     getAlarmLevel@alarm:
  1121                           	callstack 0
  1122   000013                     ___fldiv@a:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0x12
  1126   000013                     	ds	2
  1127   000015                     getAlarmLevel@level:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x14
  1131   000015                     	ds	2
  1132   000017                     ??_getAlarmLevel:
  1133   000017                     ??___fldiv:
  1134                           
  1135                           ; 1 bytes @ 0x16
  1136   000017                     	ds	4
  1137   00001B                     ___fldiv@rem:
  1138                           	callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x1A
  1141   00001B                     	ds	4
  1142   00001F                     ___fldiv@sign:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x1E
  1146   00001F                     	ds	1
  1147   000020                     ___fldiv@new_exp:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x1F
  1151   000020                     	ds	2
  1152   000022                     ___fldiv@grs:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x21
  1156   000022                     	ds	4
  1157   000026                     ___fldiv@bexp:
  1158                           	callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x25
  1161   000026                     	ds	1
  1162   000027                     ___fldiv@aexp:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x26
  1166   000027                     	ds	1
  1167   000028                     ?___fladd:
  1168                           	callstack 0
  1169   000028                     ___fladd@b:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x27
  1173   000028                     	ds	4
  1174   00002C                     ___fladd@a:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x2B
  1178   00002C                     	ds	4
  1179   000030                     ??___fladd:
  1180                           
  1181                           ; 1 bytes @ 0x2F
  1182   000030                     	ds	4
  1183   000034                     ___fladd@signs:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x33
  1187   000034                     	ds	1
  1188   000035                     ___fladd@aexp:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x34
  1192   000035                     	ds	1
  1193   000036                     ___fladd@bexp:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x35
  1197   000036                     	ds	1
  1198   000037                     ___fladd@grs:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x36
  1202   000037                     	ds	1
  1203   000038                     ?___fltol:
  1204                           	callstack 0
  1205   000038                     dsWriteData@address:
  1206                           	callstack 0
  1207   000038                     ___fltol@f1:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x37
  1211   000038                     	ds	2
  1212   00003A                     dsWriteData@value:
  1213                           	callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x39
  1216   00003A                     	ds	1
  1217   00003B                     dsWriteData@i:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x3A
  1221   00003B                     	ds	1
  1222   00003C                     ??___fltol:
  1223                           
  1224                           ; 1 bytes @ 0x3B
  1225   00003C                     	ds	3
  1226   00003F                     setAlarmLevel@alarm:
  1227                           	callstack 0
  1228   00003F                     setLanguage@newLanguage:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x3E
  1232   00003F                     	ds	1
  1233   000040                     ___fltol@sign1:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x3F
  1237   000040                     	ds	1
  1238   000041                     ___fltol@exp1:
  1239                           	callstack 0
  1240   000041                     setAlarmLevel@level:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x40
  1244   000041                     	ds	1
  1245   000042                     ?_adcRead:
  1246                           	callstack 0
  1247   000042                     adcRead@channel:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x41
  1251   000042                     	ds	1
  1252   000043                     setAlarmLevel@newAlarmLevel:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x42
  1256   000043                     	ds	1
  1257   000044                     adcRead@ADvalor:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x43
  1261   000044                     	ds	1
  1262   000045                     ??_setAlarmLevel:
  1263                           
  1264                           ; 1 bytes @ 0x44
  1265   000045                     	ds	1
  1266   000046                     ?_getSensorValue:
  1267                           	callstack 0
  1268   000046                     getSensorValue@sensor:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x45
  1272   000046                     	ds	1
  1273   000047                     _setAlarmLevel$538:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x46
  1277   000047                     	ds	1
  1278   000048                     getSensorValue@value:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x47
  1282   000048                     	ds	1
  1283   000049                     _setAlarmLevel$539:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x48
  1287   000049                     	ds	1
  1288   00004A                     ?_checkAlarm:
  1289                           	callstack 0
  1290   00004A                     lcdInt@val:
  1291                           	callstack 0
  1292   00004A                     checkAlarm@alarm:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x49
  1296   00004A                     	ds	1
  1297   00004B                     _setAlarmLevel$540:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x4A
  1301   00004B                     	ds	1
  1302   00004C                     checkAlarm@level:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x4B
  1306   00004C                     	ds	1
  1307   00004D                     _setAlarmLevel$541:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x4C
  1311   00004D                     	ds	1
  1312   00004E                     ??_checkAlarm:
  1313                           
  1314                           ; 1 bytes @ 0x4D
  1315   00004E                     	ds	1
  1316   00004F                     ??_processarProtocolo:
  1317   00004F                     
  1318                           ; 1 bytes @ 0x4E
  1319   00004F                     	ds	2
  1320   000051                     serialInt@val:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x50
  1324   000051                     	ds	1
  1325   000052                     processarProtocolo@err:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x51
  1329   000052                     	ds	1
  1330   000053                     outputPrint@numTela:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x52
  1334   000053                     	ds	1
  1335   000054                     processarProtocolo@i:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x53
  1339   000054                     	ds	1
  1340   000055                     outputPrint@idioma:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x54
  1344   000055                     	ds	1
  1345   000056                     processarProtocolo@i_89:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x55
  1349   000056                     	ds	1
  1350   000057                     ??_outputPrint:
  1351                           
  1352                           ; 1 bytes @ 0x56
  1353   000057                     	ds	1
  1354   000058                     processarProtocolo@i_92:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x57
  1358   000058                     	ds	2
  1359   00005A                     processarProtocolo@i_95:
  1360                           	callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x59
  1363   00005A                     	ds	2
  1364   00005C                     processarProtocolo@new_value:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x5B
  1368   00005C                     	ds	2
  1369   00005E                     ?_eventRead:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x5D
  1373   00005E                     	ds	2
  1374   000060                     
  1375                           ; 1 bytes @ 0x5F
  1376 ;;
  1377 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1378 ;;
  1379 ;; *************** function _main *****************
  1380 ;; Defined at:
  1381 ;;		line 15 in file "main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels required when called: 9
  1401 ;; This function calls:
  1402 ;;		_adcInit
  1403 ;;		_dsInit
  1404 ;;		_eventInit
  1405 ;;		_kpInit
  1406 ;;		_lcdInit
  1407 ;;		_ledInit
  1408 ;;		_smLoop
  1409 ;;		_timerInit
  1410 ;;		_timerReset
  1411 ;;		_timerWait
  1412 ;;		_varInit
  1413 ;; This function is called by:
  1414 ;;		Startup code after reset
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text0
  1419   003C10                     __ptext0:
  1420                           	callstack 0
  1421   003C10                     _main:
  1422                           	callstack 22
  1423   003C10                     
  1424                           ;main.c: 17:     kpInit();
  1425   003C10  EC55  F021         	call	_kpInit	;wreg free
  1426                           
  1427                           ;main.c: 18:     lcdInit();
  1428   003C14  EC5C  F020         	call	_lcdInit	;wreg free
  1429                           
  1430                           ;main.c: 19:     timerInit();
  1431   003C18  EC76  F01C         	call	_timerInit	;wreg free
  1432                           
  1433                           ;main.c: 20:     varInit();
  1434   003C1C  EC00  F025         	call	_varInit	;wreg free
  1435                           
  1436                           ;main.c: 21:     eventInit();
  1437   003C20  EC95  F01C         	call	_eventInit	;wreg free
  1438                           
  1439                           ;main.c: 22:     adcInit();
  1440   003C24  EC26  F01E         	call	_adcInit	;wreg free
  1441                           
  1442                           ;main.c: 23:     dsInit();
  1443   003C28  EC69  F01C         	call	_dsInit	;wreg free
  1444                           
  1445                           ;main.c: 24:     ledInit();
  1446   003C2C  EC6D  F01D         	call	_ledInit	;wreg free
  1447   003C30                     l454:
  1448                           
  1449                           ;main.c: 26:         timerReset(1500);
  1450   003C30  0E05               	movlw	5
  1451   003C32  6E02               	movwf	(timerReset@tempo+1)^0,c
  1452   003C34  0EDC               	movlw	220
  1453   003C36  6E01               	movwf	timerReset@tempo^0,c
  1454   003C38  ECDD  F01C         	call	_timerReset	;wreg free
  1455   003C3C                     
  1456                           ;main.c: 28:         smLoop();
  1457   003C3C  ECF6  F031         	call	_smLoop	;wreg free
  1458   003C40                     
  1459                           ;main.c: 30:         timerWait();
  1460   003C40  EC84  F01C         	call	_timerWait	;wreg free
  1461                           
  1462                           ;main.c: 31:     }
  1463   003C44  EF18  F01E         	goto	l454
  1464   003C48  EF00  F000         	goto	start
  1465   003C4C                     __end_of_main:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _varInit *****************
  1469 ;; Defined at:
  1470 ;;		line 9 in file "var.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 6
  1491 ;; This function calls:
  1492 ;;		_getAlarmLevel
  1493 ;;		_setAlarmLevel
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text1
  1500   004A00                     __ptext1:
  1501                           	callstack 0
  1502   004A00                     _varInit:
  1503                           	callstack 24
  1504   004A00                     
  1505                           ;var.c: 10:     state = 0;
  1506   004A00  0E00               	movlw	0
  1507   004A02  0100               	movlb	0	; () banked
  1508   004A04  6FB8               	movwf	_state& (0+255),b
  1509                           
  1510                           ;var.c: 11:     timer = 0;
  1511   004A06  0E00               	movlw	0
  1512   004A08  6FB3               	movwf	(_timer+1)& (0+255),b
  1513   004A0A  0E00               	movlw	0
  1514   004A0C  6FB2               	movwf	_timer& (0+255),b
  1515   004A0E                     
  1516                           ; BSR set to: 0
  1517                           ;var.c: 12:     if(getAlarmLevel(0,0) > 100) setAlarmLevel(0,0, 100);
  1518   004A0E  0E00               	movlw	0
  1519   004A10  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  1520   004A12  0E00               	movlw	0
  1521   004A14  6E13               	movwf	getAlarmLevel@alarm^0,c
  1522   004A16  0E00               	movlw	0
  1523   004A18  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  1524   004A1A  0E00               	movlw	0
  1525   004A1C  6E15               	movwf	getAlarmLevel@level^0,c
  1526   004A1E  EC82  F023         	call	_getAlarmLevel	;wreg free
  1527   004A22  BE14               	btfsc	(?_getAlarmLevel+1)^0,7,c
  1528   004A24  EF1D  F025         	goto	u6661
  1529   004A28  5014               	movf	(?_getAlarmLevel+1)^0,w,c
  1530   004A2A  E109               	bnz	u6660
  1531   004A2C  0E65               	movlw	101
  1532   004A2E  5C13               	subwf	?_getAlarmLevel^0,w,c
  1533   004A30  A0D8               	btfss	status,0,c
  1534   004A32  EF1D  F025         	goto	u6661
  1535   004A36  EF1F  F025         	goto	u6660
  1536   004A3A                     u6661:
  1537   004A3A  EF2D  F025         	goto	l560
  1538   004A3E                     u6660:
  1539   004A3E  0E00               	movlw	0
  1540   004A40  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  1541   004A42  0E00               	movlw	0
  1542   004A44  6E3F               	movwf	setAlarmLevel@alarm^0,c
  1543   004A46  0E00               	movlw	0
  1544   004A48  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  1545   004A4A  0E00               	movlw	0
  1546   004A4C  6E41               	movwf	setAlarmLevel@level^0,c
  1547   004A4E  0E00               	movlw	0
  1548   004A50  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  1549   004A52  0E64               	movlw	100
  1550   004A54  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  1551   004A56  EC12  F02B         	call	_setAlarmLevel	;wreg free
  1552   004A5A                     l560:
  1553                           
  1554                           ;var.c: 13:     if(getAlarmLevel(0,1) > 100) setAlarmLevel(0,1, 0);
  1555   004A5A  0E00               	movlw	0
  1556   004A5C  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  1557   004A5E  0E00               	movlw	0
  1558   004A60  6E13               	movwf	getAlarmLevel@alarm^0,c
  1559   004A62  0E00               	movlw	0
  1560   004A64  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  1561   004A66  0E01               	movlw	1
  1562   004A68  6E15               	movwf	getAlarmLevel@level^0,c
  1563   004A6A  EC82  F023         	call	_getAlarmLevel	;wreg free
  1564   004A6E  BE14               	btfsc	(?_getAlarmLevel+1)^0,7,c
  1565   004A70  EF43  F025         	goto	u6671
  1566   004A74  5014               	movf	(?_getAlarmLevel+1)^0,w,c
  1567   004A76  E109               	bnz	u6670
  1568   004A78  0E65               	movlw	101
  1569   004A7A  5C13               	subwf	?_getAlarmLevel^0,w,c
  1570   004A7C  A0D8               	btfss	status,0,c
  1571   004A7E  EF43  F025         	goto	u6671
  1572   004A82  EF45  F025         	goto	u6670
  1573   004A86                     u6671:
  1574   004A86  EF53  F025         	goto	l561
  1575   004A8A                     u6670:
  1576   004A8A  0E00               	movlw	0
  1577   004A8C  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  1578   004A8E  0E00               	movlw	0
  1579   004A90  6E3F               	movwf	setAlarmLevel@alarm^0,c
  1580   004A92  0E00               	movlw	0
  1581   004A94  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  1582   004A96  0E01               	movlw	1
  1583   004A98  6E41               	movwf	setAlarmLevel@level^0,c
  1584   004A9A  0E00               	movlw	0
  1585   004A9C  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  1586   004A9E  0E00               	movlw	0
  1587   004AA0  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  1588   004AA2  EC12  F02B         	call	_setAlarmLevel	;wreg free
  1589   004AA6                     l561:
  1590                           
  1591                           ;var.c: 14:     if(getAlarmLevel(1,0) > 100) setAlarmLevel(1,0, 100);
  1592   004AA6  0E00               	movlw	0
  1593   004AA8  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  1594   004AAA  0E01               	movlw	1
  1595   004AAC  6E13               	movwf	getAlarmLevel@alarm^0,c
  1596   004AAE  0E00               	movlw	0
  1597   004AB0  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  1598   004AB2  0E00               	movlw	0
  1599   004AB4  6E15               	movwf	getAlarmLevel@level^0,c
  1600   004AB6  EC82  F023         	call	_getAlarmLevel	;wreg free
  1601   004ABA  BE14               	btfsc	(?_getAlarmLevel+1)^0,7,c
  1602   004ABC  EF69  F025         	goto	u6681
  1603   004AC0  5014               	movf	(?_getAlarmLevel+1)^0,w,c
  1604   004AC2  E109               	bnz	u6680
  1605   004AC4  0E65               	movlw	101
  1606   004AC6  5C13               	subwf	?_getAlarmLevel^0,w,c
  1607   004AC8  A0D8               	btfss	status,0,c
  1608   004ACA  EF69  F025         	goto	u6681
  1609   004ACE  EF6B  F025         	goto	u6680
  1610   004AD2                     u6681:
  1611   004AD2  EF79  F025         	goto	l562
  1612   004AD6                     u6680:
  1613   004AD6  0E00               	movlw	0
  1614   004AD8  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  1615   004ADA  0E01               	movlw	1
  1616   004ADC  6E3F               	movwf	setAlarmLevel@alarm^0,c
  1617   004ADE  0E00               	movlw	0
  1618   004AE0  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  1619   004AE2  0E00               	movlw	0
  1620   004AE4  6E41               	movwf	setAlarmLevel@level^0,c
  1621   004AE6  0E00               	movlw	0
  1622   004AE8  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  1623   004AEA  0E64               	movlw	100
  1624   004AEC  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  1625   004AEE  EC12  F02B         	call	_setAlarmLevel	;wreg free
  1626   004AF2                     l562:
  1627                           
  1628                           ;var.c: 15:     if(getAlarmLevel(1,1) > 100) setAlarmLevel(1,1, 0);
  1629   004AF2  0E00               	movlw	0
  1630   004AF4  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  1631   004AF6  0E01               	movlw	1
  1632   004AF8  6E13               	movwf	getAlarmLevel@alarm^0,c
  1633   004AFA  0E00               	movlw	0
  1634   004AFC  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  1635   004AFE  0E01               	movlw	1
  1636   004B00  6E15               	movwf	getAlarmLevel@level^0,c
  1637   004B02  EC82  F023         	call	_getAlarmLevel	;wreg free
  1638   004B06  BE14               	btfsc	(?_getAlarmLevel+1)^0,7,c
  1639   004B08  EF8F  F025         	goto	u6691
  1640   004B0C  5014               	movf	(?_getAlarmLevel+1)^0,w,c
  1641   004B0E  E109               	bnz	u6690
  1642   004B10  0E65               	movlw	101
  1643   004B12  5C13               	subwf	?_getAlarmLevel^0,w,c
  1644   004B14  A0D8               	btfss	status,0,c
  1645   004B16  EF8F  F025         	goto	u6691
  1646   004B1A  EF91  F025         	goto	u6690
  1647   004B1E                     u6691:
  1648   004B1E  EF9F  F025         	goto	l564
  1649   004B22                     u6690:
  1650   004B22  0E00               	movlw	0
  1651   004B24  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  1652   004B26  0E01               	movlw	1
  1653   004B28  6E3F               	movwf	setAlarmLevel@alarm^0,c
  1654   004B2A  0E00               	movlw	0
  1655   004B2C  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  1656   004B2E  0E01               	movlw	1
  1657   004B30  6E41               	movwf	setAlarmLevel@level^0,c
  1658   004B32  0E00               	movlw	0
  1659   004B34  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  1660   004B36  0E00               	movlw	0
  1661   004B38  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  1662   004B3A  EC12  F02B         	call	_setAlarmLevel	;wreg free
  1663   004B3E                     l564:
  1664   004B3E  0012               	return		;funcret
  1665   004B40                     __end_of_varInit:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _timerWait *****************
  1669 ;; Defined at:
  1670 ;;		line 31 in file "timer.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		None
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1684 ;;      Params:         0       0       0       0       0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1688 ;;Total ram usage:        0 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text2
  1698   003908                     __ptext2:
  1699                           	callstack 0
  1700   003908                     _timerWait:
  1701                           	callstack 30
  1702   003908                     l532:
  1703   003908  A4F2               	btfss	242,2,c	;volatile
  1704   00390A  EF89  F01C         	goto	u3511
  1705   00390E  EF8B  F01C         	goto	u3510
  1706   003912                     u3511:
  1707   003912  EF84  F01C         	goto	l532
  1708   003916                     u3510:
  1709   003916  0012               	return		;funcret
  1710   003918                     __end_of_timerWait:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _timerReset *****************
  1714 ;; Defined at:
  1715 ;;		line 37 in file "timer.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  tempo           2    0[COMRAM] unsigned int 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  ciclos          2    2[COMRAM] unsigned int 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1729 ;;      Params:         2       0       0       0       0       0       0       0       0
  1730 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1732 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1733 ;;Total ram usage:        4 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text3
  1743   0039BA                     __ptext3:
  1744                           	callstack 0
  1745   0039BA                     _timerReset:
  1746                           	callstack 30
  1747   0039BA                     
  1748                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1749   0039BA  90D8               	bcf	status,0,c
  1750   0039BC  3401               	rlcf	timerReset@tempo^0,w,c
  1751   0039BE  6E03               	movwf	timerReset@ciclos^0,c
  1752   0039C0  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1753   0039C2  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1754   0039C4                     
  1755                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1756   0039C4  1E03               	comf	timerReset@ciclos^0,f,c
  1757   0039C6  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1758   0039C8                     
  1759                           ;timer.c: 47:     ciclos -=50;
  1760   0039C8  0E32               	movlw	50
  1761   0039CA  5E03               	subwf	timerReset@ciclos^0,f,c
  1762   0039CC  0E00               	movlw	0
  1763   0039CE  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1764   0039D0                     
  1765                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1766   0039D0  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1767   0039D2  6ED7               	movwf	215,c	;volatile
  1768   0039D4                     
  1769                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1770   0039D4  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1771   0039D8                     
  1772                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1773   0039D8  94F2               	bcf	242,2,c	;volatile
  1774   0039DA  0012               	return		;funcret
  1775   0039DC                     __end_of_timerReset:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _timerInit *****************
  1779 ;; Defined at:
  1780 ;;		line 55 in file "timer.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1794 ;;      Params:         0       0       0       0       0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1797 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1798 ;;Total ram usage:        0 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text4
  1808   0038EC                     __ptext4:
  1809                           	callstack 0
  1810   0038EC                     _timerInit:
  1811                           	callstack 30
  1812   0038EC                     
  1813                           ;timer.c: 57:  T0CON = 0b00001000;
  1814   0038EC  0E08               	movlw	8
  1815   0038EE  6ED5               	movwf	213,c	;volatile
  1816   0038F0                     
  1817                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1818   0038F0  8ED5               	bsf	213,7,c	;volatile
  1819   0038F2  0012               	return		;funcret
  1820   0038F4                     __end_of_timerInit:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _smLoop *****************
  1824 ;; Defined at:
  1825 ;;		line 12 in file "stateMachine.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  evento          1    8[BANK0 ] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0
  1840 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1841 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1842 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1843 ;;Total ram usage:        3 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 8
  1846 ;; This function calls:
  1847 ;;		_eventRead
  1848 ;;		_getAlarmLevel
  1849 ;;		_getLanguage
  1850 ;;		_getState
  1851 ;;		_getTimer
  1852 ;;		_outputPrint
  1853 ;;		_setAlarmLevel
  1854 ;;		_setLanguage
  1855 ;;		_setState
  1856 ;;		_setTimer
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text5
  1863   0063EC                     __ptext5:
  1864                           	callstack 0
  1865   0063EC                     _smLoop:
  1866                           	callstack 22
  1867   0063EC                     
  1868                           ;stateMachine.c: 13:     unsigned char evento;;stateMachine.c: 16:     evento = eventRea
      +                          d();
  1869   0063EC  EC6B  F02C         	call	_eventRead	;wreg free
  1870   0063F0  505E               	movf	?_eventRead^0,w,c
  1871   0063F2  0100               	movlb	0	; () banked
  1872   0063F4  6FE5               	movwf	smLoop@evento& (0+255),b
  1873                           
  1874                           ;stateMachine.c: 18:     switch (getState()) {
  1875   0063F6  EF3F  F034         	goto	l5662
  1876   0063FA                     l5544:
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;stateMachine.c: 20:             if (evento == EV_RIGHT) {
  1880   0063FA  0E03               	movlw	3
  1881   0063FC  19E5               	xorwf	smLoop@evento& (0+255),w,b
  1882   0063FE  A4D8               	btfss	status,2,c
  1883   006400  EF04  F032         	goto	u6701
  1884   006404  EF06  F032         	goto	u6700
  1885   006408                     u6701:
  1886   006408  EF09  F032         	goto	l5548
  1887   00640C                     u6700:
  1888   00640C                     
  1889                           ; BSR set to: 0
  1890                           ;stateMachine.c: 21:                 setState(STATE_IDIOMA);
  1891   00640C  0E01               	movlw	1
  1892   00640E  EC72  F01C         	call	_setState
  1893   006412                     l5548:
  1894                           
  1895                           ;stateMachine.c: 23:             if (evento == EV_LEFT) {
  1896   006412  0E02               	movlw	2
  1897   006414  0100               	movlb	0	; () banked
  1898   006416  19E5               	xorwf	smLoop@evento& (0+255),w,b
  1899   006418  A4D8               	btfss	status,2,c
  1900   00641A  EF11  F032         	goto	u6711
  1901   00641E  EF13  F032         	goto	u6710
  1902   006422                     u6711:
  1903   006422  EF6E  F034         	goto	l5664
  1904   006426                     u6710:
  1905   006426                     
  1906                           ; BSR set to: 0
  1907                           ;stateMachine.c: 24:                 setState(STATE_ALARME_2);
  1908   006426  0E03               	movlw	3
  1909   006428  EC72  F01C         	call	_setState
  1910   00642C  EF6E  F034         	goto	l5664
  1911   006430                     l5552:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;stateMachine.c: 30:             if (evento == EV_ENTER) {
  1915   006430  0E04               	movlw	4
  1916   006432  19E5               	xorwf	smLoop@evento& (0+255),w,b
  1917   006434  A4D8               	btfss	status,2,c
  1918   006436  EF1F  F032         	goto	u6721
  1919   00643A  EF21  F032         	goto	u6720
  1920   00643E                     u6721:
  1921   00643E  EF2B  F032         	goto	l5556
  1922   006442                     u6720:
  1923   006442                     
  1924                           ; BSR set to: 0
  1925                           ;stateMachine.c: 31:                 setLanguage(getLanguage() + 1);
  1926   006442  ECAA  F01C         	call	_getLanguage	;wreg free
  1927   006446  0E01               	movlw	1
  1928   006448  2413               	addwf	?_getLanguage^0,w,c
  1929   00644A  6E3F               	movwf	setLanguage@newLanguage^0,c
  1930   00644C  0E00               	movlw	0
  1931   00644E  2014               	addwfc	(?_getLanguage+1)^0,w,c
  1932   006450  6E40               	movwf	(setLanguage@newLanguage+1)^0,c
  1933   006452  EC8C  F01C         	call	_setLanguage	;wreg free
  1934   006456                     l5556:
  1935                           
  1936                           ;stateMachine.c: 34:             if (evento == EV_RIGHT) {
  1937   006456  0E03               	movlw	3
  1938   006458  0100               	movlb	0	; () banked
  1939   00645A  19E5               	xorwf	smLoop@evento& (0+255),w,b
  1940   00645C  A4D8               	btfss	status,2,c
  1941   00645E  EF33  F032         	goto	u6731
  1942   006462  EF35  F032         	goto	u6730
  1943   006466                     u6731:
  1944   006466  EF38  F032         	goto	l5560
  1945   00646A                     u6730:
  1946   00646A                     
  1947                           ; BSR set to: 0
  1948                           ;stateMachine.c: 35:                 setState(STATE_ALARME_1);
  1949   00646A  0E02               	movlw	2
  1950   00646C  EC72  F01C         	call	_setState
  1951   006470                     l5560:
  1952                           
  1953                           ;stateMachine.c: 37:             if (evento == EV_LEFT) {
  1954   006470  0E02               	movlw	2
  1955   006472  0100               	movlb	0	; () banked
  1956   006474  19E5               	xorwf	smLoop@evento& (0+255),w,b
  1957   006476  A4D8               	btfss	status,2,c
  1958   006478  EF40  F032         	goto	u6741
  1959   00647C  EF42  F032         	goto	u6740
  1960   006480                     u6741:
  1961   006480  EF6E  F034         	goto	l5664
  1962   006484                     u6740:
  1963   006484                     
  1964                           ; BSR set to: 0
  1965                           ;stateMachine.c: 38:                 setState(STATE_HOME);
  1966   006484  0E00               	movlw	0
  1967   006486  EC72  F01C         	call	_setState
  1968   00648A  EF6E  F034         	goto	l5664
  1969   00648E                     l5564:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;stateMachine.c: 44:             if (evento == EV_RIGHT) {
  1973   00648E  0E03               	movlw	3
  1974   006490  19E5               	xorwf	smLoop@evento& (0+255),w,b
  1975   006492  A4D8               	btfss	status,2,c
  1976   006494  EF4E  F032         	goto	u6751
  1977   006498  EF50  F032         	goto	u6750
  1978   00649C                     u6751:
  1979   00649C  EF53  F032         	goto	l5568
  1980   0064A0                     u6750:
  1981   0064A0                     
  1982                           ; BSR set to: 0
  1983                           ;stateMachine.c: 45:                 setState(STATE_ALARME_2);
  1984   0064A0  0E03               	movlw	3
  1985   0064A2  EC72  F01C         	call	_setState
  1986   0064A6                     l5568:
  1987                           
  1988                           ;stateMachine.c: 47:             if (evento == EV_LEFT) {
  1989   0064A6  0E02               	movlw	2
  1990   0064A8  0100               	movlb	0	; () banked
  1991   0064AA  19E5               	xorwf	smLoop@evento& (0+255),w,b
  1992   0064AC  A4D8               	btfss	status,2,c
  1993   0064AE  EF5B  F032         	goto	u6761
  1994   0064B2  EF5D  F032         	goto	u6760
  1995   0064B6                     u6761:
  1996   0064B6  EF60  F032         	goto	l5572
  1997   0064BA                     u6760:
  1998   0064BA                     
  1999                           ; BSR set to: 0
  2000                           ;stateMachine.c: 48:                 setState(STATE_IDIOMA);
  2001   0064BA  0E01               	movlw	1
  2002   0064BC  EC72  F01C         	call	_setState
  2003   0064C0                     l5572:
  2004                           
  2005                           ;stateMachine.c: 52:             if (evento == EV_ENTER) {
  2006   0064C0  0E04               	movlw	4
  2007   0064C2  0100               	movlb	0	; () banked
  2008   0064C4  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2009   0064C6  A4D8               	btfss	status,2,c
  2010   0064C8  EF68  F032         	goto	u6771
  2011   0064CC  EF6A  F032         	goto	u6770
  2012   0064D0                     u6771:
  2013   0064D0  EF6E  F034         	goto	l5664
  2014   0064D4                     u6770:
  2015   0064D4                     
  2016                           ; BSR set to: 0
  2017                           ;stateMachine.c: 53:                 setState(STATE_ALARME_1_ALTO);
  2018   0064D4  0E04               	movlw	4
  2019   0064D6  EC72  F01C         	call	_setState
  2020   0064DA  EF6E  F034         	goto	l5664
  2021   0064DE                     l5576:
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;stateMachine.c: 58:             if (evento == EV_RIGHT) {
  2025   0064DE  0E03               	movlw	3
  2026   0064E0  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2027   0064E2  A4D8               	btfss	status,2,c
  2028   0064E4  EF76  F032         	goto	u6781
  2029   0064E8  EF78  F032         	goto	u6780
  2030   0064EC                     u6781:
  2031   0064EC  EF7B  F032         	goto	l5580
  2032   0064F0                     u6780:
  2033   0064F0                     
  2034                           ; BSR set to: 0
  2035                           ;stateMachine.c: 59:                 setState(STATE_HOME);
  2036   0064F0  0E00               	movlw	0
  2037   0064F2  EC72  F01C         	call	_setState
  2038   0064F6                     l5580:
  2039                           
  2040                           ;stateMachine.c: 61:             if (evento == EV_LEFT) {
  2041   0064F6  0E02               	movlw	2
  2042   0064F8  0100               	movlb	0	; () banked
  2043   0064FA  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2044   0064FC  A4D8               	btfss	status,2,c
  2045   0064FE  EF83  F032         	goto	u6791
  2046   006502  EF85  F032         	goto	u6790
  2047   006506                     u6791:
  2048   006506  EF88  F032         	goto	l5584
  2049   00650A                     u6790:
  2050   00650A                     
  2051                           ; BSR set to: 0
  2052                           ;stateMachine.c: 62:                 setState(STATE_ALARME_1);
  2053   00650A  0E02               	movlw	2
  2054   00650C  EC72  F01C         	call	_setState
  2055   006510                     l5584:
  2056                           
  2057                           ;stateMachine.c: 66:             if (evento == EV_ENTER) {
  2058   006510  0E04               	movlw	4
  2059   006512  0100               	movlb	0	; () banked
  2060   006514  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2061   006516  A4D8               	btfss	status,2,c
  2062   006518  EF90  F032         	goto	u6801
  2063   00651C  EF92  F032         	goto	u6800
  2064   006520                     u6801:
  2065   006520  EF6E  F034         	goto	l5664
  2066   006524                     u6800:
  2067   006524                     
  2068                           ; BSR set to: 0
  2069                           ;stateMachine.c: 67:                 setState(STATE_ALARME_2_ALTO);
  2070   006524  0E06               	movlw	6
  2071   006526  EC72  F01C         	call	_setState
  2072   00652A  EF6E  F034         	goto	l5664
  2073   00652E                     l5588:
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;stateMachine.c: 72:             if (evento == EV_RIGHT || evento == EV_LEFT) {
  2077   00652E  0E03               	movlw	3
  2078   006530  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2079   006532  B4D8               	btfsc	status,2,c
  2080   006534  EF9E  F032         	goto	u6811
  2081   006538  EFA0  F032         	goto	u6810
  2082   00653C                     u6811:
  2083   00653C  EFA9  F032         	goto	l5592
  2084   006540                     u6810:
  2085   006540                     
  2086                           ; BSR set to: 0
  2087   006540  0E02               	movlw	2
  2088   006542  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2089   006544  A4D8               	btfss	status,2,c
  2090   006546  EFA7  F032         	goto	u6821
  2091   00654A  EFA9  F032         	goto	u6820
  2092   00654E                     u6821:
  2093   00654E  EFAC  F032         	goto	l5594
  2094   006552                     u6820:
  2095   006552                     l5592:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;stateMachine.c: 73:                 setState(STATE_ALARME_1_BAIXO);
  2099   006552  0E05               	movlw	5
  2100   006554  EC72  F01C         	call	_setState
  2101   006558                     l5594:
  2102                           
  2103                           ;stateMachine.c: 75:             if (evento == EV_UP) {
  2104   006558  0100               	movlb	0	; () banked
  2105   00655A  51E5               	movf	smLoop@evento& (0+255),w,b
  2106   00655C  A4D8               	btfss	status,2,c
  2107   00655E  EFB3  F032         	goto	u6831
  2108   006562  EFB5  F032         	goto	u6830
  2109   006566                     u6831:
  2110   006566  EFCF  F032         	goto	l5598
  2111   00656A                     u6830:
  2112   00656A                     
  2113                           ; BSR set to: 0
  2114                           ;stateMachine.c: 76:                 setAlarmLevel(0, 0, getAlarmLevel(0, 0) + 1);
  2115   00656A  0E00               	movlw	0
  2116   00656C  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  2117   00656E  0E00               	movlw	0
  2118   006570  6E3F               	movwf	setAlarmLevel@alarm^0,c
  2119   006572  0E00               	movlw	0
  2120   006574  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  2121   006576  0E00               	movlw	0
  2122   006578  6E41               	movwf	setAlarmLevel@level^0,c
  2123   00657A  0E00               	movlw	0
  2124   00657C  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  2125   00657E  0E00               	movlw	0
  2126   006580  6E13               	movwf	getAlarmLevel@alarm^0,c
  2127   006582  0E00               	movlw	0
  2128   006584  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  2129   006586  0E00               	movlw	0
  2130   006588  6E15               	movwf	getAlarmLevel@level^0,c
  2131   00658A  EC82  F023         	call	_getAlarmLevel	;wreg free
  2132   00658E  0E01               	movlw	1
  2133   006590  2413               	addwf	?_getAlarmLevel^0,w,c
  2134   006592  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  2135   006594  0E00               	movlw	0
  2136   006596  2014               	addwfc	(?_getAlarmLevel+1)^0,w,c
  2137   006598  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  2138   00659A  EC12  F02B         	call	_setAlarmLevel	;wreg free
  2139   00659E                     l5598:
  2140                           
  2141                           ;stateMachine.c: 78:             if (evento == EV_DOWN) {
  2142   00659E  0100               	movlb	0	; () banked
  2143   0065A0  05E5               	decf	smLoop@evento& (0+255),w,b
  2144   0065A2  A4D8               	btfss	status,2,c
  2145   0065A4  EFD6  F032         	goto	u6841
  2146   0065A8  EFD8  F032         	goto	u6840
  2147   0065AC                     u6841:
  2148   0065AC  EFF2  F032         	goto	l5602
  2149   0065B0                     u6840:
  2150   0065B0                     
  2151                           ; BSR set to: 0
  2152                           ;stateMachine.c: 79:                 setAlarmLevel(0, 0, getAlarmLevel(0, 0) - 1);
  2153   0065B0  0E00               	movlw	0
  2154   0065B2  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  2155   0065B4  0E00               	movlw	0
  2156   0065B6  6E3F               	movwf	setAlarmLevel@alarm^0,c
  2157   0065B8  0E00               	movlw	0
  2158   0065BA  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  2159   0065BC  0E00               	movlw	0
  2160   0065BE  6E41               	movwf	setAlarmLevel@level^0,c
  2161   0065C0  0E00               	movlw	0
  2162   0065C2  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  2163   0065C4  0E00               	movlw	0
  2164   0065C6  6E13               	movwf	getAlarmLevel@alarm^0,c
  2165   0065C8  0E00               	movlw	0
  2166   0065CA  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  2167   0065CC  0E00               	movlw	0
  2168   0065CE  6E15               	movwf	getAlarmLevel@level^0,c
  2169   0065D0  EC82  F023         	call	_getAlarmLevel	;wreg free
  2170   0065D4  0EFF               	movlw	255
  2171   0065D6  2413               	addwf	?_getAlarmLevel^0,w,c
  2172   0065D8  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  2173   0065DA  0EFF               	movlw	255
  2174   0065DC  2014               	addwfc	(?_getAlarmLevel+1)^0,w,c
  2175   0065DE  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  2176   0065E0  EC12  F02B         	call	_setAlarmLevel	;wreg free
  2177   0065E4                     l5602:
  2178                           
  2179                           ;stateMachine.c: 82:             if (evento == EV_ENTER) {
  2180   0065E4  0E04               	movlw	4
  2181   0065E6  0100               	movlb	0	; () banked
  2182   0065E8  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2183   0065EA  A4D8               	btfss	status,2,c
  2184   0065EC  EFFA  F032         	goto	u6851
  2185   0065F0  EFFC  F032         	goto	u6850
  2186   0065F4                     u6851:
  2187   0065F4  EF6E  F034         	goto	l5664
  2188   0065F8                     u6850:
  2189   0065F8                     
  2190                           ; BSR set to: 0
  2191                           ;stateMachine.c: 83:                 setState(STATE_ALARME_1);
  2192   0065F8  0E02               	movlw	2
  2193   0065FA  EC72  F01C         	call	_setState
  2194   0065FE  EF6E  F034         	goto	l5664
  2195   006602                     l5606:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;stateMachine.c: 88:             if (evento == EV_RIGHT || evento == EV_LEFT) {
  2199   006602  0E03               	movlw	3
  2200   006604  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2201   006606  B4D8               	btfsc	status,2,c
  2202   006608  EF08  F033         	goto	u6861
  2203   00660C  EF0A  F033         	goto	u6860
  2204   006610                     u6861:
  2205   006610  EF13  F033         	goto	l5610
  2206   006614                     u6860:
  2207   006614                     
  2208                           ; BSR set to: 0
  2209   006614  0E02               	movlw	2
  2210   006616  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2211   006618  A4D8               	btfss	status,2,c
  2212   00661A  EF11  F033         	goto	u6871
  2213   00661E  EF13  F033         	goto	u6870
  2214   006622                     u6871:
  2215   006622  EF16  F033         	goto	l5612
  2216   006626                     u6870:
  2217   006626                     l5610:
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;stateMachine.c: 89:                 setState(STATE_ALARME_1_ALTO);
  2221   006626  0E04               	movlw	4
  2222   006628  EC72  F01C         	call	_setState
  2223   00662C                     l5612:
  2224                           
  2225                           ;stateMachine.c: 92:             if (evento == EV_UP) {
  2226   00662C  0100               	movlb	0	; () banked
  2227   00662E  51E5               	movf	smLoop@evento& (0+255),w,b
  2228   006630  A4D8               	btfss	status,2,c
  2229   006632  EF1D  F033         	goto	u6881
  2230   006636  EF1F  F033         	goto	u6880
  2231   00663A                     u6881:
  2232   00663A  EF39  F033         	goto	l5616
  2233   00663E                     u6880:
  2234   00663E                     
  2235                           ; BSR set to: 0
  2236                           ;stateMachine.c: 93:                 setAlarmLevel(0, 1, getAlarmLevel(0, 1) + 1);
  2237   00663E  0E00               	movlw	0
  2238   006640  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  2239   006642  0E00               	movlw	0
  2240   006644  6E3F               	movwf	setAlarmLevel@alarm^0,c
  2241   006646  0E00               	movlw	0
  2242   006648  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  2243   00664A  0E01               	movlw	1
  2244   00664C  6E41               	movwf	setAlarmLevel@level^0,c
  2245   00664E  0E00               	movlw	0
  2246   006650  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  2247   006652  0E00               	movlw	0
  2248   006654  6E13               	movwf	getAlarmLevel@alarm^0,c
  2249   006656  0E00               	movlw	0
  2250   006658  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  2251   00665A  0E01               	movlw	1
  2252   00665C  6E15               	movwf	getAlarmLevel@level^0,c
  2253   00665E  EC82  F023         	call	_getAlarmLevel	;wreg free
  2254   006662  0E01               	movlw	1
  2255   006664  2413               	addwf	?_getAlarmLevel^0,w,c
  2256   006666  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  2257   006668  0E00               	movlw	0
  2258   00666A  2014               	addwfc	(?_getAlarmLevel+1)^0,w,c
  2259   00666C  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  2260   00666E  EC12  F02B         	call	_setAlarmLevel	;wreg free
  2261   006672                     l5616:
  2262                           
  2263                           ;stateMachine.c: 95:             if (evento == EV_DOWN) {
  2264   006672  0100               	movlb	0	; () banked
  2265   006674  05E5               	decf	smLoop@evento& (0+255),w,b
  2266   006676  A4D8               	btfss	status,2,c
  2267   006678  EF40  F033         	goto	u6891
  2268   00667C  EF42  F033         	goto	u6890
  2269   006680                     u6891:
  2270   006680  EF5C  F033         	goto	l5620
  2271   006684                     u6890:
  2272   006684                     
  2273                           ; BSR set to: 0
  2274                           ;stateMachine.c: 96:                 setAlarmLevel(0, 1, getAlarmLevel(0, 1) - 1);
  2275   006684  0E00               	movlw	0
  2276   006686  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  2277   006688  0E00               	movlw	0
  2278   00668A  6E3F               	movwf	setAlarmLevel@alarm^0,c
  2279   00668C  0E00               	movlw	0
  2280   00668E  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  2281   006690  0E01               	movlw	1
  2282   006692  6E41               	movwf	setAlarmLevel@level^0,c
  2283   006694  0E00               	movlw	0
  2284   006696  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  2285   006698  0E00               	movlw	0
  2286   00669A  6E13               	movwf	getAlarmLevel@alarm^0,c
  2287   00669C  0E00               	movlw	0
  2288   00669E  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  2289   0066A0  0E01               	movlw	1
  2290   0066A2  6E15               	movwf	getAlarmLevel@level^0,c
  2291   0066A4  EC82  F023         	call	_getAlarmLevel	;wreg free
  2292   0066A8  0EFF               	movlw	255
  2293   0066AA  2413               	addwf	?_getAlarmLevel^0,w,c
  2294   0066AC  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  2295   0066AE  0EFF               	movlw	255
  2296   0066B0  2014               	addwfc	(?_getAlarmLevel+1)^0,w,c
  2297   0066B2  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  2298   0066B4  EC12  F02B         	call	_setAlarmLevel	;wreg free
  2299   0066B8                     l5620:
  2300                           
  2301                           ;stateMachine.c: 99:             if (evento == EV_ENTER) {
  2302   0066B8  0E04               	movlw	4
  2303   0066BA  0100               	movlb	0	; () banked
  2304   0066BC  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2305   0066BE  A4D8               	btfss	status,2,c
  2306   0066C0  EF64  F033         	goto	u6901
  2307   0066C4  EF66  F033         	goto	u6900
  2308   0066C8                     u6901:
  2309   0066C8  EF6E  F034         	goto	l5664
  2310   0066CC                     u6900:
  2311   0066CC                     
  2312                           ; BSR set to: 0
  2313                           ;stateMachine.c: 100:                 setState(STATE_ALARME_1);
  2314   0066CC  0E02               	movlw	2
  2315   0066CE  EC72  F01C         	call	_setState
  2316   0066D2  EF6E  F034         	goto	l5664
  2317   0066D6                     l5624:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;stateMachine.c: 105:             if (evento == EV_RIGHT || evento == EV_LEFT) {
  2321   0066D6  0E03               	movlw	3
  2322   0066D8  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2323   0066DA  B4D8               	btfsc	status,2,c
  2324   0066DC  EF72  F033         	goto	u6911
  2325   0066E0  EF74  F033         	goto	u6910
  2326   0066E4                     u6911:
  2327   0066E4  EF7D  F033         	goto	l5628
  2328   0066E8                     u6910:
  2329   0066E8                     
  2330                           ; BSR set to: 0
  2331   0066E8  0E02               	movlw	2
  2332   0066EA  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2333   0066EC  A4D8               	btfss	status,2,c
  2334   0066EE  EF7B  F033         	goto	u6921
  2335   0066F2  EF7D  F033         	goto	u6920
  2336   0066F6                     u6921:
  2337   0066F6  EF80  F033         	goto	l5630
  2338   0066FA                     u6920:
  2339   0066FA                     l5628:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;stateMachine.c: 106:                 setState(STATE_ALARME_2_BAIXO);
  2343   0066FA  0E07               	movlw	7
  2344   0066FC  EC72  F01C         	call	_setState
  2345   006700                     l5630:
  2346                           
  2347                           ;stateMachine.c: 108:             if (evento == EV_UP) {
  2348   006700  0100               	movlb	0	; () banked
  2349   006702  51E5               	movf	smLoop@evento& (0+255),w,b
  2350   006704  A4D8               	btfss	status,2,c
  2351   006706  EF87  F033         	goto	u6931
  2352   00670A  EF89  F033         	goto	u6930
  2353   00670E                     u6931:
  2354   00670E  EFA3  F033         	goto	l5634
  2355   006712                     u6930:
  2356   006712                     
  2357                           ; BSR set to: 0
  2358                           ;stateMachine.c: 109:                 setAlarmLevel(1, 0, getAlarmLevel(1, 0) + 1);
  2359   006712  0E00               	movlw	0
  2360   006714  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  2361   006716  0E01               	movlw	1
  2362   006718  6E3F               	movwf	setAlarmLevel@alarm^0,c
  2363   00671A  0E00               	movlw	0
  2364   00671C  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  2365   00671E  0E00               	movlw	0
  2366   006720  6E41               	movwf	setAlarmLevel@level^0,c
  2367   006722  0E00               	movlw	0
  2368   006724  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  2369   006726  0E01               	movlw	1
  2370   006728  6E13               	movwf	getAlarmLevel@alarm^0,c
  2371   00672A  0E00               	movlw	0
  2372   00672C  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  2373   00672E  0E00               	movlw	0
  2374   006730  6E15               	movwf	getAlarmLevel@level^0,c
  2375   006732  EC82  F023         	call	_getAlarmLevel	;wreg free
  2376   006736  0E01               	movlw	1
  2377   006738  2413               	addwf	?_getAlarmLevel^0,w,c
  2378   00673A  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  2379   00673C  0E00               	movlw	0
  2380   00673E  2014               	addwfc	(?_getAlarmLevel+1)^0,w,c
  2381   006740  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  2382   006742  EC12  F02B         	call	_setAlarmLevel	;wreg free
  2383   006746                     l5634:
  2384                           
  2385                           ;stateMachine.c: 111:             if (evento == EV_DOWN) {
  2386   006746  0100               	movlb	0	; () banked
  2387   006748  05E5               	decf	smLoop@evento& (0+255),w,b
  2388   00674A  A4D8               	btfss	status,2,c
  2389   00674C  EFAA  F033         	goto	u6941
  2390   006750  EFAC  F033         	goto	u6940
  2391   006754                     u6941:
  2392   006754  EFC6  F033         	goto	l5638
  2393   006758                     u6940:
  2394   006758                     
  2395                           ; BSR set to: 0
  2396                           ;stateMachine.c: 112:                 setAlarmLevel(1, 0, getAlarmLevel(1, 0) - 1);
  2397   006758  0E00               	movlw	0
  2398   00675A  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  2399   00675C  0E01               	movlw	1
  2400   00675E  6E3F               	movwf	setAlarmLevel@alarm^0,c
  2401   006760  0E00               	movlw	0
  2402   006762  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  2403   006764  0E00               	movlw	0
  2404   006766  6E41               	movwf	setAlarmLevel@level^0,c
  2405   006768  0E00               	movlw	0
  2406   00676A  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  2407   00676C  0E01               	movlw	1
  2408   00676E  6E13               	movwf	getAlarmLevel@alarm^0,c
  2409   006770  0E00               	movlw	0
  2410   006772  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  2411   006774  0E00               	movlw	0
  2412   006776  6E15               	movwf	getAlarmLevel@level^0,c
  2413   006778  EC82  F023         	call	_getAlarmLevel	;wreg free
  2414   00677C  0EFF               	movlw	255
  2415   00677E  2413               	addwf	?_getAlarmLevel^0,w,c
  2416   006780  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  2417   006782  0EFF               	movlw	255
  2418   006784  2014               	addwfc	(?_getAlarmLevel+1)^0,w,c
  2419   006786  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  2420   006788  EC12  F02B         	call	_setAlarmLevel	;wreg free
  2421   00678C                     l5638:
  2422                           
  2423                           ;stateMachine.c: 115:             if (evento == EV_ENTER) {
  2424   00678C  0E04               	movlw	4
  2425   00678E  0100               	movlb	0	; () banked
  2426   006790  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2427   006792  A4D8               	btfss	status,2,c
  2428   006794  EFCE  F033         	goto	u6951
  2429   006798  EFD0  F033         	goto	u6950
  2430   00679C                     u6951:
  2431   00679C  EF6E  F034         	goto	l5664
  2432   0067A0                     u6950:
  2433   0067A0                     
  2434                           ; BSR set to: 0
  2435                           ;stateMachine.c: 116:                 setState(STATE_ALARME_2);
  2436   0067A0  0E03               	movlw	3
  2437   0067A2  EC72  F01C         	call	_setState
  2438   0067A6  EF6E  F034         	goto	l5664
  2439   0067AA                     l5642:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;stateMachine.c: 121:             if (evento == EV_RIGHT || evento == EV_LEFT) {
  2443   0067AA  0E03               	movlw	3
  2444   0067AC  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2445   0067AE  B4D8               	btfsc	status,2,c
  2446   0067B0  EFDC  F033         	goto	u6961
  2447   0067B4  EFDE  F033         	goto	u6960
  2448   0067B8                     u6961:
  2449   0067B8  EFE7  F033         	goto	l5646
  2450   0067BC                     u6960:
  2451   0067BC                     
  2452                           ; BSR set to: 0
  2453   0067BC  0E02               	movlw	2
  2454   0067BE  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2455   0067C0  A4D8               	btfss	status,2,c
  2456   0067C2  EFE5  F033         	goto	u6971
  2457   0067C6  EFE7  F033         	goto	u6970
  2458   0067CA                     u6971:
  2459   0067CA  EFEA  F033         	goto	l5648
  2460   0067CE                     u6970:
  2461   0067CE                     l5646:
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;stateMachine.c: 122:                 setState(STATE_ALARME_2_ALTO);
  2465   0067CE  0E06               	movlw	6
  2466   0067D0  EC72  F01C         	call	_setState
  2467   0067D4                     l5648:
  2468                           
  2469                           ;stateMachine.c: 125:             if (evento == EV_UP) {
  2470   0067D4  0100               	movlb	0	; () banked
  2471   0067D6  51E5               	movf	smLoop@evento& (0+255),w,b
  2472   0067D8  A4D8               	btfss	status,2,c
  2473   0067DA  EFF1  F033         	goto	u6981
  2474   0067DE  EFF3  F033         	goto	u6980
  2475   0067E2                     u6981:
  2476   0067E2  EF0D  F034         	goto	l5652
  2477   0067E6                     u6980:
  2478   0067E6                     
  2479                           ; BSR set to: 0
  2480                           ;stateMachine.c: 126:                 setAlarmLevel(1, 1, getAlarmLevel(1, 1) + 1);
  2481   0067E6  0E00               	movlw	0
  2482   0067E8  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  2483   0067EA  0E01               	movlw	1
  2484   0067EC  6E3F               	movwf	setAlarmLevel@alarm^0,c
  2485   0067EE  0E00               	movlw	0
  2486   0067F0  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  2487   0067F2  0E01               	movlw	1
  2488   0067F4  6E41               	movwf	setAlarmLevel@level^0,c
  2489   0067F6  0E00               	movlw	0
  2490   0067F8  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  2491   0067FA  0E01               	movlw	1
  2492   0067FC  6E13               	movwf	getAlarmLevel@alarm^0,c
  2493   0067FE  0E00               	movlw	0
  2494   006800  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  2495   006802  0E01               	movlw	1
  2496   006804  6E15               	movwf	getAlarmLevel@level^0,c
  2497   006806  EC82  F023         	call	_getAlarmLevel	;wreg free
  2498   00680A  0E01               	movlw	1
  2499   00680C  2413               	addwf	?_getAlarmLevel^0,w,c
  2500   00680E  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  2501   006810  0E00               	movlw	0
  2502   006812  2014               	addwfc	(?_getAlarmLevel+1)^0,w,c
  2503   006814  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  2504   006816  EC12  F02B         	call	_setAlarmLevel	;wreg free
  2505   00681A                     l5652:
  2506                           
  2507                           ;stateMachine.c: 128:             if (evento == EV_DOWN) {
  2508   00681A  0100               	movlb	0	; () banked
  2509   00681C  05E5               	decf	smLoop@evento& (0+255),w,b
  2510   00681E  A4D8               	btfss	status,2,c
  2511   006820  EF14  F034         	goto	u6991
  2512   006824  EF16  F034         	goto	u6990
  2513   006828                     u6991:
  2514   006828  EF30  F034         	goto	l5656
  2515   00682C                     u6990:
  2516   00682C                     
  2517                           ; BSR set to: 0
  2518                           ;stateMachine.c: 129:                 setAlarmLevel(1, 1, getAlarmLevel(1, 1) - 1);
  2519   00682C  0E00               	movlw	0
  2520   00682E  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  2521   006830  0E01               	movlw	1
  2522   006832  6E3F               	movwf	setAlarmLevel@alarm^0,c
  2523   006834  0E00               	movlw	0
  2524   006836  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  2525   006838  0E01               	movlw	1
  2526   00683A  6E41               	movwf	setAlarmLevel@level^0,c
  2527   00683C  0E00               	movlw	0
  2528   00683E  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  2529   006840  0E01               	movlw	1
  2530   006842  6E13               	movwf	getAlarmLevel@alarm^0,c
  2531   006844  0E00               	movlw	0
  2532   006846  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  2533   006848  0E01               	movlw	1
  2534   00684A  6E15               	movwf	getAlarmLevel@level^0,c
  2535   00684C  EC82  F023         	call	_getAlarmLevel	;wreg free
  2536   006850  0EFF               	movlw	255
  2537   006852  2413               	addwf	?_getAlarmLevel^0,w,c
  2538   006854  6E43               	movwf	setAlarmLevel@newAlarmLevel^0,c
  2539   006856  0EFF               	movlw	255
  2540   006858  2014               	addwfc	(?_getAlarmLevel+1)^0,w,c
  2541   00685A  6E44               	movwf	(setAlarmLevel@newAlarmLevel+1)^0,c
  2542   00685C  EC12  F02B         	call	_setAlarmLevel	;wreg free
  2543   006860                     l5656:
  2544                           
  2545                           ;stateMachine.c: 132:             if (evento == EV_ENTER) {
  2546   006860  0E04               	movlw	4
  2547   006862  0100               	movlb	0	; () banked
  2548   006864  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2549   006866  A4D8               	btfss	status,2,c
  2550   006868  EF38  F034         	goto	u7001
  2551   00686C  EF3A  F034         	goto	u7000
  2552   006870                     u7001:
  2553   006870  EF6E  F034         	goto	l5664
  2554   006874                     u7000:
  2555   006874                     
  2556                           ; BSR set to: 0
  2557                           ;stateMachine.c: 133:                 setState(STATE_ALARME_2);
  2558   006874  0E03               	movlw	3
  2559   006876  EC72  F01C         	call	_setState
  2560   00687A  EF6E  F034         	goto	l5664
  2561   00687E                     l5662:
  2562                           
  2563                           ; BSR set to: 0
  2564   00687E  EC6F  F01C         	call	_getState	;wreg free
  2565   006882  0100               	movlb	0	; () banked
  2566   006884  6FE3               	movwf	??_smLoop& (0+255),b
  2567   006886  6BE4               	clrf	(??_smLoop+1)& (0+255),b
  2568                           
  2569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2570                           ; Switch size 1, requested type "simple"
  2571                           ; Number of cases is 1, Range of values is 0 to 0
  2572                           ; switch strategies available:
  2573                           ; Name         Instructions Cycles
  2574                           ; simple_byte            4     3 (average)
  2575                           ;	Chosen strategy is simple_byte
  2576   006888  51E4               	movf	(??_smLoop+1)& (0+255),w,b
  2577   00688A  0A00               	xorlw	0	; case 0
  2578   00688C  B4D8               	btfsc	status,2,c
  2579   00688E  EF4B  F034         	goto	l5948
  2580   006892  EF6E  F034         	goto	l5664
  2581   006896                     l5948:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ; Switch size 1, requested type "simple"
  2585                           ; Number of cases is 8, Range of values is 0 to 7
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte           25    13 (average)
  2589                           ;	Chosen strategy is simple_byte
  2590   006896  51E3               	movf	??_smLoop& (0+255),w,b
  2591   006898  0A00               	xorlw	0	; case 0
  2592   00689A  B4D8               	btfsc	status,2,c
  2593   00689C  EFFD  F031         	goto	l5544
  2594   0068A0  0A01               	xorlw	1	; case 1
  2595   0068A2  B4D8               	btfsc	status,2,c
  2596   0068A4  EF18  F032         	goto	l5552
  2597   0068A8  0A03               	xorlw	3	; case 2
  2598   0068AA  B4D8               	btfsc	status,2,c
  2599   0068AC  EF47  F032         	goto	l5564
  2600   0068B0  0A01               	xorlw	1	; case 3
  2601   0068B2  B4D8               	btfsc	status,2,c
  2602   0068B4  EF6F  F032         	goto	l5576
  2603   0068B8  0A07               	xorlw	7	; case 4
  2604   0068BA  B4D8               	btfsc	status,2,c
  2605   0068BC  EF97  F032         	goto	l5588
  2606   0068C0  0A01               	xorlw	1	; case 5
  2607   0068C2  B4D8               	btfsc	status,2,c
  2608   0068C4  EF01  F033         	goto	l5606
  2609   0068C8  0A03               	xorlw	3	; case 6
  2610   0068CA  B4D8               	btfsc	status,2,c
  2611   0068CC  EF6B  F033         	goto	l5624
  2612   0068D0  0A01               	xorlw	1	; case 7
  2613   0068D2  B4D8               	btfsc	status,2,c
  2614   0068D4  EFD5  F033         	goto	l5642
  2615   0068D8  EF6E  F034         	goto	l5664
  2616   0068DC                     l5664:
  2617                           
  2618                           ;stateMachine.c: 140:     if (evento != EV_NOEVENT) {
  2619   0068DC  0E05               	movlw	5
  2620   0068DE  0100               	movlb	0	; () banked
  2621   0068E0  19E5               	xorwf	smLoop@evento& (0+255),w,b
  2622   0068E2  B4D8               	btfsc	status,2,c
  2623   0068E4  EF76  F034         	goto	u7011
  2624   0068E8  EF78  F034         	goto	u7010
  2625   0068EC                     u7011:
  2626   0068EC  EF7E  F034         	goto	l5668
  2627   0068F0                     u7010:
  2628   0068F0                     
  2629                           ; BSR set to: 0
  2630                           ;stateMachine.c: 141:         setTimer(0);
  2631   0068F0  0E00               	movlw	0
  2632   0068F2  6E04               	movwf	(setTimer@val+1)^0,c
  2633   0068F4  0E00               	movlw	0
  2634   0068F6  6E03               	movwf	setTimer@val^0,c
  2635   0068F8  EC7F  F01C         	call	_setTimer	;wreg free
  2636   0068FC                     l5668:
  2637                           
  2638                           ;stateMachine.c: 144:     if (getTimer() < 2000) {
  2639   0068FC  EC7A  F01C         	call	_getTimer	;wreg free
  2640   006900  BE02               	btfsc	(?_getTimer+1)^0,7,c
  2641   006902  EF8E  F034         	goto	u7020
  2642   006906  0ED0               	movlw	208
  2643   006908  5C01               	subwf	?_getTimer^0,w,c
  2644   00690A  0E07               	movlw	7
  2645   00690C  5802               	subwfb	(?_getTimer+1)^0,w,c
  2646   00690E  B0D8               	btfsc	status,0,c
  2647   006910  EF8C  F034         	goto	u7021
  2648   006914  EF8E  F034         	goto	u7020
  2649   006918                     u7021:
  2650   006918  EF98  F034         	goto	l727
  2651   00691C                     u7020:
  2652   00691C                     
  2653                           ;stateMachine.c: 145:         setTimer(getTimer()+1);
  2654   00691C  EC7A  F01C         	call	_getTimer	;wreg free
  2655   006920  0E01               	movlw	1
  2656   006922  2401               	addwf	?_getTimer^0,w,c
  2657   006924  6E03               	movwf	setTimer@val^0,c
  2658   006926  0E00               	movlw	0
  2659   006928  2002               	addwfc	(?_getTimer+1)^0,w,c
  2660   00692A  6E04               	movwf	(setTimer@val+1)^0,c
  2661   00692C  EC7F  F01C         	call	_setTimer	;wreg free
  2662   006930                     l727:
  2663                           
  2664                           ;stateMachine.c: 147:     if(getTimer() >= 2000){
  2665   006930  EC7A  F01C         	call	_getTimer	;wreg free
  2666   006934  BE02               	btfsc	(?_getTimer+1)^0,7,c
  2667   006936  EFA6  F034         	goto	u7031
  2668   00693A  0ED0               	movlw	208
  2669   00693C  5C01               	subwf	?_getTimer^0,w,c
  2670   00693E  0E07               	movlw	7
  2671   006940  5802               	subwfb	(?_getTimer+1)^0,w,c
  2672   006942  A0D8               	btfss	status,0,c
  2673   006944  EFA6  F034         	goto	u7031
  2674   006948  EFA8  F034         	goto	u7030
  2675   00694C                     u7031:
  2676   00694C  EFAB  F034         	goto	l5674
  2677   006950                     u7030:
  2678   006950                     
  2679                           ;stateMachine.c: 148:         setState(STATE_HOME);
  2680   006950  0E00               	movlw	0
  2681   006952  EC72  F01C         	call	_setState
  2682   006956                     l5674:
  2683                           
  2684                           ;stateMachine.c: 151:     outputPrint(getState(), getLanguage());
  2685   006956  EC6F  F01C         	call	_getState	;wreg free
  2686   00695A  0100               	movlb	0	; () banked
  2687   00695C  6FE3               	movwf	??_smLoop& (0+255),b
  2688   00695E  51E3               	movf	??_smLoop& (0+255),w,b
  2689   006960  6E53               	movwf	outputPrint@numTela^0,c
  2690   006962  6A54               	clrf	(outputPrint@numTela+1)^0,c
  2691   006964  ECAA  F01C         	call	_getLanguage	;wreg free
  2692   006968  C013  F055         	movff	?_getLanguage,outputPrint@idioma
  2693   00696C  C014  F056         	movff	?_getLanguage+1,outputPrint@idioma+1
  2694   006970  EC96  F038         	call	_outputPrint	;wreg free
  2695   006974  0012               	return		;funcret
  2696   006976                     __end_of_smLoop:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _setTimer *****************
  2700 ;; Defined at:
  2701 ;;		line 31 in file "var.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  val             2    2[COMRAM] int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		None
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         2       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        2 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_smLoop
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text6
  2729   0038FE                     __ptext6:
  2730                           	callstack 0
  2731   0038FE                     _setTimer:
  2732                           	callstack 29
  2733   0038FE                     
  2734                           ;var.c: 32:     timer = val;
  2735   0038FE  C003  F0B2         	movff	setTimer@val,_timer
  2736   003902  C004  F0B3         	movff	setTimer@val+1,_timer+1
  2737   003906  0012               	return		;funcret
  2738   003908                     __end_of_setTimer:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _setState *****************
  2742 ;; Defined at:
  2743 ;;		line 22 in file "var.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  newState        1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  newState        1    0[COMRAM] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2757 ;;      Params:         0       0       0       0       0       0       0       0       0
  2758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2761 ;;Total ram usage:        1 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_smLoop
  2767 ;;		_smInit
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text7
  2772   0038E4                     __ptext7:
  2773                           	callstack 0
  2774   0038E4                     _setState:
  2775                           	callstack 29
  2776                           
  2777                           ;incstack = 0
  2778                           ;setState@newState stored from wreg
  2779   0038E4  6E01               	movwf	setState@newState^0,c
  2780   0038E6                     
  2781                           ;var.c: 23:     state = newState;
  2782   0038E6  C001  F0B8         	movff	setState@newState,_state
  2783   0038EA  0012               	return		;funcret
  2784   0038EC                     __end_of_setState:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _outputPrint *****************
  2788 ;; Defined at:
  2789 ;;		line 52 in file "output.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  numTela         2   82[COMRAM] int 
  2792 ;;  idioma          2   84[COMRAM] int 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2804 ;;      Params:         4       0       0       0       0       0       0       0       0
  2805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2806 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2807 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2808 ;;Total ram usage:        8 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 7
  2811 ;; This function calls:
  2812 ;;		_checkAlarm
  2813 ;;		_getAlarmLevel
  2814 ;;		_getSensorValue
  2815 ;;		_lcdCommand
  2816 ;;		_lcdInt
  2817 ;;		_lcdString
  2818 ;;		_ledBlink
  2819 ;;		_ledOff
  2820 ;;		_serialInt
  2821 ;;		_serialSend
  2822 ;;		_serialString
  2823 ;; This function is called by:
  2824 ;;		_smLoop
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text8
  2829   00712C                     __ptext8:
  2830                           	callstack 0
  2831   00712C                     _outputPrint:
  2832                           	callstack 22
  2833   00712C                     
  2834                           ;output.c: 54:     if (numTela != tela_ant) {
  2835   00712C  0100               	movlb	0	; () banked
  2836   00712E  51B0               	movf	_tela_ant& (0+255),w,b
  2837   007130  1853               	xorwf	outputPrint@numTela^0,w,c
  2838   007132  E109               	bnz	u6520
  2839   007134  51B1               	movf	(_tela_ant+1)& (0+255),w,b
  2840   007136  1854               	xorwf	(outputPrint@numTela+1)^0,w,c
  2841   007138  B4D8               	btfsc	status,2,c
  2842   00713A  EFA1  F038         	goto	u6521
  2843   00713E  EFA3  F038         	goto	u6520
  2844   007142                     u6521:
  2845   007142  EFAA  F038         	goto	l5252
  2846   007146                     u6520:
  2847   007146                     
  2848                           ; BSR set to: 0
  2849                           ;output.c: 55:         lcdCommand(0x01);
  2850   007146  0E01               	movlw	1
  2851   007148  EC6B  F01E         	call	_lcdCommand
  2852   00714C                     
  2853                           ;output.c: 56:         tela_ant = numTela;
  2854   00714C  C053  F0B0         	movff	outputPrint@numTela,_tela_ant
  2855   007150  C054  F0B1         	movff	outputPrint@numTela+1,_tela_ant+1
  2856   007154                     l5252:
  2857                           
  2858                           ;output.c: 58:     if (numTela == STATE_HOME) {
  2859   007154  5053               	movf	outputPrint@numTela^0,w,c
  2860   007156  1054               	iorwf	(outputPrint@numTela+1)^0,w,c
  2861   007158  A4D8               	btfss	status,2,c
  2862   00715A  EFB1  F038         	goto	u6531
  2863   00715E  EFB3  F038         	goto	u6530
  2864   007162                     u6531:
  2865   007162  EF83  F03A         	goto	l5332
  2866   007166                     u6530:
  2867   007166                     
  2868                           ;output.c: 59:         lcdCommand(0x80);
  2869   007166  0E80               	movlw	128
  2870   007168  EC6B  F01E         	call	_lcdCommand
  2871   00716C                     
  2872                           ;output.c: 62:         serialSend('\12');
  2873   00716C  0E0A               	movlw	10
  2874   00716E  EC9F  F01C         	call	_serialSend
  2875   007172                     
  2876                           ;output.c: 63:         lcdString(msgsL1[numTela][idioma]);
  2877   007172  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  2878   007176  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  2879   00717A  90D8               	bcf	status,0,c
  2880   00717C  3657               	rlcf	??_outputPrint^0,f,c
  2881   00717E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  2882   007180  90D8               	bcf	status,0,c
  2883   007182  3657               	rlcf	??_outputPrint^0,f,c
  2884   007184  3658               	rlcf	(??_outputPrint+1)^0,f,c
  2885   007186  0E80               	movlw	low _msgsL1
  2886   007188  2457               	addwf	??_outputPrint^0,w,c
  2887   00718A  6E59               	movwf	(??_outputPrint+2)^0,c
  2888   00718C  0E00               	movlw	high _msgsL1
  2889   00718E  2058               	addwfc	(??_outputPrint+1)^0,w,c
  2890   007190  6E5A               	movwf	(??_outputPrint+3)^0,c
  2891   007192  90D8               	bcf	status,0,c
  2892   007194  3455               	rlcf	outputPrint@idioma^0,w,c
  2893   007196  6ED9               	movwf	fsr2l,c
  2894   007198  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  2895   00719A  6EDA               	movwf	fsr2h,c
  2896   00719C  5059               	movf	(??_outputPrint+2)^0,w,c
  2897   00719E  26D9               	addwf	fsr2l,f,c
  2898   0071A0  505A               	movf	(??_outputPrint+3)^0,w,c
  2899   0071A2  22DA               	addwfc	fsr2h,f,c
  2900   0071A4  CFDE F004          	movff	postinc2,lcdString@msg
  2901   0071A8  CFDD F005          	movff	postdec2,lcdString@msg+1
  2902   0071AC  EC31  F01F         	call	_lcdString	;wreg free
  2903   0071B0                     
  2904                           ;output.c: 64:         lcdInt(getSensorValue(0));
  2905   0071B0  0E00               	movlw	0
  2906   0071B2  6E47               	movwf	(getSensorValue@sensor+1)^0,c
  2907   0071B4  0E00               	movlw	0
  2908   0071B6  6E46               	movwf	getSensorValue@sensor^0,c
  2909   0071B8  EC06  F01F         	call	_getSensorValue	;wreg free
  2910   0071BC  C046  F04A         	movff	?_getSensorValue,lcdInt@val
  2911   0071C0  C047  F04B         	movff	?_getSensorValue+1,lcdInt@val+1
  2912   0071C4  ECD7  F020         	call	_lcdInt	;wreg free
  2913   0071C8                     
  2914                           ;output.c: 65:         serialString(msgsL1[numTela][idioma]);
  2915   0071C8  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  2916   0071CC  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  2917   0071D0  90D8               	bcf	status,0,c
  2918   0071D2  3657               	rlcf	??_outputPrint^0,f,c
  2919   0071D4  3658               	rlcf	(??_outputPrint+1)^0,f,c
  2920   0071D6  90D8               	bcf	status,0,c
  2921   0071D8  3657               	rlcf	??_outputPrint^0,f,c
  2922   0071DA  3658               	rlcf	(??_outputPrint+1)^0,f,c
  2923   0071DC  0E80               	movlw	low _msgsL1
  2924   0071DE  2457               	addwf	??_outputPrint^0,w,c
  2925   0071E0  6E59               	movwf	(??_outputPrint+2)^0,c
  2926   0071E2  0E00               	movlw	high _msgsL1
  2927   0071E4  2058               	addwfc	(??_outputPrint+1)^0,w,c
  2928   0071E6  6E5A               	movwf	(??_outputPrint+3)^0,c
  2929   0071E8  90D8               	bcf	status,0,c
  2930   0071EA  3455               	rlcf	outputPrint@idioma^0,w,c
  2931   0071EC  6ED9               	movwf	fsr2l,c
  2932   0071EE  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  2933   0071F0  6EDA               	movwf	fsr2h,c
  2934   0071F2  5059               	movf	(??_outputPrint+2)^0,w,c
  2935   0071F4  26D9               	addwf	fsr2l,f,c
  2936   0071F6  505A               	movf	(??_outputPrint+3)^0,w,c
  2937   0071F8  22DA               	addwfc	fsr2h,f,c
  2938   0071FA  CFDE F002          	movff	postinc2,serialString@msg
  2939   0071FE  CFDD F003          	movff	postdec2,serialString@msg+1
  2940   007202  EC98  F020         	call	_serialString	;wreg free
  2941   007206                     
  2942                           ;output.c: 66:         serialInt(getSensorValue(0));
  2943   007206  0E00               	movlw	0
  2944   007208  6E47               	movwf	(getSensorValue@sensor+1)^0,c
  2945   00720A  0E00               	movlw	0
  2946   00720C  6E46               	movwf	getSensorValue@sensor^0,c
  2947   00720E  EC06  F01F         	call	_getSensorValue	;wreg free
  2948   007212  C046  F051         	movff	?_getSensorValue,serialInt@val
  2949   007216  C047  F052         	movff	?_getSensorValue+1,serialInt@val+1
  2950   00721A  EC16  F021         	call	_serialInt	;wreg free
  2951   00721E                     
  2952                           ;output.c: 67:         serialSend('\12');
  2953   00721E  0E0A               	movlw	10
  2954   007220  EC9F  F01C         	call	_serialSend
  2955   007224                     
  2956                           ;output.c: 68:         if (checkAlarm(0, 0)) {
  2957   007224  0E00               	movlw	0
  2958   007226  6E4B               	movwf	(checkAlarm@alarm+1)^0,c
  2959   007228  0E00               	movlw	0
  2960   00722A  6E4A               	movwf	checkAlarm@alarm^0,c
  2961   00722C  0E00               	movlw	0
  2962   00722E  6E4D               	movwf	(checkAlarm@level+1)^0,c
  2963   007230  0E00               	movlw	0
  2964   007232  6E4C               	movwf	checkAlarm@level^0,c
  2965   007234  ECB4  F022         	call	_checkAlarm	;wreg free
  2966   007238  504A               	movf	?_checkAlarm^0,w,c
  2967   00723A  104B               	iorwf	(?_checkAlarm+1)^0,w,c
  2968   00723C  B4D8               	btfsc	status,2,c
  2969   00723E  EF23  F039         	goto	u6541
  2970   007242  EF25  F039         	goto	u6540
  2971   007246                     u6541:
  2972   007246  EF4E  F039         	goto	l5278
  2973   00724A                     u6540:
  2974   00724A                     
  2975                           ;output.c: 69:             lcdString(lcdAlerts[0][idioma]);
  2976   00724A  90D8               	bcf	status,0,c
  2977   00724C  3455               	rlcf	outputPrint@idioma^0,w,c
  2978   00724E  6ED9               	movwf	fsr2l,c
  2979   007250  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  2980   007252  6EDA               	movwf	fsr2h,c
  2981   007254  0EA8               	movlw	low _lcdAlerts
  2982   007256  26D9               	addwf	fsr2l,f,c
  2983   007258  0E00               	movlw	high _lcdAlerts
  2984   00725A  22DA               	addwfc	fsr2h,f,c
  2985   00725C  CFDE F004          	movff	postinc2,lcdString@msg
  2986   007260  CFDD F005          	movff	postdec2,lcdString@msg+1
  2987   007264  EC31  F01F         	call	_lcdString	;wreg free
  2988   007268                     
  2989                           ;output.c: 70:             serialString(serialAlerts[0][idioma]);
  2990   007268  90D8               	bcf	status,0,c
  2991   00726A  3455               	rlcf	outputPrint@idioma^0,w,c
  2992   00726C  6ED9               	movwf	fsr2l,c
  2993   00726E  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  2994   007270  6EDA               	movwf	fsr2h,c
  2995   007272  0EA0               	movlw	low _serialAlerts
  2996   007274  26D9               	addwf	fsr2l,f,c
  2997   007276  0E00               	movlw	high _serialAlerts
  2998   007278  22DA               	addwfc	fsr2h,f,c
  2999   00727A  CFDE F002          	movff	postinc2,serialString@msg
  3000   00727E  CFDD F003          	movff	postdec2,serialString@msg+1
  3001   007282  EC98  F020         	call	_serialString	;wreg free
  3002   007286                     
  3003                           ;output.c: 71:             serialSend('\12');
  3004   007286  0E0A               	movlw	10
  3005   007288  EC9F  F01C         	call	_serialSend
  3006   00728C                     l5276:
  3007                           
  3008                           ;output.c: 72:             ledBlink(1);
  3009   00728C  0E00               	movlw	0
  3010   00728E  6E08               	movwf	(ledBlink@pos+1)^0,c
  3011   007290  0E01               	movlw	1
  3012   007292  6E07               	movwf	ledBlink@pos^0,c
  3013   007294  EC1B  F023         	call	_ledBlink	;wreg free
  3014                           
  3015                           ;output.c: 73:         } else if (checkAlarm(0, 1)) {
  3016   007298  EF90  F039         	goto	l5292
  3017   00729C                     l5278:
  3018   00729C  0E00               	movlw	0
  3019   00729E  6E4B               	movwf	(checkAlarm@alarm+1)^0,c
  3020   0072A0  0E00               	movlw	0
  3021   0072A2  6E4A               	movwf	checkAlarm@alarm^0,c
  3022   0072A4  0E00               	movlw	0
  3023   0072A6  6E4D               	movwf	(checkAlarm@level+1)^0,c
  3024   0072A8  0E01               	movlw	1
  3025   0072AA  6E4C               	movwf	checkAlarm@level^0,c
  3026   0072AC  ECB4  F022         	call	_checkAlarm	;wreg free
  3027   0072B0  504A               	movf	?_checkAlarm^0,w,c
  3028   0072B2  104B               	iorwf	(?_checkAlarm+1)^0,w,c
  3029   0072B4  B4D8               	btfsc	status,2,c
  3030   0072B6  EF5F  F039         	goto	u6551
  3031   0072BA  EF61  F039         	goto	u6550
  3032   0072BE                     u6551:
  3033   0072BE  EF84  F039         	goto	l5288
  3034   0072C2                     u6550:
  3035   0072C2                     
  3036                           ;output.c: 74:             lcdString(lcdAlerts[1][idioma]);
  3037   0072C2  90D8               	bcf	status,0,c
  3038   0072C4  3455               	rlcf	outputPrint@idioma^0,w,c
  3039   0072C6  6ED9               	movwf	fsr2l,c
  3040   0072C8  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3041   0072CA  6EDA               	movwf	fsr2h,c
  3042   0072CC  0EAC               	movlw	low (_lcdAlerts+4)
  3043   0072CE  26D9               	addwf	fsr2l,f,c
  3044   0072D0  0E00               	movlw	high (_lcdAlerts+4)
  3045   0072D2  22DA               	addwfc	fsr2h,f,c
  3046   0072D4  CFDE F004          	movff	postinc2,lcdString@msg
  3047   0072D8  CFDD F005          	movff	postdec2,lcdString@msg+1
  3048   0072DC  EC31  F01F         	call	_lcdString	;wreg free
  3049   0072E0                     
  3050                           ;output.c: 75:             serialString(serialAlerts[1][idioma]);
  3051   0072E0  90D8               	bcf	status,0,c
  3052   0072E2  3455               	rlcf	outputPrint@idioma^0,w,c
  3053   0072E4  6ED9               	movwf	fsr2l,c
  3054   0072E6  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3055   0072E8  6EDA               	movwf	fsr2h,c
  3056   0072EA  0EA4               	movlw	low (_serialAlerts+4)
  3057   0072EC  26D9               	addwf	fsr2l,f,c
  3058   0072EE  0E00               	movlw	high (_serialAlerts+4)
  3059   0072F0  22DA               	addwfc	fsr2h,f,c
  3060   0072F2  CFDE F002          	movff	postinc2,serialString@msg
  3061   0072F6  CFDD F003          	movff	postdec2,serialString@msg+1
  3062   0072FA  EC98  F020         	call	_serialString	;wreg free
  3063   0072FE                     
  3064                           ;output.c: 76:             serialSend('\12');
  3065   0072FE  0E0A               	movlw	10
  3066   007300  EC9F  F01C         	call	_serialSend
  3067   007304  EF46  F039         	goto	l5276
  3068   007308                     l5288:
  3069                           
  3070                           ;output.c: 79:             lcdString("    ");
  3071   007308  0E1F               	movlw	low (STR_29+11)
  3072   00730A  6E04               	movwf	lcdString@msg^0,c
  3073   00730C  0E7F               	movlw	high (STR_29+11)
  3074   00730E  6E05               	movwf	(lcdString@msg+1)^0,c
  3075   007310  EC31  F01F         	call	_lcdString	;wreg free
  3076   007314                     
  3077                           ;output.c: 80:             ledOff(1);
  3078   007314  0E00               	movlw	0
  3079   007316  6E08               	movwf	(ledOff@pos+1)^0,c
  3080   007318  0E01               	movlw	1
  3081   00731A  6E07               	movwf	ledOff@pos^0,c
  3082   00731C  ECB8  F01F         	call	_ledOff	;wreg free
  3083   007320                     l5292:
  3084                           
  3085                           ;output.c: 82:         lcdCommand(0xC0);
  3086   007320  0EC0               	movlw	192
  3087   007322  EC6B  F01E         	call	_lcdCommand
  3088   007326                     
  3089                           ;output.c: 85:         serialSend('\12');
  3090   007326  0E0A               	movlw	10
  3091   007328  EC9F  F01C         	call	_serialSend
  3092   00732C                     
  3093                           ;output.c: 86:         lcdString(msgsL2[numTela][idioma]);
  3094   00732C  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3095   007330  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3096   007334  90D8               	bcf	status,0,c
  3097   007336  3657               	rlcf	??_outputPrint^0,f,c
  3098   007338  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3099   00733A  90D8               	bcf	status,0,c
  3100   00733C  3657               	rlcf	??_outputPrint^0,f,c
  3101   00733E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3102   007340  0E60               	movlw	low _msgsL2
  3103   007342  2457               	addwf	??_outputPrint^0,w,c
  3104   007344  6E59               	movwf	(??_outputPrint+2)^0,c
  3105   007346  0E00               	movlw	high _msgsL2
  3106   007348  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3107   00734A  6E5A               	movwf	(??_outputPrint+3)^0,c
  3108   00734C  90D8               	bcf	status,0,c
  3109   00734E  3455               	rlcf	outputPrint@idioma^0,w,c
  3110   007350  6ED9               	movwf	fsr2l,c
  3111   007352  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3112   007354  6EDA               	movwf	fsr2h,c
  3113   007356  5059               	movf	(??_outputPrint+2)^0,w,c
  3114   007358  26D9               	addwf	fsr2l,f,c
  3115   00735A  505A               	movf	(??_outputPrint+3)^0,w,c
  3116   00735C  22DA               	addwfc	fsr2h,f,c
  3117   00735E  CFDE F004          	movff	postinc2,lcdString@msg
  3118   007362  CFDD F005          	movff	postdec2,lcdString@msg+1
  3119   007366  EC31  F01F         	call	_lcdString	;wreg free
  3120   00736A                     
  3121                           ;output.c: 87:         lcdInt(getSensorValue(1));
  3122   00736A  0E00               	movlw	0
  3123   00736C  6E47               	movwf	(getSensorValue@sensor+1)^0,c
  3124   00736E  0E01               	movlw	1
  3125   007370  6E46               	movwf	getSensorValue@sensor^0,c
  3126   007372  EC06  F01F         	call	_getSensorValue	;wreg free
  3127   007376  C046  F04A         	movff	?_getSensorValue,lcdInt@val
  3128   00737A  C047  F04B         	movff	?_getSensorValue+1,lcdInt@val+1
  3129   00737E  ECD7  F020         	call	_lcdInt	;wreg free
  3130   007382                     
  3131                           ;output.c: 88:         serialString(msgsL2[numTela][idioma]);
  3132   007382  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3133   007386  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3134   00738A  90D8               	bcf	status,0,c
  3135   00738C  3657               	rlcf	??_outputPrint^0,f,c
  3136   00738E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3137   007390  90D8               	bcf	status,0,c
  3138   007392  3657               	rlcf	??_outputPrint^0,f,c
  3139   007394  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3140   007396  0E60               	movlw	low _msgsL2
  3141   007398  2457               	addwf	??_outputPrint^0,w,c
  3142   00739A  6E59               	movwf	(??_outputPrint+2)^0,c
  3143   00739C  0E00               	movlw	high _msgsL2
  3144   00739E  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3145   0073A0  6E5A               	movwf	(??_outputPrint+3)^0,c
  3146   0073A2  90D8               	bcf	status,0,c
  3147   0073A4  3455               	rlcf	outputPrint@idioma^0,w,c
  3148   0073A6  6ED9               	movwf	fsr2l,c
  3149   0073A8  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3150   0073AA  6EDA               	movwf	fsr2h,c
  3151   0073AC  5059               	movf	(??_outputPrint+2)^0,w,c
  3152   0073AE  26D9               	addwf	fsr2l,f,c
  3153   0073B0  505A               	movf	(??_outputPrint+3)^0,w,c
  3154   0073B2  22DA               	addwfc	fsr2h,f,c
  3155   0073B4  CFDE F002          	movff	postinc2,serialString@msg
  3156   0073B8  CFDD F003          	movff	postdec2,serialString@msg+1
  3157   0073BC  EC98  F020         	call	_serialString	;wreg free
  3158   0073C0                     
  3159                           ;output.c: 89:         serialInt(getSensorValue(1));
  3160   0073C0  0E00               	movlw	0
  3161   0073C2  6E47               	movwf	(getSensorValue@sensor+1)^0,c
  3162   0073C4  0E01               	movlw	1
  3163   0073C6  6E46               	movwf	getSensorValue@sensor^0,c
  3164   0073C8  EC06  F01F         	call	_getSensorValue	;wreg free
  3165   0073CC  C046  F051         	movff	?_getSensorValue,serialInt@val
  3166   0073D0  C047  F052         	movff	?_getSensorValue+1,serialInt@val+1
  3167   0073D4  EC16  F021         	call	_serialInt	;wreg free
  3168   0073D8                     
  3169                           ;output.c: 90:         serialSend('\12');
  3170   0073D8  0E0A               	movlw	10
  3171   0073DA  EC9F  F01C         	call	_serialSend
  3172   0073DE                     
  3173                           ;output.c: 91:         if (checkAlarm(1, 0)) {
  3174   0073DE  0E00               	movlw	0
  3175   0073E0  6E4B               	movwf	(checkAlarm@alarm+1)^0,c
  3176   0073E2  0E01               	movlw	1
  3177   0073E4  6E4A               	movwf	checkAlarm@alarm^0,c
  3178   0073E6  0E00               	movlw	0
  3179   0073E8  6E4D               	movwf	(checkAlarm@level+1)^0,c
  3180   0073EA  0E00               	movlw	0
  3181   0073EC  6E4C               	movwf	checkAlarm@level^0,c
  3182   0073EE  ECB4  F022         	call	_checkAlarm	;wreg free
  3183   0073F2  504A               	movf	?_checkAlarm^0,w,c
  3184   0073F4  104B               	iorwf	(?_checkAlarm+1)^0,w,c
  3185   0073F6  B4D8               	btfsc	status,2,c
  3186   0073F8  EF00  F03A         	goto	u6561
  3187   0073FC  EF02  F03A         	goto	u6560
  3188   007400                     u6561:
  3189   007400  EF3B  F03A         	goto	l5318
  3190   007404                     u6560:
  3191   007404                     
  3192                           ;output.c: 92:             lcdString(lcdAlerts[0][idioma]);
  3193   007404  90D8               	bcf	status,0,c
  3194   007406  3455               	rlcf	outputPrint@idioma^0,w,c
  3195   007408  6ED9               	movwf	fsr2l,c
  3196   00740A  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3197   00740C  6EDA               	movwf	fsr2h,c
  3198   00740E  0EA8               	movlw	low _lcdAlerts
  3199   007410  26D9               	addwf	fsr2l,f,c
  3200   007412  0E00               	movlw	high _lcdAlerts
  3201   007414  22DA               	addwfc	fsr2h,f,c
  3202   007416  CFDE F004          	movff	postinc2,lcdString@msg
  3203   00741A  CFDD F005          	movff	postdec2,lcdString@msg+1
  3204   00741E  EC31  F01F         	call	_lcdString	;wreg free
  3205   007422                     
  3206                           ;output.c: 93:             serialString(serialAlerts[0][idioma]);
  3207   007422  90D8               	bcf	status,0,c
  3208   007424  3455               	rlcf	outputPrint@idioma^0,w,c
  3209   007426  6ED9               	movwf	fsr2l,c
  3210   007428  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3211   00742A  6EDA               	movwf	fsr2h,c
  3212   00742C  0EA0               	movlw	low _serialAlerts
  3213   00742E  26D9               	addwf	fsr2l,f,c
  3214   007430  0E00               	movlw	high _serialAlerts
  3215   007432  22DA               	addwfc	fsr2h,f,c
  3216   007434  CFDE F002          	movff	postinc2,serialString@msg
  3217   007438  CFDD F003          	movff	postdec2,serialString@msg+1
  3218   00743C  EC98  F020         	call	_serialString	;wreg free
  3219   007440                     
  3220                           ;output.c: 94:             serialSend('\12');
  3221   007440  0E0A               	movlw	10
  3222   007442  EC9F  F01C         	call	_serialSend
  3223   007446                     
  3224                           ;output.c: 95:             ledBlink(2);
  3225   007446  0E00               	movlw	0
  3226   007448  6E08               	movwf	(ledBlink@pos+1)^0,c
  3227   00744A  0E02               	movlw	2
  3228   00744C  6E07               	movwf	ledBlink@pos^0,c
  3229   00744E  EC1B  F023         	call	_ledBlink	;wreg free
  3230   007452                     
  3231                           ;output.c: 96:             serialInt(checkAlarm(1, 0));
  3232   007452  0E00               	movlw	0
  3233   007454  6E4B               	movwf	(checkAlarm@alarm+1)^0,c
  3234   007456  0E01               	movlw	1
  3235   007458  6E4A               	movwf	checkAlarm@alarm^0,c
  3236   00745A  0E00               	movlw	0
  3237   00745C  6E4D               	movwf	(checkAlarm@level+1)^0,c
  3238   00745E  0E00               	movlw	0
  3239   007460  6E4C               	movwf	checkAlarm@level^0,c
  3240   007462  ECB4  F022         	call	_checkAlarm	;wreg free
  3241   007466  C04A  F051         	movff	?_checkAlarm,serialInt@val
  3242   00746A  C04B  F052         	movff	?_checkAlarm+1,serialInt@val+1
  3243   00746E  EC16  F021         	call	_serialInt	;wreg free
  3244                           
  3245                           ;output.c: 97:         } else if (checkAlarm(1, 1)) {
  3246   007472  EF83  F03A         	goto	l5332
  3247   007476                     l5318:
  3248   007476  0E00               	movlw	0
  3249   007478  6E4B               	movwf	(checkAlarm@alarm+1)^0,c
  3250   00747A  0E01               	movlw	1
  3251   00747C  6E4A               	movwf	checkAlarm@alarm^0,c
  3252   00747E  0E00               	movlw	0
  3253   007480  6E4D               	movwf	(checkAlarm@level+1)^0,c
  3254   007482  0E01               	movlw	1
  3255   007484  6E4C               	movwf	checkAlarm@level^0,c
  3256   007486  ECB4  F022         	call	_checkAlarm	;wreg free
  3257   00748A  504A               	movf	?_checkAlarm^0,w,c
  3258   00748C  104B               	iorwf	(?_checkAlarm+1)^0,w,c
  3259   00748E  B4D8               	btfsc	status,2,c
  3260   007490  EF4C  F03A         	goto	u6571
  3261   007494  EF4E  F03A         	goto	u6570
  3262   007498                     u6571:
  3263   007498  EF77  F03A         	goto	l5328
  3264   00749C                     u6570:
  3265   00749C                     
  3266                           ;output.c: 98:             lcdString(lcdAlerts[1][idioma]);
  3267   00749C  90D8               	bcf	status,0,c
  3268   00749E  3455               	rlcf	outputPrint@idioma^0,w,c
  3269   0074A0  6ED9               	movwf	fsr2l,c
  3270   0074A2  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3271   0074A4  6EDA               	movwf	fsr2h,c
  3272   0074A6  0EAC               	movlw	low (_lcdAlerts+4)
  3273   0074A8  26D9               	addwf	fsr2l,f,c
  3274   0074AA  0E00               	movlw	high (_lcdAlerts+4)
  3275   0074AC  22DA               	addwfc	fsr2h,f,c
  3276   0074AE  CFDE F004          	movff	postinc2,lcdString@msg
  3277   0074B2  CFDD F005          	movff	postdec2,lcdString@msg+1
  3278   0074B6  EC31  F01F         	call	_lcdString	;wreg free
  3279   0074BA                     
  3280                           ;output.c: 99:             serialString(serialAlerts[1][idioma]);
  3281   0074BA  90D8               	bcf	status,0,c
  3282   0074BC  3455               	rlcf	outputPrint@idioma^0,w,c
  3283   0074BE  6ED9               	movwf	fsr2l,c
  3284   0074C0  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3285   0074C2  6EDA               	movwf	fsr2h,c
  3286   0074C4  0EA4               	movlw	low (_serialAlerts+4)
  3287   0074C6  26D9               	addwf	fsr2l,f,c
  3288   0074C8  0E00               	movlw	high (_serialAlerts+4)
  3289   0074CA  22DA               	addwfc	fsr2h,f,c
  3290   0074CC  CFDE F002          	movff	postinc2,serialString@msg
  3291   0074D0  CFDD F003          	movff	postdec2,serialString@msg+1
  3292   0074D4  EC98  F020         	call	_serialString	;wreg free
  3293   0074D8                     
  3294                           ;output.c: 100:             serialSend('\12');
  3295   0074D8  0E0A               	movlw	10
  3296   0074DA  EC9F  F01C         	call	_serialSend
  3297   0074DE                     
  3298                           ;output.c: 101:             ledBlink(2);
  3299   0074DE  0E00               	movlw	0
  3300   0074E0  6E08               	movwf	(ledBlink@pos+1)^0,c
  3301   0074E2  0E02               	movlw	2
  3302   0074E4  6E07               	movwf	ledBlink@pos^0,c
  3303   0074E6  EC1B  F023         	call	_ledBlink	;wreg free
  3304                           
  3305                           ;output.c: 102:         } else {
  3306   0074EA  EF83  F03A         	goto	l5332
  3307   0074EE                     l5328:
  3308                           
  3309                           ;output.c: 103:             lcdString("    ");
  3310   0074EE  0E1F               	movlw	low (STR_29+11)
  3311   0074F0  6E04               	movwf	lcdString@msg^0,c
  3312   0074F2  0E7F               	movlw	high (STR_29+11)
  3313   0074F4  6E05               	movwf	(lcdString@msg+1)^0,c
  3314   0074F6  EC31  F01F         	call	_lcdString	;wreg free
  3315   0074FA                     
  3316                           ;output.c: 104:             ledOff(2);
  3317   0074FA  0E00               	movlw	0
  3318   0074FC  6E08               	movwf	(ledOff@pos+1)^0,c
  3319   0074FE  0E02               	movlw	2
  3320   007500  6E07               	movwf	ledOff@pos^0,c
  3321   007502  ECB8  F01F         	call	_ledOff	;wreg free
  3322   007506                     l5332:
  3323                           
  3324                           ;output.c: 107:     if (numTela == STATE_IDIOMA) {
  3325   007506  0453               	decf	outputPrint@numTela^0,w,c
  3326   007508  1054               	iorwf	(outputPrint@numTela+1)^0,w,c
  3327   00750A  A4D8               	btfss	status,2,c
  3328   00750C  EF8A  F03A         	goto	u6581
  3329   007510  EF8C  F03A         	goto	u6580
  3330   007514                     u6581:
  3331   007514  EF14  F03B         	goto	l5348
  3332   007518                     u6580:
  3333   007518                     
  3334                           ;output.c: 108:         lcdCommand(0x80);
  3335   007518  0E80               	movlw	128
  3336   00751A  EC6B  F01E         	call	_lcdCommand
  3337   00751E                     
  3338                           ;output.c: 109:         lcdString(msgsL1[numTela][idioma]);
  3339   00751E  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3340   007522  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3341   007526  90D8               	bcf	status,0,c
  3342   007528  3657               	rlcf	??_outputPrint^0,f,c
  3343   00752A  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3344   00752C  90D8               	bcf	status,0,c
  3345   00752E  3657               	rlcf	??_outputPrint^0,f,c
  3346   007530  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3347   007532  0E80               	movlw	low _msgsL1
  3348   007534  2457               	addwf	??_outputPrint^0,w,c
  3349   007536  6E59               	movwf	(??_outputPrint+2)^0,c
  3350   007538  0E00               	movlw	high _msgsL1
  3351   00753A  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3352   00753C  6E5A               	movwf	(??_outputPrint+3)^0,c
  3353   00753E  90D8               	bcf	status,0,c
  3354   007540  3455               	rlcf	outputPrint@idioma^0,w,c
  3355   007542  6ED9               	movwf	fsr2l,c
  3356   007544  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3357   007546  6EDA               	movwf	fsr2h,c
  3358   007548  5059               	movf	(??_outputPrint+2)^0,w,c
  3359   00754A  26D9               	addwf	fsr2l,f,c
  3360   00754C  505A               	movf	(??_outputPrint+3)^0,w,c
  3361   00754E  22DA               	addwfc	fsr2h,f,c
  3362   007550  CFDE F004          	movff	postinc2,lcdString@msg
  3363   007554  CFDD F005          	movff	postdec2,lcdString@msg+1
  3364   007558  EC31  F01F         	call	_lcdString	;wreg free
  3365   00755C                     
  3366                           ;output.c: 110:         lcdCommand(0xC0);
  3367   00755C  0EC0               	movlw	192
  3368   00755E  EC6B  F01E         	call	_lcdCommand
  3369                           
  3370                           ;output.c: 111:         lcdString(msgsL2[numTela][idioma]);
  3371   007562  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3372   007566  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3373   00756A  90D8               	bcf	status,0,c
  3374   00756C  3657               	rlcf	??_outputPrint^0,f,c
  3375   00756E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3376   007570  90D8               	bcf	status,0,c
  3377   007572  3657               	rlcf	??_outputPrint^0,f,c
  3378   007574  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3379   007576  0E60               	movlw	low _msgsL2
  3380   007578  2457               	addwf	??_outputPrint^0,w,c
  3381   00757A  6E59               	movwf	(??_outputPrint+2)^0,c
  3382   00757C  0E00               	movlw	high _msgsL2
  3383   00757E  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3384   007580  6E5A               	movwf	(??_outputPrint+3)^0,c
  3385   007582  90D8               	bcf	status,0,c
  3386   007584  3455               	rlcf	outputPrint@idioma^0,w,c
  3387   007586  6ED9               	movwf	fsr2l,c
  3388   007588  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3389   00758A  6EDA               	movwf	fsr2h,c
  3390   00758C  5059               	movf	(??_outputPrint+2)^0,w,c
  3391   00758E  26D9               	addwf	fsr2l,f,c
  3392   007590  505A               	movf	(??_outputPrint+3)^0,w,c
  3393   007592  22DA               	addwfc	fsr2h,f,c
  3394   007594  CFDE F004          	movff	postinc2,lcdString@msg
  3395   007598  CFDD F005          	movff	postdec2,lcdString@msg+1
  3396   00759C  EC31  F01F         	call	_lcdString	;wreg free
  3397   0075A0                     
  3398                           ;output.c: 113:         serialSend('\12');
  3399   0075A0  0E0A               	movlw	10
  3400   0075A2  EC9F  F01C         	call	_serialSend
  3401   0075A6                     
  3402                           ;output.c: 114:         serialString(msgsL1[numTela][idioma]);
  3403   0075A6  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3404   0075AA  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3405   0075AE  90D8               	bcf	status,0,c
  3406   0075B0  3657               	rlcf	??_outputPrint^0,f,c
  3407   0075B2  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3408   0075B4  90D8               	bcf	status,0,c
  3409   0075B6  3657               	rlcf	??_outputPrint^0,f,c
  3410   0075B8  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3411   0075BA  0E80               	movlw	low _msgsL1
  3412   0075BC  2457               	addwf	??_outputPrint^0,w,c
  3413   0075BE  6E59               	movwf	(??_outputPrint+2)^0,c
  3414   0075C0  0E00               	movlw	high _msgsL1
  3415   0075C2  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3416   0075C4  6E5A               	movwf	(??_outputPrint+3)^0,c
  3417   0075C6  90D8               	bcf	status,0,c
  3418   0075C8  3455               	rlcf	outputPrint@idioma^0,w,c
  3419   0075CA  6ED9               	movwf	fsr2l,c
  3420   0075CC  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3421   0075CE  6EDA               	movwf	fsr2h,c
  3422   0075D0  5059               	movf	(??_outputPrint+2)^0,w,c
  3423   0075D2  26D9               	addwf	fsr2l,f,c
  3424   0075D4  505A               	movf	(??_outputPrint+3)^0,w,c
  3425   0075D6  22DA               	addwfc	fsr2h,f,c
  3426   0075D8  CFDE F002          	movff	postinc2,serialString@msg
  3427   0075DC  CFDD F003          	movff	postdec2,serialString@msg+1
  3428   0075E0  EC98  F020         	call	_serialString	;wreg free
  3429   0075E4                     
  3430                           ;output.c: 115:         serialSend('\12');
  3431   0075E4  0E0A               	movlw	10
  3432   0075E6  EC9F  F01C         	call	_serialSend
  3433   0075EA                     
  3434                           ;output.c: 116:         serialString(msgsL2[numTela][idioma]);
  3435   0075EA  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3436   0075EE  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3437   0075F2  90D8               	bcf	status,0,c
  3438   0075F4  3657               	rlcf	??_outputPrint^0,f,c
  3439   0075F6  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3440   0075F8  90D8               	bcf	status,0,c
  3441   0075FA  3657               	rlcf	??_outputPrint^0,f,c
  3442   0075FC  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3443   0075FE  0E60               	movlw	low _msgsL2
  3444   007600  2457               	addwf	??_outputPrint^0,w,c
  3445   007602  6E59               	movwf	(??_outputPrint+2)^0,c
  3446   007604  0E00               	movlw	high _msgsL2
  3447   007606  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3448   007608  6E5A               	movwf	(??_outputPrint+3)^0,c
  3449   00760A  90D8               	bcf	status,0,c
  3450   00760C  3455               	rlcf	outputPrint@idioma^0,w,c
  3451   00760E  6ED9               	movwf	fsr2l,c
  3452   007610  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3453   007612  6EDA               	movwf	fsr2h,c
  3454   007614  5059               	movf	(??_outputPrint+2)^0,w,c
  3455   007616  26D9               	addwf	fsr2l,f,c
  3456   007618  505A               	movf	(??_outputPrint+3)^0,w,c
  3457   00761A  22DA               	addwfc	fsr2h,f,c
  3458   00761C  CFDE F002          	movff	postinc2,serialString@msg
  3459   007620  CFDD F003          	movff	postdec2,serialString@msg+1
  3460   007624  EC98  F020         	call	_serialString	;wreg free
  3461   007628                     l5348:
  3462                           
  3463                           ;output.c: 119:     if (numTela == STATE_ALARME_1) {
  3464   007628  0E02               	movlw	2
  3465   00762A  1853               	xorwf	outputPrint@numTela^0,w,c
  3466   00762C  1054               	iorwf	(outputPrint@numTela+1)^0,w,c
  3467   00762E  A4D8               	btfss	status,2,c
  3468   007630  EF1C  F03B         	goto	u6591
  3469   007634  EF1E  F03B         	goto	u6590
  3470   007638                     u6591:
  3471   007638  EFA6  F03B         	goto	l5364
  3472   00763C                     u6590:
  3473   00763C                     
  3474                           ;output.c: 120:         lcdCommand(0x80);
  3475   00763C  0E80               	movlw	128
  3476   00763E  EC6B  F01E         	call	_lcdCommand
  3477   007642                     
  3478                           ;output.c: 121:         lcdString(msgsL1[numTela][idioma]);
  3479   007642  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3480   007646  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3481   00764A  90D8               	bcf	status,0,c
  3482   00764C  3657               	rlcf	??_outputPrint^0,f,c
  3483   00764E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3484   007650  90D8               	bcf	status,0,c
  3485   007652  3657               	rlcf	??_outputPrint^0,f,c
  3486   007654  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3487   007656  0E80               	movlw	low _msgsL1
  3488   007658  2457               	addwf	??_outputPrint^0,w,c
  3489   00765A  6E59               	movwf	(??_outputPrint+2)^0,c
  3490   00765C  0E00               	movlw	high _msgsL1
  3491   00765E  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3492   007660  6E5A               	movwf	(??_outputPrint+3)^0,c
  3493   007662  90D8               	bcf	status,0,c
  3494   007664  3455               	rlcf	outputPrint@idioma^0,w,c
  3495   007666  6ED9               	movwf	fsr2l,c
  3496   007668  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3497   00766A  6EDA               	movwf	fsr2h,c
  3498   00766C  5059               	movf	(??_outputPrint+2)^0,w,c
  3499   00766E  26D9               	addwf	fsr2l,f,c
  3500   007670  505A               	movf	(??_outputPrint+3)^0,w,c
  3501   007672  22DA               	addwfc	fsr2h,f,c
  3502   007674  CFDE F004          	movff	postinc2,lcdString@msg
  3503   007678  CFDD F005          	movff	postdec2,lcdString@msg+1
  3504   00767C  EC31  F01F         	call	_lcdString	;wreg free
  3505   007680                     
  3506                           ;output.c: 122:         lcdCommand(0xC0);
  3507   007680  0EC0               	movlw	192
  3508   007682  EC6B  F01E         	call	_lcdCommand
  3509                           
  3510                           ;output.c: 123:         lcdString(msgsL2[numTela][idioma]);
  3511   007686  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3512   00768A  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3513   00768E  90D8               	bcf	status,0,c
  3514   007690  3657               	rlcf	??_outputPrint^0,f,c
  3515   007692  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3516   007694  90D8               	bcf	status,0,c
  3517   007696  3657               	rlcf	??_outputPrint^0,f,c
  3518   007698  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3519   00769A  0E60               	movlw	low _msgsL2
  3520   00769C  2457               	addwf	??_outputPrint^0,w,c
  3521   00769E  6E59               	movwf	(??_outputPrint+2)^0,c
  3522   0076A0  0E00               	movlw	high _msgsL2
  3523   0076A2  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3524   0076A4  6E5A               	movwf	(??_outputPrint+3)^0,c
  3525   0076A6  90D8               	bcf	status,0,c
  3526   0076A8  3455               	rlcf	outputPrint@idioma^0,w,c
  3527   0076AA  6ED9               	movwf	fsr2l,c
  3528   0076AC  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3529   0076AE  6EDA               	movwf	fsr2h,c
  3530   0076B0  5059               	movf	(??_outputPrint+2)^0,w,c
  3531   0076B2  26D9               	addwf	fsr2l,f,c
  3532   0076B4  505A               	movf	(??_outputPrint+3)^0,w,c
  3533   0076B6  22DA               	addwfc	fsr2h,f,c
  3534   0076B8  CFDE F004          	movff	postinc2,lcdString@msg
  3535   0076BC  CFDD F005          	movff	postdec2,lcdString@msg+1
  3536   0076C0  EC31  F01F         	call	_lcdString	;wreg free
  3537   0076C4                     
  3538                           ;output.c: 124:         serialSend('\12');
  3539   0076C4  0E0A               	movlw	10
  3540   0076C6  EC9F  F01C         	call	_serialSend
  3541   0076CA                     
  3542                           ;output.c: 125:         serialString(msgsL1[numTela][idioma]);
  3543   0076CA  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3544   0076CE  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3545   0076D2  90D8               	bcf	status,0,c
  3546   0076D4  3657               	rlcf	??_outputPrint^0,f,c
  3547   0076D6  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3548   0076D8  90D8               	bcf	status,0,c
  3549   0076DA  3657               	rlcf	??_outputPrint^0,f,c
  3550   0076DC  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3551   0076DE  0E80               	movlw	low _msgsL1
  3552   0076E0  2457               	addwf	??_outputPrint^0,w,c
  3553   0076E2  6E59               	movwf	(??_outputPrint+2)^0,c
  3554   0076E4  0E00               	movlw	high _msgsL1
  3555   0076E6  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3556   0076E8  6E5A               	movwf	(??_outputPrint+3)^0,c
  3557   0076EA  90D8               	bcf	status,0,c
  3558   0076EC  3455               	rlcf	outputPrint@idioma^0,w,c
  3559   0076EE  6ED9               	movwf	fsr2l,c
  3560   0076F0  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3561   0076F2  6EDA               	movwf	fsr2h,c
  3562   0076F4  5059               	movf	(??_outputPrint+2)^0,w,c
  3563   0076F6  26D9               	addwf	fsr2l,f,c
  3564   0076F8  505A               	movf	(??_outputPrint+3)^0,w,c
  3565   0076FA  22DA               	addwfc	fsr2h,f,c
  3566   0076FC  CFDE F002          	movff	postinc2,serialString@msg
  3567   007700  CFDD F003          	movff	postdec2,serialString@msg+1
  3568   007704  EC98  F020         	call	_serialString	;wreg free
  3569   007708                     
  3570                           ;output.c: 126:         serialSend('\12');
  3571   007708  0E0A               	movlw	10
  3572   00770A  EC9F  F01C         	call	_serialSend
  3573   00770E                     
  3574                           ;output.c: 127:         serialString(msgsL2[numTela][idioma]);
  3575   00770E  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3576   007712  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3577   007716  90D8               	bcf	status,0,c
  3578   007718  3657               	rlcf	??_outputPrint^0,f,c
  3579   00771A  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3580   00771C  90D8               	bcf	status,0,c
  3581   00771E  3657               	rlcf	??_outputPrint^0,f,c
  3582   007720  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3583   007722  0E60               	movlw	low _msgsL2
  3584   007724  2457               	addwf	??_outputPrint^0,w,c
  3585   007726  6E59               	movwf	(??_outputPrint+2)^0,c
  3586   007728  0E00               	movlw	high _msgsL2
  3587   00772A  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3588   00772C  6E5A               	movwf	(??_outputPrint+3)^0,c
  3589   00772E  90D8               	bcf	status,0,c
  3590   007730  3455               	rlcf	outputPrint@idioma^0,w,c
  3591   007732  6ED9               	movwf	fsr2l,c
  3592   007734  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3593   007736  6EDA               	movwf	fsr2h,c
  3594   007738  5059               	movf	(??_outputPrint+2)^0,w,c
  3595   00773A  26D9               	addwf	fsr2l,f,c
  3596   00773C  505A               	movf	(??_outputPrint+3)^0,w,c
  3597   00773E  22DA               	addwfc	fsr2h,f,c
  3598   007740  CFDE F002          	movff	postinc2,serialString@msg
  3599   007744  CFDD F003          	movff	postdec2,serialString@msg+1
  3600   007748  EC98  F020         	call	_serialString	;wreg free
  3601   00774C                     l5364:
  3602                           
  3603                           ;output.c: 129:     if (numTela == STATE_ALARME_2) {
  3604   00774C  0E03               	movlw	3
  3605   00774E  1853               	xorwf	outputPrint@numTela^0,w,c
  3606   007750  1054               	iorwf	(outputPrint@numTela+1)^0,w,c
  3607   007752  A4D8               	btfss	status,2,c
  3608   007754  EFAE  F03B         	goto	u6601
  3609   007758  EFB0  F03B         	goto	u6600
  3610   00775C                     u6601:
  3611   00775C  EF38  F03C         	goto	l5380
  3612   007760                     u6600:
  3613   007760                     
  3614                           ;output.c: 130:         lcdCommand(0x80);
  3615   007760  0E80               	movlw	128
  3616   007762  EC6B  F01E         	call	_lcdCommand
  3617   007766                     
  3618                           ;output.c: 131:         lcdString(msgsL1[numTela][idioma]);
  3619   007766  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3620   00776A  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3621   00776E  90D8               	bcf	status,0,c
  3622   007770  3657               	rlcf	??_outputPrint^0,f,c
  3623   007772  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3624   007774  90D8               	bcf	status,0,c
  3625   007776  3657               	rlcf	??_outputPrint^0,f,c
  3626   007778  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3627   00777A  0E80               	movlw	low _msgsL1
  3628   00777C  2457               	addwf	??_outputPrint^0,w,c
  3629   00777E  6E59               	movwf	(??_outputPrint+2)^0,c
  3630   007780  0E00               	movlw	high _msgsL1
  3631   007782  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3632   007784  6E5A               	movwf	(??_outputPrint+3)^0,c
  3633   007786  90D8               	bcf	status,0,c
  3634   007788  3455               	rlcf	outputPrint@idioma^0,w,c
  3635   00778A  6ED9               	movwf	fsr2l,c
  3636   00778C  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3637   00778E  6EDA               	movwf	fsr2h,c
  3638   007790  5059               	movf	(??_outputPrint+2)^0,w,c
  3639   007792  26D9               	addwf	fsr2l,f,c
  3640   007794  505A               	movf	(??_outputPrint+3)^0,w,c
  3641   007796  22DA               	addwfc	fsr2h,f,c
  3642   007798  CFDE F004          	movff	postinc2,lcdString@msg
  3643   00779C  CFDD F005          	movff	postdec2,lcdString@msg+1
  3644   0077A0  EC31  F01F         	call	_lcdString	;wreg free
  3645   0077A4                     
  3646                           ;output.c: 132:         lcdCommand(0xC0);
  3647   0077A4  0EC0               	movlw	192
  3648   0077A6  EC6B  F01E         	call	_lcdCommand
  3649                           
  3650                           ;output.c: 133:         lcdString(msgsL2[numTela][idioma]);
  3651   0077AA  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3652   0077AE  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3653   0077B2  90D8               	bcf	status,0,c
  3654   0077B4  3657               	rlcf	??_outputPrint^0,f,c
  3655   0077B6  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3656   0077B8  90D8               	bcf	status,0,c
  3657   0077BA  3657               	rlcf	??_outputPrint^0,f,c
  3658   0077BC  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3659   0077BE  0E60               	movlw	low _msgsL2
  3660   0077C0  2457               	addwf	??_outputPrint^0,w,c
  3661   0077C2  6E59               	movwf	(??_outputPrint+2)^0,c
  3662   0077C4  0E00               	movlw	high _msgsL2
  3663   0077C6  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3664   0077C8  6E5A               	movwf	(??_outputPrint+3)^0,c
  3665   0077CA  90D8               	bcf	status,0,c
  3666   0077CC  3455               	rlcf	outputPrint@idioma^0,w,c
  3667   0077CE  6ED9               	movwf	fsr2l,c
  3668   0077D0  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3669   0077D2  6EDA               	movwf	fsr2h,c
  3670   0077D4  5059               	movf	(??_outputPrint+2)^0,w,c
  3671   0077D6  26D9               	addwf	fsr2l,f,c
  3672   0077D8  505A               	movf	(??_outputPrint+3)^0,w,c
  3673   0077DA  22DA               	addwfc	fsr2h,f,c
  3674   0077DC  CFDE F004          	movff	postinc2,lcdString@msg
  3675   0077E0  CFDD F005          	movff	postdec2,lcdString@msg+1
  3676   0077E4  EC31  F01F         	call	_lcdString	;wreg free
  3677   0077E8                     
  3678                           ;output.c: 135:         serialSend('\12');
  3679   0077E8  0E0A               	movlw	10
  3680   0077EA  EC9F  F01C         	call	_serialSend
  3681   0077EE                     
  3682                           ;output.c: 136:         serialString(msgsL1[numTela][idioma]);
  3683   0077EE  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3684   0077F2  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3685   0077F6  90D8               	bcf	status,0,c
  3686   0077F8  3657               	rlcf	??_outputPrint^0,f,c
  3687   0077FA  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3688   0077FC  90D8               	bcf	status,0,c
  3689   0077FE  3657               	rlcf	??_outputPrint^0,f,c
  3690   007800  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3691   007802  0E80               	movlw	low _msgsL1
  3692   007804  2457               	addwf	??_outputPrint^0,w,c
  3693   007806  6E59               	movwf	(??_outputPrint+2)^0,c
  3694   007808  0E00               	movlw	high _msgsL1
  3695   00780A  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3696   00780C  6E5A               	movwf	(??_outputPrint+3)^0,c
  3697   00780E  90D8               	bcf	status,0,c
  3698   007810  3455               	rlcf	outputPrint@idioma^0,w,c
  3699   007812  6ED9               	movwf	fsr2l,c
  3700   007814  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3701   007816  6EDA               	movwf	fsr2h,c
  3702   007818  5059               	movf	(??_outputPrint+2)^0,w,c
  3703   00781A  26D9               	addwf	fsr2l,f,c
  3704   00781C  505A               	movf	(??_outputPrint+3)^0,w,c
  3705   00781E  22DA               	addwfc	fsr2h,f,c
  3706   007820  CFDE F002          	movff	postinc2,serialString@msg
  3707   007824  CFDD F003          	movff	postdec2,serialString@msg+1
  3708   007828  EC98  F020         	call	_serialString	;wreg free
  3709   00782C                     
  3710                           ;output.c: 137:         serialSend('\12');
  3711   00782C  0E0A               	movlw	10
  3712   00782E  EC9F  F01C         	call	_serialSend
  3713   007832                     
  3714                           ;output.c: 138:         serialString(msgsL2[numTela][idioma]);
  3715   007832  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3716   007836  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3717   00783A  90D8               	bcf	status,0,c
  3718   00783C  3657               	rlcf	??_outputPrint^0,f,c
  3719   00783E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3720   007840  90D8               	bcf	status,0,c
  3721   007842  3657               	rlcf	??_outputPrint^0,f,c
  3722   007844  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3723   007846  0E60               	movlw	low _msgsL2
  3724   007848  2457               	addwf	??_outputPrint^0,w,c
  3725   00784A  6E59               	movwf	(??_outputPrint+2)^0,c
  3726   00784C  0E00               	movlw	high _msgsL2
  3727   00784E  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3728   007850  6E5A               	movwf	(??_outputPrint+3)^0,c
  3729   007852  90D8               	bcf	status,0,c
  3730   007854  3455               	rlcf	outputPrint@idioma^0,w,c
  3731   007856  6ED9               	movwf	fsr2l,c
  3732   007858  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3733   00785A  6EDA               	movwf	fsr2h,c
  3734   00785C  5059               	movf	(??_outputPrint+2)^0,w,c
  3735   00785E  26D9               	addwf	fsr2l,f,c
  3736   007860  505A               	movf	(??_outputPrint+3)^0,w,c
  3737   007862  22DA               	addwfc	fsr2h,f,c
  3738   007864  CFDE F002          	movff	postinc2,serialString@msg
  3739   007868  CFDD F003          	movff	postdec2,serialString@msg+1
  3740   00786C  EC98  F020         	call	_serialString	;wreg free
  3741   007870                     l5380:
  3742                           
  3743                           ;output.c: 141:     if (numTela == STATE_ALARME_1_ALTO) {
  3744   007870  0E04               	movlw	4
  3745   007872  1853               	xorwf	outputPrint@numTela^0,w,c
  3746   007874  1054               	iorwf	(outputPrint@numTela+1)^0,w,c
  3747   007876  A4D8               	btfss	status,2,c
  3748   007878  EF40  F03C         	goto	u6611
  3749   00787C  EF42  F03C         	goto	u6610
  3750   007880                     u6611:
  3751   007880  EFEA  F03C         	goto	l5400
  3752   007884                     u6610:
  3753   007884                     
  3754                           ;output.c: 142:         lcdCommand(0x80);
  3755   007884  0E80               	movlw	128
  3756   007886  EC6B  F01E         	call	_lcdCommand
  3757   00788A                     
  3758                           ;output.c: 143:         lcdString(msgsL1[numTela][idioma]);
  3759   00788A  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3760   00788E  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3761   007892  90D8               	bcf	status,0,c
  3762   007894  3657               	rlcf	??_outputPrint^0,f,c
  3763   007896  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3764   007898  90D8               	bcf	status,0,c
  3765   00789A  3657               	rlcf	??_outputPrint^0,f,c
  3766   00789C  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3767   00789E  0E80               	movlw	low _msgsL1
  3768   0078A0  2457               	addwf	??_outputPrint^0,w,c
  3769   0078A2  6E59               	movwf	(??_outputPrint+2)^0,c
  3770   0078A4  0E00               	movlw	high _msgsL1
  3771   0078A6  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3772   0078A8  6E5A               	movwf	(??_outputPrint+3)^0,c
  3773   0078AA  90D8               	bcf	status,0,c
  3774   0078AC  3455               	rlcf	outputPrint@idioma^0,w,c
  3775   0078AE  6ED9               	movwf	fsr2l,c
  3776   0078B0  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3777   0078B2  6EDA               	movwf	fsr2h,c
  3778   0078B4  5059               	movf	(??_outputPrint+2)^0,w,c
  3779   0078B6  26D9               	addwf	fsr2l,f,c
  3780   0078B8  505A               	movf	(??_outputPrint+3)^0,w,c
  3781   0078BA  22DA               	addwfc	fsr2h,f,c
  3782   0078BC  CFDE F004          	movff	postinc2,lcdString@msg
  3783   0078C0  CFDD F005          	movff	postdec2,lcdString@msg+1
  3784   0078C4  EC31  F01F         	call	_lcdString	;wreg free
  3785   0078C8                     
  3786                           ;output.c: 144:         lcdCommand(0xC0);
  3787   0078C8  0EC0               	movlw	192
  3788   0078CA  EC6B  F01E         	call	_lcdCommand
  3789                           
  3790                           ;output.c: 145:         lcdString(msgsL2[numTela][idioma]);
  3791   0078CE  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3792   0078D2  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3793   0078D6  90D8               	bcf	status,0,c
  3794   0078D8  3657               	rlcf	??_outputPrint^0,f,c
  3795   0078DA  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3796   0078DC  90D8               	bcf	status,0,c
  3797   0078DE  3657               	rlcf	??_outputPrint^0,f,c
  3798   0078E0  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3799   0078E2  0E60               	movlw	low _msgsL2
  3800   0078E4  2457               	addwf	??_outputPrint^0,w,c
  3801   0078E6  6E59               	movwf	(??_outputPrint+2)^0,c
  3802   0078E8  0E00               	movlw	high _msgsL2
  3803   0078EA  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3804   0078EC  6E5A               	movwf	(??_outputPrint+3)^0,c
  3805   0078EE  90D8               	bcf	status,0,c
  3806   0078F0  3455               	rlcf	outputPrint@idioma^0,w,c
  3807   0078F2  6ED9               	movwf	fsr2l,c
  3808   0078F4  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3809   0078F6  6EDA               	movwf	fsr2h,c
  3810   0078F8  5059               	movf	(??_outputPrint+2)^0,w,c
  3811   0078FA  26D9               	addwf	fsr2l,f,c
  3812   0078FC  505A               	movf	(??_outputPrint+3)^0,w,c
  3813   0078FE  22DA               	addwfc	fsr2h,f,c
  3814   007900  CFDE F004          	movff	postinc2,lcdString@msg
  3815   007904  CFDD F005          	movff	postdec2,lcdString@msg+1
  3816   007908  EC31  F01F         	call	_lcdString	;wreg free
  3817   00790C                     
  3818                           ;output.c: 146:         lcdInt(getAlarmLevel(0, 0));
  3819   00790C  0E00               	movlw	0
  3820   00790E  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  3821   007910  0E00               	movlw	0
  3822   007912  6E13               	movwf	getAlarmLevel@alarm^0,c
  3823   007914  0E00               	movlw	0
  3824   007916  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  3825   007918  0E00               	movlw	0
  3826   00791A  6E15               	movwf	getAlarmLevel@level^0,c
  3827   00791C  EC82  F023         	call	_getAlarmLevel	;wreg free
  3828   007920  C013  F04A         	movff	?_getAlarmLevel,lcdInt@val
  3829   007924  C014  F04B         	movff	?_getAlarmLevel+1,lcdInt@val+1
  3830   007928  ECD7  F020         	call	_lcdInt	;wreg free
  3831   00792C                     
  3832                           ;output.c: 148:         serialSend('\12');
  3833   00792C  0E0A               	movlw	10
  3834   00792E  EC9F  F01C         	call	_serialSend
  3835   007932                     
  3836                           ;output.c: 149:         serialString(msgsL1[numTela][idioma]);
  3837   007932  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3838   007936  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3839   00793A  90D8               	bcf	status,0,c
  3840   00793C  3657               	rlcf	??_outputPrint^0,f,c
  3841   00793E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3842   007940  90D8               	bcf	status,0,c
  3843   007942  3657               	rlcf	??_outputPrint^0,f,c
  3844   007944  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3845   007946  0E80               	movlw	low _msgsL1
  3846   007948  2457               	addwf	??_outputPrint^0,w,c
  3847   00794A  6E59               	movwf	(??_outputPrint+2)^0,c
  3848   00794C  0E00               	movlw	high _msgsL1
  3849   00794E  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3850   007950  6E5A               	movwf	(??_outputPrint+3)^0,c
  3851   007952  90D8               	bcf	status,0,c
  3852   007954  3455               	rlcf	outputPrint@idioma^0,w,c
  3853   007956  6ED9               	movwf	fsr2l,c
  3854   007958  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3855   00795A  6EDA               	movwf	fsr2h,c
  3856   00795C  5059               	movf	(??_outputPrint+2)^0,w,c
  3857   00795E  26D9               	addwf	fsr2l,f,c
  3858   007960  505A               	movf	(??_outputPrint+3)^0,w,c
  3859   007962  22DA               	addwfc	fsr2h,f,c
  3860   007964  CFDE F002          	movff	postinc2,serialString@msg
  3861   007968  CFDD F003          	movff	postdec2,serialString@msg+1
  3862   00796C  EC98  F020         	call	_serialString	;wreg free
  3863   007970                     
  3864                           ;output.c: 150:         serialSend('\12');
  3865   007970  0E0A               	movlw	10
  3866   007972  EC9F  F01C         	call	_serialSend
  3867   007976                     
  3868                           ;output.c: 151:         serialString(msgsL2[numTela][idioma]);
  3869   007976  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3870   00797A  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3871   00797E  90D8               	bcf	status,0,c
  3872   007980  3657               	rlcf	??_outputPrint^0,f,c
  3873   007982  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3874   007984  90D8               	bcf	status,0,c
  3875   007986  3657               	rlcf	??_outputPrint^0,f,c
  3876   007988  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3877   00798A  0E60               	movlw	low _msgsL2
  3878   00798C  2457               	addwf	??_outputPrint^0,w,c
  3879   00798E  6E59               	movwf	(??_outputPrint+2)^0,c
  3880   007990  0E00               	movlw	high _msgsL2
  3881   007992  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3882   007994  6E5A               	movwf	(??_outputPrint+3)^0,c
  3883   007996  90D8               	bcf	status,0,c
  3884   007998  3455               	rlcf	outputPrint@idioma^0,w,c
  3885   00799A  6ED9               	movwf	fsr2l,c
  3886   00799C  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3887   00799E  6EDA               	movwf	fsr2h,c
  3888   0079A0  5059               	movf	(??_outputPrint+2)^0,w,c
  3889   0079A2  26D9               	addwf	fsr2l,f,c
  3890   0079A4  505A               	movf	(??_outputPrint+3)^0,w,c
  3891   0079A6  22DA               	addwfc	fsr2h,f,c
  3892   0079A8  CFDE F002          	movff	postinc2,serialString@msg
  3893   0079AC  CFDD F003          	movff	postdec2,serialString@msg+1
  3894   0079B0  EC98  F020         	call	_serialString	;wreg free
  3895   0079B4                     
  3896                           ;output.c: 152:         serialInt(getAlarmLevel(0, 0));
  3897   0079B4  0E00               	movlw	0
  3898   0079B6  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  3899   0079B8  0E00               	movlw	0
  3900   0079BA  6E13               	movwf	getAlarmLevel@alarm^0,c
  3901   0079BC  0E00               	movlw	0
  3902   0079BE  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  3903   0079C0  0E00               	movlw	0
  3904   0079C2  6E15               	movwf	getAlarmLevel@level^0,c
  3905   0079C4  EC82  F023         	call	_getAlarmLevel	;wreg free
  3906   0079C8  C013  F051         	movff	?_getAlarmLevel,serialInt@val
  3907   0079CC  C014  F052         	movff	?_getAlarmLevel+1,serialInt@val+1
  3908   0079D0  EC16  F021         	call	_serialInt	;wreg free
  3909   0079D4                     l5400:
  3910                           
  3911                           ;output.c: 155:     if (numTela == STATE_ALARME_1_BAIXO) {
  3912   0079D4  0E05               	movlw	5
  3913   0079D6  1853               	xorwf	outputPrint@numTela^0,w,c
  3914   0079D8  1054               	iorwf	(outputPrint@numTela+1)^0,w,c
  3915   0079DA  A4D8               	btfss	status,2,c
  3916   0079DC  EFF2  F03C         	goto	u6621
  3917   0079E0  EFF4  F03C         	goto	u6620
  3918   0079E4                     u6621:
  3919   0079E4  EF9C  F03D         	goto	l5420
  3920   0079E8                     u6620:
  3921   0079E8                     
  3922                           ;output.c: 156:         lcdCommand(0x80);
  3923   0079E8  0E80               	movlw	128
  3924   0079EA  EC6B  F01E         	call	_lcdCommand
  3925   0079EE                     
  3926                           ;output.c: 157:         lcdString(msgsL1[numTela][idioma]);
  3927   0079EE  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3928   0079F2  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3929   0079F6  90D8               	bcf	status,0,c
  3930   0079F8  3657               	rlcf	??_outputPrint^0,f,c
  3931   0079FA  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3932   0079FC  90D8               	bcf	status,0,c
  3933   0079FE  3657               	rlcf	??_outputPrint^0,f,c
  3934   007A00  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3935   007A02  0E80               	movlw	low _msgsL1
  3936   007A04  2457               	addwf	??_outputPrint^0,w,c
  3937   007A06  6E59               	movwf	(??_outputPrint+2)^0,c
  3938   007A08  0E00               	movlw	high _msgsL1
  3939   007A0A  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3940   007A0C  6E5A               	movwf	(??_outputPrint+3)^0,c
  3941   007A0E  90D8               	bcf	status,0,c
  3942   007A10  3455               	rlcf	outputPrint@idioma^0,w,c
  3943   007A12  6ED9               	movwf	fsr2l,c
  3944   007A14  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3945   007A16  6EDA               	movwf	fsr2h,c
  3946   007A18  5059               	movf	(??_outputPrint+2)^0,w,c
  3947   007A1A  26D9               	addwf	fsr2l,f,c
  3948   007A1C  505A               	movf	(??_outputPrint+3)^0,w,c
  3949   007A1E  22DA               	addwfc	fsr2h,f,c
  3950   007A20  CFDE F004          	movff	postinc2,lcdString@msg
  3951   007A24  CFDD F005          	movff	postdec2,lcdString@msg+1
  3952   007A28  EC31  F01F         	call	_lcdString	;wreg free
  3953   007A2C                     
  3954                           ;output.c: 158:         lcdCommand(0xC0);
  3955   007A2C  0EC0               	movlw	192
  3956   007A2E  EC6B  F01E         	call	_lcdCommand
  3957                           
  3958                           ;output.c: 159:         lcdString(msgsL2[numTela][idioma]);
  3959   007A32  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  3960   007A36  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  3961   007A3A  90D8               	bcf	status,0,c
  3962   007A3C  3657               	rlcf	??_outputPrint^0,f,c
  3963   007A3E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3964   007A40  90D8               	bcf	status,0,c
  3965   007A42  3657               	rlcf	??_outputPrint^0,f,c
  3966   007A44  3658               	rlcf	(??_outputPrint+1)^0,f,c
  3967   007A46  0E60               	movlw	low _msgsL2
  3968   007A48  2457               	addwf	??_outputPrint^0,w,c
  3969   007A4A  6E59               	movwf	(??_outputPrint+2)^0,c
  3970   007A4C  0E00               	movlw	high _msgsL2
  3971   007A4E  2058               	addwfc	(??_outputPrint+1)^0,w,c
  3972   007A50  6E5A               	movwf	(??_outputPrint+3)^0,c
  3973   007A52  90D8               	bcf	status,0,c
  3974   007A54  3455               	rlcf	outputPrint@idioma^0,w,c
  3975   007A56  6ED9               	movwf	fsr2l,c
  3976   007A58  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  3977   007A5A  6EDA               	movwf	fsr2h,c
  3978   007A5C  5059               	movf	(??_outputPrint+2)^0,w,c
  3979   007A5E  26D9               	addwf	fsr2l,f,c
  3980   007A60  505A               	movf	(??_outputPrint+3)^0,w,c
  3981   007A62  22DA               	addwfc	fsr2h,f,c
  3982   007A64  CFDE F004          	movff	postinc2,lcdString@msg
  3983   007A68  CFDD F005          	movff	postdec2,lcdString@msg+1
  3984   007A6C  EC31  F01F         	call	_lcdString	;wreg free
  3985   007A70                     
  3986                           ;output.c: 160:         lcdInt(getAlarmLevel(0, 1));
  3987   007A70  0E00               	movlw	0
  3988   007A72  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  3989   007A74  0E00               	movlw	0
  3990   007A76  6E13               	movwf	getAlarmLevel@alarm^0,c
  3991   007A78  0E00               	movlw	0
  3992   007A7A  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  3993   007A7C  0E01               	movlw	1
  3994   007A7E  6E15               	movwf	getAlarmLevel@level^0,c
  3995   007A80  EC82  F023         	call	_getAlarmLevel	;wreg free
  3996   007A84  C013  F04A         	movff	?_getAlarmLevel,lcdInt@val
  3997   007A88  C014  F04B         	movff	?_getAlarmLevel+1,lcdInt@val+1
  3998   007A8C  ECD7  F020         	call	_lcdInt	;wreg free
  3999   007A90                     
  4000                           ;output.c: 162:         serialSend('\12');
  4001   007A90  0E0A               	movlw	10
  4002   007A92  EC9F  F01C         	call	_serialSend
  4003   007A96                     
  4004                           ;output.c: 163:         serialString(msgsL1[numTela][idioma]);
  4005   007A96  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4006   007A9A  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4007   007A9E  90D8               	bcf	status,0,c
  4008   007AA0  3657               	rlcf	??_outputPrint^0,f,c
  4009   007AA2  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4010   007AA4  90D8               	bcf	status,0,c
  4011   007AA6  3657               	rlcf	??_outputPrint^0,f,c
  4012   007AA8  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4013   007AAA  0E80               	movlw	low _msgsL1
  4014   007AAC  2457               	addwf	??_outputPrint^0,w,c
  4015   007AAE  6E59               	movwf	(??_outputPrint+2)^0,c
  4016   007AB0  0E00               	movlw	high _msgsL1
  4017   007AB2  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4018   007AB4  6E5A               	movwf	(??_outputPrint+3)^0,c
  4019   007AB6  90D8               	bcf	status,0,c
  4020   007AB8  3455               	rlcf	outputPrint@idioma^0,w,c
  4021   007ABA  6ED9               	movwf	fsr2l,c
  4022   007ABC  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4023   007ABE  6EDA               	movwf	fsr2h,c
  4024   007AC0  5059               	movf	(??_outputPrint+2)^0,w,c
  4025   007AC2  26D9               	addwf	fsr2l,f,c
  4026   007AC4  505A               	movf	(??_outputPrint+3)^0,w,c
  4027   007AC6  22DA               	addwfc	fsr2h,f,c
  4028   007AC8  CFDE F002          	movff	postinc2,serialString@msg
  4029   007ACC  CFDD F003          	movff	postdec2,serialString@msg+1
  4030   007AD0  EC98  F020         	call	_serialString	;wreg free
  4031   007AD4                     
  4032                           ;output.c: 164:         serialSend('\12');
  4033   007AD4  0E0A               	movlw	10
  4034   007AD6  EC9F  F01C         	call	_serialSend
  4035   007ADA                     
  4036                           ;output.c: 165:         serialString(msgsL2[numTela][idioma]);
  4037   007ADA  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4038   007ADE  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4039   007AE2  90D8               	bcf	status,0,c
  4040   007AE4  3657               	rlcf	??_outputPrint^0,f,c
  4041   007AE6  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4042   007AE8  90D8               	bcf	status,0,c
  4043   007AEA  3657               	rlcf	??_outputPrint^0,f,c
  4044   007AEC  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4045   007AEE  0E60               	movlw	low _msgsL2
  4046   007AF0  2457               	addwf	??_outputPrint^0,w,c
  4047   007AF2  6E59               	movwf	(??_outputPrint+2)^0,c
  4048   007AF4  0E00               	movlw	high _msgsL2
  4049   007AF6  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4050   007AF8  6E5A               	movwf	(??_outputPrint+3)^0,c
  4051   007AFA  90D8               	bcf	status,0,c
  4052   007AFC  3455               	rlcf	outputPrint@idioma^0,w,c
  4053   007AFE  6ED9               	movwf	fsr2l,c
  4054   007B00  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4055   007B02  6EDA               	movwf	fsr2h,c
  4056   007B04  5059               	movf	(??_outputPrint+2)^0,w,c
  4057   007B06  26D9               	addwf	fsr2l,f,c
  4058   007B08  505A               	movf	(??_outputPrint+3)^0,w,c
  4059   007B0A  22DA               	addwfc	fsr2h,f,c
  4060   007B0C  CFDE F002          	movff	postinc2,serialString@msg
  4061   007B10  CFDD F003          	movff	postdec2,serialString@msg+1
  4062   007B14  EC98  F020         	call	_serialString	;wreg free
  4063   007B18                     
  4064                           ;output.c: 166:         serialInt(getAlarmLevel(0, 1));
  4065   007B18  0E00               	movlw	0
  4066   007B1A  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  4067   007B1C  0E00               	movlw	0
  4068   007B1E  6E13               	movwf	getAlarmLevel@alarm^0,c
  4069   007B20  0E00               	movlw	0
  4070   007B22  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  4071   007B24  0E01               	movlw	1
  4072   007B26  6E15               	movwf	getAlarmLevel@level^0,c
  4073   007B28  EC82  F023         	call	_getAlarmLevel	;wreg free
  4074   007B2C  C013  F051         	movff	?_getAlarmLevel,serialInt@val
  4075   007B30  C014  F052         	movff	?_getAlarmLevel+1,serialInt@val+1
  4076   007B34  EC16  F021         	call	_serialInt	;wreg free
  4077   007B38                     l5420:
  4078                           
  4079                           ;output.c: 169:     if (numTela == STATE_ALARME_2_ALTO) {
  4080   007B38  0E06               	movlw	6
  4081   007B3A  1853               	xorwf	outputPrint@numTela^0,w,c
  4082   007B3C  1054               	iorwf	(outputPrint@numTela+1)^0,w,c
  4083   007B3E  A4D8               	btfss	status,2,c
  4084   007B40  EFA4  F03D         	goto	u6631
  4085   007B44  EFA6  F03D         	goto	u6630
  4086   007B48                     u6631:
  4087   007B48  EF4E  F03E         	goto	l5440
  4088   007B4C                     u6630:
  4089   007B4C                     
  4090                           ;output.c: 170:         lcdCommand(0x80);
  4091   007B4C  0E80               	movlw	128
  4092   007B4E  EC6B  F01E         	call	_lcdCommand
  4093   007B52                     
  4094                           ;output.c: 171:         lcdString(msgsL1[numTela][idioma]);
  4095   007B52  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4096   007B56  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4097   007B5A  90D8               	bcf	status,0,c
  4098   007B5C  3657               	rlcf	??_outputPrint^0,f,c
  4099   007B5E  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4100   007B60  90D8               	bcf	status,0,c
  4101   007B62  3657               	rlcf	??_outputPrint^0,f,c
  4102   007B64  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4103   007B66  0E80               	movlw	low _msgsL1
  4104   007B68  2457               	addwf	??_outputPrint^0,w,c
  4105   007B6A  6E59               	movwf	(??_outputPrint+2)^0,c
  4106   007B6C  0E00               	movlw	high _msgsL1
  4107   007B6E  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4108   007B70  6E5A               	movwf	(??_outputPrint+3)^0,c
  4109   007B72  90D8               	bcf	status,0,c
  4110   007B74  3455               	rlcf	outputPrint@idioma^0,w,c
  4111   007B76  6ED9               	movwf	fsr2l,c
  4112   007B78  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4113   007B7A  6EDA               	movwf	fsr2h,c
  4114   007B7C  5059               	movf	(??_outputPrint+2)^0,w,c
  4115   007B7E  26D9               	addwf	fsr2l,f,c
  4116   007B80  505A               	movf	(??_outputPrint+3)^0,w,c
  4117   007B82  22DA               	addwfc	fsr2h,f,c
  4118   007B84  CFDE F004          	movff	postinc2,lcdString@msg
  4119   007B88  CFDD F005          	movff	postdec2,lcdString@msg+1
  4120   007B8C  EC31  F01F         	call	_lcdString	;wreg free
  4121   007B90                     
  4122                           ;output.c: 172:         lcdCommand(0xC0);
  4123   007B90  0EC0               	movlw	192
  4124   007B92  EC6B  F01E         	call	_lcdCommand
  4125                           
  4126                           ;output.c: 173:         lcdString(msgsL2[numTela][idioma]);
  4127   007B96  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4128   007B9A  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4129   007B9E  90D8               	bcf	status,0,c
  4130   007BA0  3657               	rlcf	??_outputPrint^0,f,c
  4131   007BA2  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4132   007BA4  90D8               	bcf	status,0,c
  4133   007BA6  3657               	rlcf	??_outputPrint^0,f,c
  4134   007BA8  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4135   007BAA  0E60               	movlw	low _msgsL2
  4136   007BAC  2457               	addwf	??_outputPrint^0,w,c
  4137   007BAE  6E59               	movwf	(??_outputPrint+2)^0,c
  4138   007BB0  0E00               	movlw	high _msgsL2
  4139   007BB2  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4140   007BB4  6E5A               	movwf	(??_outputPrint+3)^0,c
  4141   007BB6  90D8               	bcf	status,0,c
  4142   007BB8  3455               	rlcf	outputPrint@idioma^0,w,c
  4143   007BBA  6ED9               	movwf	fsr2l,c
  4144   007BBC  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4145   007BBE  6EDA               	movwf	fsr2h,c
  4146   007BC0  5059               	movf	(??_outputPrint+2)^0,w,c
  4147   007BC2  26D9               	addwf	fsr2l,f,c
  4148   007BC4  505A               	movf	(??_outputPrint+3)^0,w,c
  4149   007BC6  22DA               	addwfc	fsr2h,f,c
  4150   007BC8  CFDE F004          	movff	postinc2,lcdString@msg
  4151   007BCC  CFDD F005          	movff	postdec2,lcdString@msg+1
  4152   007BD0  EC31  F01F         	call	_lcdString	;wreg free
  4153   007BD4                     
  4154                           ;output.c: 174:         lcdInt(getAlarmLevel(1, 0));
  4155   007BD4  0E00               	movlw	0
  4156   007BD6  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  4157   007BD8  0E01               	movlw	1
  4158   007BDA  6E13               	movwf	getAlarmLevel@alarm^0,c
  4159   007BDC  0E00               	movlw	0
  4160   007BDE  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  4161   007BE0  0E00               	movlw	0
  4162   007BE2  6E15               	movwf	getAlarmLevel@level^0,c
  4163   007BE4  EC82  F023         	call	_getAlarmLevel	;wreg free
  4164   007BE8  C013  F04A         	movff	?_getAlarmLevel,lcdInt@val
  4165   007BEC  C014  F04B         	movff	?_getAlarmLevel+1,lcdInt@val+1
  4166   007BF0  ECD7  F020         	call	_lcdInt	;wreg free
  4167   007BF4                     
  4168                           ;output.c: 176:         serialSend('\12');
  4169   007BF4  0E0A               	movlw	10
  4170   007BF6  EC9F  F01C         	call	_serialSend
  4171   007BFA                     
  4172                           ;output.c: 177:         serialString(msgsL1[numTela][idioma]);
  4173   007BFA  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4174   007BFE  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4175   007C02  90D8               	bcf	status,0,c
  4176   007C04  3657               	rlcf	??_outputPrint^0,f,c
  4177   007C06  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4178   007C08  90D8               	bcf	status,0,c
  4179   007C0A  3657               	rlcf	??_outputPrint^0,f,c
  4180   007C0C  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4181   007C0E  0E80               	movlw	low _msgsL1
  4182   007C10  2457               	addwf	??_outputPrint^0,w,c
  4183   007C12  6E59               	movwf	(??_outputPrint+2)^0,c
  4184   007C14  0E00               	movlw	high _msgsL1
  4185   007C16  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4186   007C18  6E5A               	movwf	(??_outputPrint+3)^0,c
  4187   007C1A  90D8               	bcf	status,0,c
  4188   007C1C  3455               	rlcf	outputPrint@idioma^0,w,c
  4189   007C1E  6ED9               	movwf	fsr2l,c
  4190   007C20  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4191   007C22  6EDA               	movwf	fsr2h,c
  4192   007C24  5059               	movf	(??_outputPrint+2)^0,w,c
  4193   007C26  26D9               	addwf	fsr2l,f,c
  4194   007C28  505A               	movf	(??_outputPrint+3)^0,w,c
  4195   007C2A  22DA               	addwfc	fsr2h,f,c
  4196   007C2C  CFDE F002          	movff	postinc2,serialString@msg
  4197   007C30  CFDD F003          	movff	postdec2,serialString@msg+1
  4198   007C34  EC98  F020         	call	_serialString	;wreg free
  4199   007C38                     
  4200                           ;output.c: 178:         serialSend('\12');
  4201   007C38  0E0A               	movlw	10
  4202   007C3A  EC9F  F01C         	call	_serialSend
  4203   007C3E                     
  4204                           ;output.c: 179:         serialString(msgsL2[numTela][idioma]);
  4205   007C3E  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4206   007C42  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4207   007C46  90D8               	bcf	status,0,c
  4208   007C48  3657               	rlcf	??_outputPrint^0,f,c
  4209   007C4A  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4210   007C4C  90D8               	bcf	status,0,c
  4211   007C4E  3657               	rlcf	??_outputPrint^0,f,c
  4212   007C50  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4213   007C52  0E60               	movlw	low _msgsL2
  4214   007C54  2457               	addwf	??_outputPrint^0,w,c
  4215   007C56  6E59               	movwf	(??_outputPrint+2)^0,c
  4216   007C58  0E00               	movlw	high _msgsL2
  4217   007C5A  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4218   007C5C  6E5A               	movwf	(??_outputPrint+3)^0,c
  4219   007C5E  90D8               	bcf	status,0,c
  4220   007C60  3455               	rlcf	outputPrint@idioma^0,w,c
  4221   007C62  6ED9               	movwf	fsr2l,c
  4222   007C64  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4223   007C66  6EDA               	movwf	fsr2h,c
  4224   007C68  5059               	movf	(??_outputPrint+2)^0,w,c
  4225   007C6A  26D9               	addwf	fsr2l,f,c
  4226   007C6C  505A               	movf	(??_outputPrint+3)^0,w,c
  4227   007C6E  22DA               	addwfc	fsr2h,f,c
  4228   007C70  CFDE F002          	movff	postinc2,serialString@msg
  4229   007C74  CFDD F003          	movff	postdec2,serialString@msg+1
  4230   007C78  EC98  F020         	call	_serialString	;wreg free
  4231   007C7C                     
  4232                           ;output.c: 180:         serialInt(getAlarmLevel(1, 0));
  4233   007C7C  0E00               	movlw	0
  4234   007C7E  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  4235   007C80  0E01               	movlw	1
  4236   007C82  6E13               	movwf	getAlarmLevel@alarm^0,c
  4237   007C84  0E00               	movlw	0
  4238   007C86  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  4239   007C88  0E00               	movlw	0
  4240   007C8A  6E15               	movwf	getAlarmLevel@level^0,c
  4241   007C8C  EC82  F023         	call	_getAlarmLevel	;wreg free
  4242   007C90  C013  F051         	movff	?_getAlarmLevel,serialInt@val
  4243   007C94  C014  F052         	movff	?_getAlarmLevel+1,serialInt@val+1
  4244   007C98  EC16  F021         	call	_serialInt	;wreg free
  4245   007C9C                     l5440:
  4246                           
  4247                           ;output.c: 183:     if (numTela == STATE_ALARME_2_BAIXO) {
  4248   007C9C  0E07               	movlw	7
  4249   007C9E  1853               	xorwf	outputPrint@numTela^0,w,c
  4250   007CA0  1054               	iorwf	(outputPrint@numTela+1)^0,w,c
  4251   007CA2  A4D8               	btfss	status,2,c
  4252   007CA4  EF56  F03E         	goto	u6641
  4253   007CA8  EF58  F03E         	goto	u6640
  4254   007CAC                     u6641:
  4255   007CAC  EF00  F03F         	goto	l786
  4256   007CB0                     u6640:
  4257   007CB0                     
  4258                           ;output.c: 184:         lcdCommand(0x80);
  4259   007CB0  0E80               	movlw	128
  4260   007CB2  EC6B  F01E         	call	_lcdCommand
  4261   007CB6                     
  4262                           ;output.c: 185:         lcdString(msgsL1[numTela][idioma]);
  4263   007CB6  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4264   007CBA  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4265   007CBE  90D8               	bcf	status,0,c
  4266   007CC0  3657               	rlcf	??_outputPrint^0,f,c
  4267   007CC2  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4268   007CC4  90D8               	bcf	status,0,c
  4269   007CC6  3657               	rlcf	??_outputPrint^0,f,c
  4270   007CC8  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4271   007CCA  0E80               	movlw	low _msgsL1
  4272   007CCC  2457               	addwf	??_outputPrint^0,w,c
  4273   007CCE  6E59               	movwf	(??_outputPrint+2)^0,c
  4274   007CD0  0E00               	movlw	high _msgsL1
  4275   007CD2  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4276   007CD4  6E5A               	movwf	(??_outputPrint+3)^0,c
  4277   007CD6  90D8               	bcf	status,0,c
  4278   007CD8  3455               	rlcf	outputPrint@idioma^0,w,c
  4279   007CDA  6ED9               	movwf	fsr2l,c
  4280   007CDC  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4281   007CDE  6EDA               	movwf	fsr2h,c
  4282   007CE0  5059               	movf	(??_outputPrint+2)^0,w,c
  4283   007CE2  26D9               	addwf	fsr2l,f,c
  4284   007CE4  505A               	movf	(??_outputPrint+3)^0,w,c
  4285   007CE6  22DA               	addwfc	fsr2h,f,c
  4286   007CE8  CFDE F004          	movff	postinc2,lcdString@msg
  4287   007CEC  CFDD F005          	movff	postdec2,lcdString@msg+1
  4288   007CF0  EC31  F01F         	call	_lcdString	;wreg free
  4289   007CF4                     
  4290                           ;output.c: 186:         lcdCommand(0xC0);
  4291   007CF4  0EC0               	movlw	192
  4292   007CF6  EC6B  F01E         	call	_lcdCommand
  4293                           
  4294                           ;output.c: 187:         lcdString(msgsL2[numTela][idioma]);
  4295   007CFA  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4296   007CFE  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4297   007D02  90D8               	bcf	status,0,c
  4298   007D04  3657               	rlcf	??_outputPrint^0,f,c
  4299   007D06  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4300   007D08  90D8               	bcf	status,0,c
  4301   007D0A  3657               	rlcf	??_outputPrint^0,f,c
  4302   007D0C  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4303   007D0E  0E60               	movlw	low _msgsL2
  4304   007D10  2457               	addwf	??_outputPrint^0,w,c
  4305   007D12  6E59               	movwf	(??_outputPrint+2)^0,c
  4306   007D14  0E00               	movlw	high _msgsL2
  4307   007D16  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4308   007D18  6E5A               	movwf	(??_outputPrint+3)^0,c
  4309   007D1A  90D8               	bcf	status,0,c
  4310   007D1C  3455               	rlcf	outputPrint@idioma^0,w,c
  4311   007D1E  6ED9               	movwf	fsr2l,c
  4312   007D20  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4313   007D22  6EDA               	movwf	fsr2h,c
  4314   007D24  5059               	movf	(??_outputPrint+2)^0,w,c
  4315   007D26  26D9               	addwf	fsr2l,f,c
  4316   007D28  505A               	movf	(??_outputPrint+3)^0,w,c
  4317   007D2A  22DA               	addwfc	fsr2h,f,c
  4318   007D2C  CFDE F004          	movff	postinc2,lcdString@msg
  4319   007D30  CFDD F005          	movff	postdec2,lcdString@msg+1
  4320   007D34  EC31  F01F         	call	_lcdString	;wreg free
  4321   007D38                     
  4322                           ;output.c: 188:         lcdInt(getAlarmLevel(1, 1));
  4323   007D38  0E00               	movlw	0
  4324   007D3A  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  4325   007D3C  0E01               	movlw	1
  4326   007D3E  6E13               	movwf	getAlarmLevel@alarm^0,c
  4327   007D40  0E00               	movlw	0
  4328   007D42  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  4329   007D44  0E01               	movlw	1
  4330   007D46  6E15               	movwf	getAlarmLevel@level^0,c
  4331   007D48  EC82  F023         	call	_getAlarmLevel	;wreg free
  4332   007D4C  C013  F04A         	movff	?_getAlarmLevel,lcdInt@val
  4333   007D50  C014  F04B         	movff	?_getAlarmLevel+1,lcdInt@val+1
  4334   007D54  ECD7  F020         	call	_lcdInt	;wreg free
  4335   007D58                     
  4336                           ;output.c: 190:         serialSend('\12');
  4337   007D58  0E0A               	movlw	10
  4338   007D5A  EC9F  F01C         	call	_serialSend
  4339   007D5E                     
  4340                           ;output.c: 191:         serialString(msgsL1[numTela][idioma]);
  4341   007D5E  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4342   007D62  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4343   007D66  90D8               	bcf	status,0,c
  4344   007D68  3657               	rlcf	??_outputPrint^0,f,c
  4345   007D6A  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4346   007D6C  90D8               	bcf	status,0,c
  4347   007D6E  3657               	rlcf	??_outputPrint^0,f,c
  4348   007D70  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4349   007D72  0E80               	movlw	low _msgsL1
  4350   007D74  2457               	addwf	??_outputPrint^0,w,c
  4351   007D76  6E59               	movwf	(??_outputPrint+2)^0,c
  4352   007D78  0E00               	movlw	high _msgsL1
  4353   007D7A  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4354   007D7C  6E5A               	movwf	(??_outputPrint+3)^0,c
  4355   007D7E  90D8               	bcf	status,0,c
  4356   007D80  3455               	rlcf	outputPrint@idioma^0,w,c
  4357   007D82  6ED9               	movwf	fsr2l,c
  4358   007D84  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4359   007D86  6EDA               	movwf	fsr2h,c
  4360   007D88  5059               	movf	(??_outputPrint+2)^0,w,c
  4361   007D8A  26D9               	addwf	fsr2l,f,c
  4362   007D8C  505A               	movf	(??_outputPrint+3)^0,w,c
  4363   007D8E  22DA               	addwfc	fsr2h,f,c
  4364   007D90  CFDE F002          	movff	postinc2,serialString@msg
  4365   007D94  CFDD F003          	movff	postdec2,serialString@msg+1
  4366   007D98  EC98  F020         	call	_serialString	;wreg free
  4367   007D9C                     
  4368                           ;output.c: 192:         serialSend('\12');
  4369   007D9C  0E0A               	movlw	10
  4370   007D9E  EC9F  F01C         	call	_serialSend
  4371   007DA2                     
  4372                           ;output.c: 193:         serialString(msgsL2[numTela][idioma]);
  4373   007DA2  C053  F057         	movff	outputPrint@numTela,??_outputPrint
  4374   007DA6  C054  F058         	movff	outputPrint@numTela+1,??_outputPrint+1
  4375   007DAA  90D8               	bcf	status,0,c
  4376   007DAC  3657               	rlcf	??_outputPrint^0,f,c
  4377   007DAE  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4378   007DB0  90D8               	bcf	status,0,c
  4379   007DB2  3657               	rlcf	??_outputPrint^0,f,c
  4380   007DB4  3658               	rlcf	(??_outputPrint+1)^0,f,c
  4381   007DB6  0E60               	movlw	low _msgsL2
  4382   007DB8  2457               	addwf	??_outputPrint^0,w,c
  4383   007DBA  6E59               	movwf	(??_outputPrint+2)^0,c
  4384   007DBC  0E00               	movlw	high _msgsL2
  4385   007DBE  2058               	addwfc	(??_outputPrint+1)^0,w,c
  4386   007DC0  6E5A               	movwf	(??_outputPrint+3)^0,c
  4387   007DC2  90D8               	bcf	status,0,c
  4388   007DC4  3455               	rlcf	outputPrint@idioma^0,w,c
  4389   007DC6  6ED9               	movwf	fsr2l,c
  4390   007DC8  3456               	rlcf	(outputPrint@idioma+1)^0,w,c
  4391   007DCA  6EDA               	movwf	fsr2h,c
  4392   007DCC  5059               	movf	(??_outputPrint+2)^0,w,c
  4393   007DCE  26D9               	addwf	fsr2l,f,c
  4394   007DD0  505A               	movf	(??_outputPrint+3)^0,w,c
  4395   007DD2  22DA               	addwfc	fsr2h,f,c
  4396   007DD4  CFDE F002          	movff	postinc2,serialString@msg
  4397   007DD8  CFDD F003          	movff	postdec2,serialString@msg+1
  4398   007DDC  EC98  F020         	call	_serialString	;wreg free
  4399   007DE0                     
  4400                           ;output.c: 194:         serialInt(getAlarmLevel(1, 1));
  4401   007DE0  0E00               	movlw	0
  4402   007DE2  6E14               	movwf	(getAlarmLevel@alarm+1)^0,c
  4403   007DE4  0E01               	movlw	1
  4404   007DE6  6E13               	movwf	getAlarmLevel@alarm^0,c
  4405   007DE8  0E00               	movlw	0
  4406   007DEA  6E16               	movwf	(getAlarmLevel@level+1)^0,c
  4407   007DEC  0E01               	movlw	1
  4408   007DEE  6E15               	movwf	getAlarmLevel@level^0,c
  4409   007DF0  EC82  F023         	call	_getAlarmLevel	;wreg free
  4410   007DF4  C013  F051         	movff	?_getAlarmLevel,serialInt@val
  4411   007DF8  C014  F052         	movff	?_getAlarmLevel+1,serialInt@val+1
  4412   007DFC  EC16  F021         	call	_serialInt	;wreg free
  4413   007E00                     l786:
  4414   007E00  0012               	return		;funcret
  4415   007E02                     __end_of_outputPrint:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _serialInt *****************
  4419 ;; Defined at:
  4420 ;;		line 25 in file "serial.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  val             2   80[COMRAM] int 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4434 ;;      Params:         2       0       0       0       0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4437 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4438 ;;Total ram usage:        2 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 1
  4441 ;; This function calls:
  4442 ;;		___awdiv
  4443 ;;		___awmod
  4444 ;;		_serialSend
  4445 ;; This function is called by:
  4446 ;;		_outputPrint
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text9
  4451   00422C                     __ptext9:
  4452                           	callstack 0
  4453   00422C                     _serialInt:
  4454                           	callstack 27
  4455   00422C                     
  4456                           ;serial.c: 27:     serialSend((val / 100) % 10 + 48);
  4457   00422C  0E00               	movlw	0
  4458   00422E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4459   004230  0E64               	movlw	100
  4460   004232  6E03               	movwf	___awdiv@divisor^0,c
  4461   004234  C051  F001         	movff	serialInt@val,___awdiv@dividend
  4462   004238  C052  F002         	movff	serialInt@val+1,___awdiv@dividend+1
  4463   00423C  ECED  F021         	call	___awdiv	;wreg free
  4464   004240  C001  F009         	movff	?___awdiv,___awmod@dividend
  4465   004244  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4466   004248  0E00               	movlw	0
  4467   00424A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4468   00424C  0E0A               	movlw	10
  4469   00424E  6E0B               	movwf	___awmod@divisor^0,c
  4470   004250  EC95  F021         	call	___awmod	;wreg free
  4471   004254  5009               	movf	?___awmod^0,w,c
  4472   004256  0F30               	addlw	48
  4473   004258  EC9F  F01C         	call	_serialSend
  4474                           
  4475                           ;serial.c: 28:     serialSend((val / 10) % 10 + 48);
  4476   00425C  0E00               	movlw	0
  4477   00425E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4478   004260  0E0A               	movlw	10
  4479   004262  6E03               	movwf	___awdiv@divisor^0,c
  4480   004264  C051  F001         	movff	serialInt@val,___awdiv@dividend
  4481   004268  C052  F002         	movff	serialInt@val+1,___awdiv@dividend+1
  4482   00426C  ECED  F021         	call	___awdiv	;wreg free
  4483   004270  C001  F009         	movff	?___awdiv,___awmod@dividend
  4484   004274  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4485   004278  0E00               	movlw	0
  4486   00427A  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4487   00427C  0E0A               	movlw	10
  4488   00427E  6E0B               	movwf	___awmod@divisor^0,c
  4489   004280  EC95  F021         	call	___awmod	;wreg free
  4490   004284  5009               	movf	?___awmod^0,w,c
  4491   004286  0F30               	addlw	48
  4492   004288  EC9F  F01C         	call	_serialSend
  4493                           
  4494                           ;serial.c: 29:     serialSend((val / 1) % 10 + 48);
  4495   00428C  C051  F009         	movff	serialInt@val,___awmod@dividend
  4496   004290  C052  F00A         	movff	serialInt@val+1,___awmod@dividend+1
  4497   004294  0E00               	movlw	0
  4498   004296  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4499   004298  0E0A               	movlw	10
  4500   00429A  6E0B               	movwf	___awmod@divisor^0,c
  4501   00429C  EC95  F021         	call	___awmod	;wreg free
  4502   0042A0  5009               	movf	?___awmod^0,w,c
  4503   0042A2  0F30               	addlw	48
  4504   0042A4  EC9F  F01C         	call	_serialSend
  4505   0042A8  0012               	return		;funcret
  4506   0042AA                     __end_of_serialInt:
  4507                           	callstack 0
  4508                           
  4509 ;; *************** function _ledOff *****************
  4510 ;; Defined at:
  4511 ;;		line 23 in file "led.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  pos             2    6[COMRAM] int 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4525 ;;      Params:         2       0       0       0       0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4527 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4528 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4529 ;;Total ram usage:        4 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 1
  4532 ;; This function calls:
  4533 ;;		_digitalWrite
  4534 ;; This function is called by:
  4535 ;;		_outputPrint
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           	psect	text10
  4540   003F70                     __ptext10:
  4541                           	callstack 0
  4542   003F70                     _ledOff:
  4543                           	callstack 27
  4544   003F70                     
  4545                           ;led.c: 24:     switch (pos) {
  4546   003F70  EFD2  F01F         	goto	l5106
  4547   003F74                     l5100:
  4548                           
  4549                           ;led.c: 26:             digitalWrite(PIN_C1, 0);
  4550   003F74  0E00               	movlw	0
  4551   003F76  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4552   003F78  0E11               	movlw	17
  4553   003F7A  6E01               	movwf	digitalWrite@pin^0,c
  4554   003F7C  0E00               	movlw	0
  4555   003F7E  6E04               	movwf	(digitalWrite@value+1)^0,c
  4556   003F80  0E00               	movlw	0
  4557   003F82  6E03               	movwf	digitalWrite@value^0,c
  4558   003F84  ECEB  F029         	call	_digitalWrite	;wreg free
  4559                           
  4560                           ;led.c: 27:             break;
  4561   003F88  EFE8  F01F         	goto	l807
  4562   003F8C                     l5102:
  4563                           
  4564                           ;led.c: 29:             digitalWrite(PIN_C2, 0);
  4565   003F8C  0E00               	movlw	0
  4566   003F8E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4567   003F90  0E12               	movlw	18
  4568   003F92  6E01               	movwf	digitalWrite@pin^0,c
  4569   003F94  0E00               	movlw	0
  4570   003F96  6E04               	movwf	(digitalWrite@value+1)^0,c
  4571   003F98  0E00               	movlw	0
  4572   003F9A  6E03               	movwf	digitalWrite@value^0,c
  4573   003F9C  ECEB  F029         	call	_digitalWrite	;wreg free
  4574                           
  4575                           ;led.c: 30:             break;
  4576   003FA0  EFE8  F01F         	goto	l807
  4577   003FA4                     l5106:
  4578   003FA4  C007  F009         	movff	ledOff@pos,??_ledOff
  4579   003FA8  C008  F00A         	movff	ledOff@pos+1,??_ledOff+1
  4580                           
  4581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4582                           ; Switch size 1, requested type "simple"
  4583                           ; Number of cases is 1, Range of values is 0 to 0
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte            4     3 (average)
  4587                           ;	Chosen strategy is simple_byte
  4588   003FAC  500A               	movf	(??_ledOff+1)^0,w,c
  4589   003FAE  0A00               	xorlw	0	; case 0
  4590   003FB0  B4D8               	btfsc	status,2,c
  4591   003FB2  EFDD  F01F         	goto	l5950
  4592   003FB6  EFE8  F01F         	goto	l807
  4593   003FBA                     l5950:
  4594                           
  4595                           ; Switch size 1, requested type "simple"
  4596                           ; Number of cases is 2, Range of values is 1 to 2
  4597                           ; switch strategies available:
  4598                           ; Name         Instructions Cycles
  4599                           ; simple_byte            7     4 (average)
  4600                           ;	Chosen strategy is simple_byte
  4601   003FBA  5009               	movf	??_ledOff^0,w,c
  4602   003FBC  0A01               	xorlw	1	; case 1
  4603   003FBE  B4D8               	btfsc	status,2,c
  4604   003FC0  EFBA  F01F         	goto	l5100
  4605   003FC4  0A03               	xorlw	3	; case 2
  4606   003FC6  B4D8               	btfsc	status,2,c
  4607   003FC8  EFC6  F01F         	goto	l5102
  4608   003FCC  EFE8  F01F         	goto	l807
  4609   003FD0                     l807:
  4610   003FD0  0012               	return		;funcret
  4611   003FD2                     __end_of_ledOff:
  4612                           	callstack 0
  4613                           
  4614 ;; *************** function _ledBlink *****************
  4615 ;; Defined at:
  4616 ;;		line 34 in file "led.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  pos             2    6[COMRAM] int 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;		None
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4630 ;;      Params:         2       0       0       0       0       0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4632 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4633 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4634 ;;Total ram usage:        4 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 1
  4637 ;; This function calls:
  4638 ;;		_digitalRead
  4639 ;;		_digitalWrite
  4640 ;; This function is called by:
  4641 ;;		_outputPrint
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text11
  4646   004636                     __ptext11:
  4647                           	callstack 0
  4648   004636                     _ledBlink:
  4649                           	callstack 27
  4650   004636                     
  4651                           ;led.c: 35:     switch (pos) {
  4652   004636  EF6B  F023         	goto	l5092
  4653   00463A                     l5078:
  4654                           
  4655                           ;led.c: 37:             if (digitalRead(PIN_C1)) {
  4656   00463A  0E00               	movlw	0
  4657   00463C  6E02               	movwf	(digitalRead@pin+1)^0,c
  4658   00463E  0E11               	movlw	17
  4659   004640  6E01               	movwf	digitalRead@pin^0,c
  4660   004642  ECA0  F025         	call	_digitalRead	;wreg free
  4661   004646  5001               	movf	?_digitalRead^0,w,c
  4662   004648  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4663   00464A  B4D8               	btfsc	status,2,c
  4664   00464C  EF2A  F023         	goto	u6301
  4665   004650  EF2C  F023         	goto	u6300
  4666   004654                     u6301:
  4667   004654  EF38  F023         	goto	l5082
  4668   004658                     u6300:
  4669   004658                     
  4670                           ;led.c: 38:                 digitalWrite(PIN_C1, 0);
  4671   004658  0E00               	movlw	0
  4672   00465A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4673   00465C  0E11               	movlw	17
  4674   00465E  6E01               	movwf	digitalWrite@pin^0,c
  4675   004660  0E00               	movlw	0
  4676   004662  6E04               	movwf	(digitalWrite@value+1)^0,c
  4677   004664  0E00               	movlw	0
  4678   004666  6E03               	movwf	digitalWrite@value^0,c
  4679   004668  ECEB  F029         	call	_digitalWrite	;wreg free
  4680                           
  4681                           ;led.c: 39:             } else {
  4682   00466C  EF81  F023         	goto	l818
  4683   004670                     l5082:
  4684                           
  4685                           ;led.c: 40:                 digitalWrite(PIN_C1, 1);
  4686   004670  0E00               	movlw	0
  4687   004672  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4688   004674  0E11               	movlw	17
  4689   004676  6E01               	movwf	digitalWrite@pin^0,c
  4690   004678  0E00               	movlw	0
  4691   00467A  6E04               	movwf	(digitalWrite@value+1)^0,c
  4692   00467C  0E01               	movlw	1
  4693   00467E  6E03               	movwf	digitalWrite@value^0,c
  4694   004680  ECEB  F029         	call	_digitalWrite	;wreg free
  4695   004684  EF81  F023         	goto	l818
  4696   004688                     l5084:
  4697                           
  4698                           ;led.c: 44:             if (digitalRead(PIN_C2)) {
  4699   004688  0E00               	movlw	0
  4700   00468A  6E02               	movwf	(digitalRead@pin+1)^0,c
  4701   00468C  0E12               	movlw	18
  4702   00468E  6E01               	movwf	digitalRead@pin^0,c
  4703   004690  ECA0  F025         	call	_digitalRead	;wreg free
  4704   004694  5001               	movf	?_digitalRead^0,w,c
  4705   004696  1002               	iorwf	(?_digitalRead+1)^0,w,c
  4706   004698  B4D8               	btfsc	status,2,c
  4707   00469A  EF51  F023         	goto	u6311
  4708   00469E  EF53  F023         	goto	u6310
  4709   0046A2                     u6311:
  4710   0046A2  EF5F  F023         	goto	l5088
  4711   0046A6                     u6310:
  4712   0046A6                     
  4713                           ;led.c: 45:                 digitalWrite(PIN_C2, 0);
  4714   0046A6  0E00               	movlw	0
  4715   0046A8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4716   0046AA  0E12               	movlw	18
  4717   0046AC  6E01               	movwf	digitalWrite@pin^0,c
  4718   0046AE  0E00               	movlw	0
  4719   0046B0  6E04               	movwf	(digitalWrite@value+1)^0,c
  4720   0046B2  0E00               	movlw	0
  4721   0046B4  6E03               	movwf	digitalWrite@value^0,c
  4722   0046B6  ECEB  F029         	call	_digitalWrite	;wreg free
  4723                           
  4724                           ;led.c: 46:             } else {
  4725   0046BA  EF81  F023         	goto	l818
  4726   0046BE                     l5088:
  4727                           
  4728                           ;led.c: 47:                 digitalWrite(PIN_C2, 1);
  4729   0046BE  0E00               	movlw	0
  4730   0046C0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4731   0046C2  0E12               	movlw	18
  4732   0046C4  6E01               	movwf	digitalWrite@pin^0,c
  4733   0046C6  0E00               	movlw	0
  4734   0046C8  6E04               	movwf	(digitalWrite@value+1)^0,c
  4735   0046CA  0E01               	movlw	1
  4736   0046CC  6E03               	movwf	digitalWrite@value^0,c
  4737   0046CE  ECEB  F029         	call	_digitalWrite	;wreg free
  4738   0046D2  EF81  F023         	goto	l818
  4739   0046D6                     l5092:
  4740   0046D6  C007  F009         	movff	ledBlink@pos,??_ledBlink
  4741   0046DA  C008  F00A         	movff	ledBlink@pos+1,??_ledBlink+1
  4742                           
  4743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4744                           ; Switch size 1, requested type "simple"
  4745                           ; Number of cases is 1, Range of values is 0 to 0
  4746                           ; switch strategies available:
  4747                           ; Name         Instructions Cycles
  4748                           ; simple_byte            4     3 (average)
  4749                           ;	Chosen strategy is simple_byte
  4750   0046DE  500A               	movf	(??_ledBlink+1)^0,w,c
  4751   0046E0  0A00               	xorlw	0	; case 0
  4752   0046E2  B4D8               	btfsc	status,2,c
  4753   0046E4  EF76  F023         	goto	l5952
  4754   0046E8  EF81  F023         	goto	l818
  4755   0046EC                     l5952:
  4756                           
  4757                           ; Switch size 1, requested type "simple"
  4758                           ; Number of cases is 2, Range of values is 1 to 2
  4759                           ; switch strategies available:
  4760                           ; Name         Instructions Cycles
  4761                           ; simple_byte            7     4 (average)
  4762                           ;	Chosen strategy is simple_byte
  4763   0046EC  5009               	movf	??_ledBlink^0,w,c
  4764   0046EE  0A01               	xorlw	1	; case 1
  4765   0046F0  B4D8               	btfsc	status,2,c
  4766   0046F2  EF1D  F023         	goto	l5078
  4767   0046F6  0A03               	xorlw	3	; case 2
  4768   0046F8  B4D8               	btfsc	status,2,c
  4769   0046FA  EF44  F023         	goto	l5084
  4770   0046FE  EF81  F023         	goto	l818
  4771   004702                     l818:
  4772   004702  0012               	return		;funcret
  4773   004704                     __end_of_ledBlink:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _lcdString *****************
  4777 ;; Defined at:
  4778 ;;		line 116 in file "lcd.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  msg             2    3[COMRAM] PTR unsigned char 
  4781 ;;		 -> STR_51(5), STR_50(5), STR_45(5), STR_44(5), 
  4782 ;;		 -> STR_43(5), STR_42(5), STR_41(9), STR_40(9), 
  4783 ;;		 -> STR_39(9), STR_38(9), STR_37(9), STR_36(9), 
  4784 ;;		 -> STR_35(9), STR_34(9), STR_33(16), STR_32(16), 
  4785 ;;		 -> STR_31(16), STR_30(16), STR_29(16), STR_28(16), 
  4786 ;;		 -> STR_27(10), STR_26(10), STR_25(17), STR_24(16), 
  4787 ;;		 -> STR_23(17), STR_22(16), STR_21(17), STR_20(16), 
  4788 ;;		 -> STR_19(17), STR_18(16), STR_17(17), STR_16(16), 
  4789 ;;		 -> STR_15(17), STR_14(16), STR_13(16), STR_12(16), 
  4790 ;;		 -> STR_11(10), STR_10(10), 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  i               2    7[COMRAM] int 
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4802 ;;      Params:         2       0       0       0       0       0       0       0       0
  4803 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4804 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4805 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4806 ;;Total ram usage:        6 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 3
  4809 ;; This function calls:
  4810 ;;		_lcdData
  4811 ;; This function is called by:
  4812 ;;		_outputPrint
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text12
  4817   003E62                     __ptext12:
  4818                           	callstack 0
  4819   003E62                     _lcdString:
  4820                           	callstack 25
  4821   003E62                     
  4822                           ;lcd.c: 117:     int i = 0;
  4823   003E62  0E00               	movlw	0
  4824   003E64  6E09               	movwf	(lcdString@i+1)^0,c
  4825   003E66  0E00               	movlw	0
  4826   003E68  6E08               	movwf	lcdString@i^0,c
  4827                           
  4828                           ;lcd.c: 118:  while (msg[i] != 0) {
  4829   003E6A  EF47  F01F         	goto	l5044
  4830   003E6E                     l5040:
  4831                           
  4832                           ;lcd.c: 119:   lcdData(msg[i]);
  4833   003E6E  5008               	movf	lcdString@i^0,w,c
  4834   003E70  2404               	addwf	lcdString@msg^0,w,c
  4835   003E72  6E06               	movwf	??_lcdString^0,c
  4836   003E74  5009               	movf	(lcdString@i+1)^0,w,c
  4837   003E76  2005               	addwfc	(lcdString@msg+1)^0,w,c
  4838   003E78  6E07               	movwf	(??_lcdString+1)^0,c
  4839   003E7A  C006  FFF6         	movff	??_lcdString,tblptrl
  4840   003E7E  C007  FFF7         	movff	??_lcdString+1,tblptrh
  4841   003E82                     	if	0	;tblptru may be non-zero
  4842   003E82                     	endif
  4843   003E82                     	if	0	;tblptru may be non-zero
  4844   003E82                     	endif
  4845   003E82  0008               	tblrd		*
  4846   003E84  50F5               	movf	tablat,w,c
  4847   003E86  ECCE  F01C         	call	_lcdData
  4848   003E8A                     
  4849                           ;lcd.c: 120:   i++;
  4850   003E8A  4A08               	infsnz	lcdString@i^0,f,c
  4851   003E8C  2A09               	incf	(lcdString@i+1)^0,f,c
  4852   003E8E                     l5044:
  4853                           
  4854                           ;lcd.c: 118:  while (msg[i] != 0) {
  4855   003E8E  5008               	movf	lcdString@i^0,w,c
  4856   003E90  2404               	addwf	lcdString@msg^0,w,c
  4857   003E92  6E06               	movwf	??_lcdString^0,c
  4858   003E94  5009               	movf	(lcdString@i+1)^0,w,c
  4859   003E96  2005               	addwfc	(lcdString@msg+1)^0,w,c
  4860   003E98  6E07               	movwf	(??_lcdString+1)^0,c
  4861   003E9A  C006  FFF6         	movff	??_lcdString,tblptrl
  4862   003E9E  C007  FFF7         	movff	??_lcdString+1,tblptrh
  4863   003EA2                     	if	0	;tblptru may be non-zero
  4864   003EA2                     	endif
  4865   003EA2                     	if	0	;tblptru may be non-zero
  4866   003EA2                     	endif
  4867   003EA2  0008               	tblrd		*
  4868   003EA4  50F5               	movf	tablat,w,c
  4869   003EA6  0900               	iorlw	0
  4870   003EA8  A4D8               	btfss	status,2,c
  4871   003EAA  EF59  F01F         	goto	u6251
  4872   003EAE  EF5B  F01F         	goto	u6250
  4873   003EB2                     u6251:
  4874   003EB2  EF37  F01F         	goto	l5040
  4875   003EB6                     u6250:
  4876   003EB6  0012               	return		;funcret
  4877   003EB8                     __end_of_lcdString:
  4878                           	callstack 0
  4879                           
  4880 ;; *************** function _lcdInt *****************
  4881 ;; Defined at:
  4882 ;;		line 108 in file "lcd.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  val             2   73[COMRAM] int 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4896 ;;      Params:         2       0       0       0       0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4899 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4900 ;;Total ram usage:        2 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; Hardware stack levels required when called: 3
  4903 ;; This function calls:
  4904 ;;		___awdiv
  4905 ;;		___awmod
  4906 ;;		_lcdData
  4907 ;; This function is called by:
  4908 ;;		_outputPrint
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text13
  4913   0041AE                     __ptext13:
  4914                           	callstack 0
  4915   0041AE                     _lcdInt:
  4916                           	callstack 25
  4917   0041AE                     
  4918                           ;lcd.c: 111:     lcdData((val / 100) % 10 + 48);
  4919   0041AE  0E00               	movlw	0
  4920   0041B0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4921   0041B2  0E64               	movlw	100
  4922   0041B4  6E03               	movwf	___awdiv@divisor^0,c
  4923   0041B6  C04A  F001         	movff	lcdInt@val,___awdiv@dividend
  4924   0041BA  C04B  F002         	movff	lcdInt@val+1,___awdiv@dividend+1
  4925   0041BE  ECED  F021         	call	___awdiv	;wreg free
  4926   0041C2  C001  F009         	movff	?___awdiv,___awmod@dividend
  4927   0041C6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4928   0041CA  0E00               	movlw	0
  4929   0041CC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4930   0041CE  0E0A               	movlw	10
  4931   0041D0  6E0B               	movwf	___awmod@divisor^0,c
  4932   0041D2  EC95  F021         	call	___awmod	;wreg free
  4933   0041D6  5009               	movf	?___awmod^0,w,c
  4934   0041D8  0F30               	addlw	48
  4935   0041DA  ECCE  F01C         	call	_lcdData
  4936                           
  4937                           ;lcd.c: 112:     lcdData((val / 10) % 10 + 48);
  4938   0041DE  0E00               	movlw	0
  4939   0041E0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4940   0041E2  0E0A               	movlw	10
  4941   0041E4  6E03               	movwf	___awdiv@divisor^0,c
  4942   0041E6  C04A  F001         	movff	lcdInt@val,___awdiv@dividend
  4943   0041EA  C04B  F002         	movff	lcdInt@val+1,___awdiv@dividend+1
  4944   0041EE  ECED  F021         	call	___awdiv	;wreg free
  4945   0041F2  C001  F009         	movff	?___awdiv,___awmod@dividend
  4946   0041F6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4947   0041FA  0E00               	movlw	0
  4948   0041FC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4949   0041FE  0E0A               	movlw	10
  4950   004200  6E0B               	movwf	___awmod@divisor^0,c
  4951   004202  EC95  F021         	call	___awmod	;wreg free
  4952   004206  5009               	movf	?___awmod^0,w,c
  4953   004208  0F30               	addlw	48
  4954   00420A  ECCE  F01C         	call	_lcdData
  4955                           
  4956                           ;lcd.c: 113:     lcdData((val / 1) % 10 + 48);
  4957   00420E  C04A  F009         	movff	lcdInt@val,___awmod@dividend
  4958   004212  C04B  F00A         	movff	lcdInt@val+1,___awmod@dividend+1
  4959   004216  0E00               	movlw	0
  4960   004218  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4961   00421A  0E0A               	movlw	10
  4962   00421C  6E0B               	movwf	___awmod@divisor^0,c
  4963   00421E  EC95  F021         	call	___awmod	;wreg free
  4964   004222  5009               	movf	?___awmod^0,w,c
  4965   004224  0F30               	addlw	48
  4966   004226  ECCE  F01C         	call	_lcdData
  4967   00422A  0012               	return		;funcret
  4968   00422C                     __end_of_lcdInt:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _lcdData *****************
  4972 ;; Defined at:
  4973 ;;		line 101 in file "lcd.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  valor           1    wreg     unsigned char 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  valor           1    2[COMRAM] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0
  4988 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4990 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4991 ;;Total ram usage:        1 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; Hardware stack levels required when called: 2
  4994 ;; This function calls:
  4995 ;;		_Delay40us
  4996 ;;		_lcdCommand4bits
  4997 ;; This function is called by:
  4998 ;;		_lcdInt
  4999 ;;		_lcdString
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text14
  5004   00399C                     __ptext14:
  5005                           	callstack 0
  5006   00399C                     _lcdData:
  5007                           	callstack 25
  5008                           
  5009                           ;incstack = 0
  5010                           ;lcdData@valor stored from wreg
  5011   00399C  6E03               	movwf	lcdData@valor^0,c
  5012   00399E                     
  5013                           ;lcd.c: 102:     lcdCommand4bits(valor, 1);
  5014   00399E  0E01               	movlw	1
  5015   0039A0  6E01               	movwf	lcdCommand4bits@data^0,c
  5016   0039A2  5003               	movf	lcdData@valor^0,w,c
  5017   0039A4  EC20  F020         	call	_lcdCommand4bits
  5018   0039A8                     
  5019                           ;lcd.c: 103:     lcdCommand4bits(valor << 4, 1);
  5020   0039A8  0E01               	movlw	1
  5021   0039AA  6E01               	movwf	lcdCommand4bits@data^0,c
  5022   0039AC  3803               	swapf	lcdData@valor^0,w,c
  5023   0039AE  0BF0               	andlw	240
  5024   0039B0  EC20  F020         	call	_lcdCommand4bits
  5025   0039B4                     
  5026                           ;lcd.c: 104:     Delay40us();
  5027   0039B4  ECB5  F01C         	call	_Delay40us	;wreg free
  5028   0039B8  0012               	return		;funcret
  5029   0039BA                     __end_of_lcdData:
  5030                           	callstack 0
  5031                           
  5032 ;; *************** function ___awmod *****************
  5033 ;; Defined at:
  5034 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  dividend        2    8[COMRAM] int 
  5037 ;;  divisor         2   10[COMRAM] int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  sign            1   13[COMRAM] unsigned char 
  5040 ;;  counter         1   12[COMRAM] unsigned char 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  2    8[COMRAM] int 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5050 ;;      Params:         4       0       0       0       0       0       0       0       0
  5051 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5053 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5054 ;;Total ram usage:        6 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_lcdInt
  5060 ;;		_serialInt
  5061 ;;		_dec2bcd
  5062 ;;		_setHours
  5063 ;;		_setMinutes
  5064 ;;		_setSeconds
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text15
  5069   00432A                     __ptext15:
  5070                           	callstack 0
  5071   00432A                     ___awmod:
  5072                           	callstack 27
  5073   00432A  0E00               	movlw	0
  5074   00432C  6E0E               	movwf	___awmod@sign^0,c
  5075   00432E  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  5076   004330  EF9E  F021         	goto	u5430
  5077   004334  EF9C  F021         	goto	u5431
  5078   004338                     u5431:
  5079   004338  EFA4  F021         	goto	l4710
  5080   00433C                     u5430:
  5081   00433C  6C09               	negf	___awmod@dividend^0,c
  5082   00433E  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5083   004340  B0D8               	btfsc	status,0,c
  5084   004342  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5085   004344  0E01               	movlw	1
  5086   004346  6E0E               	movwf	___awmod@sign^0,c
  5087   004348                     l4710:
  5088   004348  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  5089   00434A  EFAB  F021         	goto	u5440
  5090   00434E  EFA9  F021         	goto	u5441
  5091   004352                     u5441:
  5092   004352  EFAF  F021         	goto	l4714
  5093   004356                     u5440:
  5094   004356  6C0B               	negf	___awmod@divisor^0,c
  5095   004358  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  5096   00435A  B0D8               	btfsc	status,0,c
  5097   00435C  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  5098   00435E                     l4714:
  5099   00435E  500B               	movf	___awmod@divisor^0,w,c
  5100   004360  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  5101   004362  B4D8               	btfsc	status,2,c
  5102   004364  EFB6  F021         	goto	u5451
  5103   004368  EFB8  F021         	goto	u5450
  5104   00436C                     u5451:
  5105   00436C  EFDC  F021         	goto	l4730
  5106   004370                     u5450:
  5107   004370  0E01               	movlw	1
  5108   004372  6E0D               	movwf	___awmod@counter^0,c
  5109   004374  EFC0  F021         	goto	l4720
  5110   004378                     l4718:
  5111   004378  90D8               	bcf	status,0,c
  5112   00437A  360B               	rlcf	___awmod@divisor^0,f,c
  5113   00437C  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  5114   00437E  2A0D               	incf	___awmod@counter^0,f,c
  5115   004380                     l4720:
  5116   004380  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  5117   004382  EFC5  F021         	goto	u5461
  5118   004386  EFC7  F021         	goto	u5460
  5119   00438A                     u5461:
  5120   00438A  EFBC  F021         	goto	l4718
  5121   00438E                     u5460:
  5122   00438E                     l4722:
  5123   00438E  500B               	movf	___awmod@divisor^0,w,c
  5124   004390  5C09               	subwf	___awmod@dividend^0,w,c
  5125   004392  500C               	movf	(___awmod@divisor+1)^0,w,c
  5126   004394  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  5127   004396  A0D8               	btfss	status,0,c
  5128   004398  EFD0  F021         	goto	u5471
  5129   00439C  EFD2  F021         	goto	u5470
  5130   0043A0                     u5471:
  5131   0043A0  EFD6  F021         	goto	l4726
  5132   0043A4                     u5470:
  5133   0043A4  500B               	movf	___awmod@divisor^0,w,c
  5134   0043A6  5E09               	subwf	___awmod@dividend^0,f,c
  5135   0043A8  500C               	movf	(___awmod@divisor+1)^0,w,c
  5136   0043AA  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  5137   0043AC                     l4726:
  5138   0043AC  90D8               	bcf	status,0,c
  5139   0043AE  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  5140   0043B0  320B               	rrcf	___awmod@divisor^0,f,c
  5141   0043B2  2E0D               	decfsz	___awmod@counter^0,f,c
  5142   0043B4  EFC7  F021         	goto	l4722
  5143   0043B8                     l4730:
  5144   0043B8  500E               	movf	___awmod@sign^0,w,c
  5145   0043BA  B4D8               	btfsc	status,2,c
  5146   0043BC  EFE2  F021         	goto	u5481
  5147   0043C0  EFE4  F021         	goto	u5480
  5148   0043C4                     u5481:
  5149   0043C4  EFE8  F021         	goto	l4734
  5150   0043C8                     u5480:
  5151   0043C8  6C09               	negf	___awmod@dividend^0,c
  5152   0043CA  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  5153   0043CC  B0D8               	btfsc	status,0,c
  5154   0043CE  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  5155   0043D0                     l4734:
  5156   0043D0  C009  F009         	movff	___awmod@dividend,?___awmod
  5157   0043D4  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  5158   0043D8  0012               	return		;funcret
  5159   0043DA                     __end_of___awmod:
  5160                           	callstack 0
  5161                           
  5162 ;; *************** function ___awdiv *****************
  5163 ;; Defined at:
  5164 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  dividend        2    0[COMRAM] int 
  5167 ;;  divisor         2    2[COMRAM] int 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  quotient        2    6[COMRAM] int 
  5170 ;;  sign            1    5[COMRAM] unsigned char 
  5171 ;;  counter         1    4[COMRAM] unsigned char 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  2    0[COMRAM] int 
  5174 ;; Registers used:
  5175 ;;		wreg, status,2, status,0
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5181 ;;      Params:         4       0       0       0       0       0       0       0       0
  5182 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5184 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5185 ;;Total ram usage:        8 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_lcdInt
  5191 ;;		_serialInt
  5192 ;;		_dec2bcd
  5193 ;;		_bcd2dec
  5194 ;;		_setHours
  5195 ;;		_setMinutes
  5196 ;;		_setSeconds
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text16
  5201   0043DA                     __ptext16:
  5202                           	callstack 0
  5203   0043DA                     ___awdiv:
  5204                           	callstack 27
  5205   0043DA  0E00               	movlw	0
  5206   0043DC  6E06               	movwf	___awdiv@sign^0,c
  5207   0043DE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5208   0043E0  EFF6  F021         	goto	u5370
  5209   0043E4  EFF4  F021         	goto	u5371
  5210   0043E8                     u5371:
  5211   0043E8  EFFC  F021         	goto	l4666
  5212   0043EC                     u5370:
  5213   0043EC  6C03               	negf	___awdiv@divisor^0,c
  5214   0043EE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5215   0043F0  B0D8               	btfsc	status,0,c
  5216   0043F2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5217   0043F4  0E01               	movlw	1
  5218   0043F6  6E06               	movwf	___awdiv@sign^0,c
  5219   0043F8                     l4666:
  5220   0043F8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5221   0043FA  EF03  F022         	goto	u5380
  5222   0043FE  EF01  F022         	goto	u5381
  5223   004402                     u5381:
  5224   004402  EF09  F022         	goto	l4672
  5225   004406                     u5380:
  5226   004406  6C01               	negf	___awdiv@dividend^0,c
  5227   004408  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5228   00440A  B0D8               	btfsc	status,0,c
  5229   00440C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5230   00440E  0E01               	movlw	1
  5231   004410  1A06               	xorwf	___awdiv@sign^0,f,c
  5232   004412                     l4672:
  5233   004412  0E00               	movlw	0
  5234   004414  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5235   004416  0E00               	movlw	0
  5236   004418  6E07               	movwf	___awdiv@quotient^0,c
  5237   00441A  5003               	movf	___awdiv@divisor^0,w,c
  5238   00441C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5239   00441E  B4D8               	btfsc	status,2,c
  5240   004420  EF14  F022         	goto	u5391
  5241   004424  EF16  F022         	goto	u5390
  5242   004428                     u5391:
  5243   004428  EF3E  F022         	goto	l4694
  5244   00442C                     u5390:
  5245   00442C  0E01               	movlw	1
  5246   00442E  6E05               	movwf	___awdiv@counter^0,c
  5247   004430  EF1E  F022         	goto	l4680
  5248   004434                     l4678:
  5249   004434  90D8               	bcf	status,0,c
  5250   004436  3603               	rlcf	___awdiv@divisor^0,f,c
  5251   004438  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5252   00443A  2A05               	incf	___awdiv@counter^0,f,c
  5253   00443C                     l4680:
  5254   00443C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5255   00443E  EF23  F022         	goto	u5401
  5256   004442  EF25  F022         	goto	u5400
  5257   004446                     u5401:
  5258   004446  EF1A  F022         	goto	l4678
  5259   00444A                     u5400:
  5260   00444A                     l4682:
  5261   00444A  90D8               	bcf	status,0,c
  5262   00444C  3607               	rlcf	___awdiv@quotient^0,f,c
  5263   00444E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5264   004450  5003               	movf	___awdiv@divisor^0,w,c
  5265   004452  5C01               	subwf	___awdiv@dividend^0,w,c
  5266   004454  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5267   004456  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5268   004458  A0D8               	btfss	status,0,c
  5269   00445A  EF31  F022         	goto	u5411
  5270   00445E  EF33  F022         	goto	u5410
  5271   004462                     u5411:
  5272   004462  EF38  F022         	goto	l4690
  5273   004466                     u5410:
  5274   004466  5003               	movf	___awdiv@divisor^0,w,c
  5275   004468  5E01               	subwf	___awdiv@dividend^0,f,c
  5276   00446A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5277   00446C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5278   00446E  8007               	bsf	___awdiv@quotient^0,0,c
  5279   004470                     l4690:
  5280   004470  90D8               	bcf	status,0,c
  5281   004472  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5282   004474  3203               	rrcf	___awdiv@divisor^0,f,c
  5283   004476  2E05               	decfsz	___awdiv@counter^0,f,c
  5284   004478  EF25  F022         	goto	l4682
  5285   00447C                     l4694:
  5286   00447C  5006               	movf	___awdiv@sign^0,w,c
  5287   00447E  B4D8               	btfsc	status,2,c
  5288   004480  EF44  F022         	goto	u5421
  5289   004484  EF46  F022         	goto	u5420
  5290   004488                     u5421:
  5291   004488  EF4A  F022         	goto	l4698
  5292   00448C                     u5420:
  5293   00448C  6C07               	negf	___awdiv@quotient^0,c
  5294   00448E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5295   004490  B0D8               	btfsc	status,0,c
  5296   004492  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5297   004494                     l4698:
  5298   004494  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5299   004498  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5300   00449C  0012               	return		;funcret
  5301   00449E                     __end_of___awdiv:
  5302                           	callstack 0
  5303                           
  5304 ;; *************** function _checkAlarm *****************
  5305 ;; Defined at:
  5306 ;;		line 116 in file "var.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  alarm           2   73[COMRAM] int 
  5309 ;;  level           2   75[COMRAM] int 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;		None
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  2   73[COMRAM] int 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5321 ;;      Params:         4       0       0       0       0       0       0       0       0
  5322 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5323 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5324 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5325 ;;Total ram usage:        7 bytes
  5326 ;; Hardware stack levels used: 1
  5327 ;; Hardware stack levels required when called: 6
  5328 ;; This function calls:
  5329 ;;		_getAlarmLevel
  5330 ;;		_getSensorValue
  5331 ;; This function is called by:
  5332 ;;		_outputPrint
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text17
  5337   004568                     __ptext17:
  5338                           	callstack 0
  5339   004568                     _checkAlarm:
  5340                           	callstack 22
  5341   004568                     
  5342                           ;var.c: 117:     if (level == 0) {
  5343   004568  504C               	movf	checkAlarm@level^0,w,c
  5344   00456A  104D               	iorwf	(checkAlarm@level+1)^0,w,c
  5345   00456C  A4D8               	btfss	status,2,c
  5346   00456E  EFBB  F022         	goto	u6261
  5347   004572  EFBD  F022         	goto	u6260
  5348   004576                     u6261:
  5349   004576  EFEC  F022         	goto	l5062
  5350   00457A                     u6260:
  5351   00457A                     
  5352                           ;var.c: 118:         if (getAlarmLevel(alarm, level) <= getSensorValue(alarm)) {
  5353   00457A  C04A  F046         	movff	checkAlarm@alarm,getSensorValue@sensor
  5354   00457E  C04B  F047         	movff	checkAlarm@alarm+1,getSensorValue@sensor+1
  5355   004582  EC06  F01F         	call	_getSensorValue	;wreg free
  5356   004586  C046  F04E         	movff	?_getSensorValue,??_checkAlarm
  5357   00458A  C047  F04F         	movff	?_getSensorValue+1,??_checkAlarm+1
  5358   00458E  C04A  F013         	movff	checkAlarm@alarm,getAlarmLevel@alarm
  5359   004592  C04B  F014         	movff	checkAlarm@alarm+1,getAlarmLevel@alarm+1
  5360   004596  C04C  F015         	movff	checkAlarm@level,getAlarmLevel@level
  5361   00459A  C04D  F016         	movff	checkAlarm@level+1,getAlarmLevel@level+1
  5362   00459E  EC82  F023         	call	_getAlarmLevel	;wreg free
  5363   0045A2  5013               	movf	?_getAlarmLevel^0,w,c
  5364   0045A4  5C4E               	subwf	??_checkAlarm^0,w,c
  5365   0045A6  504F               	movf	(??_checkAlarm+1)^0,w,c
  5366   0045A8  0A80               	xorlw	128
  5367   0045AA  6E50               	movwf	(??_checkAlarm+2)^0,c
  5368   0045AC  5014               	movf	(?_getAlarmLevel+1)^0,w,c
  5369   0045AE  0A80               	xorlw	128
  5370   0045B0  5850               	subwfb	(??_checkAlarm+2)^0,w,c
  5371   0045B2  A0D8               	btfss	status,0,c
  5372   0045B4  EFDE  F022         	goto	u6271
  5373   0045B8  EFE0  F022         	goto	u6270
  5374   0045BC                     u6271:
  5375   0045BC  EFE6  F022         	goto	l5058
  5376   0045C0                     u6270:
  5377   0045C0                     l5052:
  5378                           
  5379                           ;var.c: 119:             return 1;
  5380   0045C0  0E00               	movlw	0
  5381   0045C2  6E4B               	movwf	(?_checkAlarm+1)^0,c
  5382   0045C4  0E01               	movlw	1
  5383   0045C6  6E4A               	movwf	?_checkAlarm^0,c
  5384   0045C8  EF1A  F023         	goto	l639
  5385   0045CC                     l5058:
  5386                           
  5387                           ;var.c: 121:             return 0;
  5388   0045CC  0E00               	movlw	0
  5389   0045CE  6E4B               	movwf	(?_checkAlarm+1)^0,c
  5390   0045D0  0E00               	movlw	0
  5391   0045D2  6E4A               	movwf	?_checkAlarm^0,c
  5392   0045D4  EF1A  F023         	goto	l639
  5393   0045D8                     l5062:
  5394   0045D8  044C               	decf	checkAlarm@level^0,w,c
  5395   0045DA  104D               	iorwf	(checkAlarm@level+1)^0,w,c
  5396   0045DC  A4D8               	btfss	status,2,c
  5397   0045DE  EFF3  F022         	goto	u6281
  5398   0045E2  EFF5  F022         	goto	u6280
  5399   0045E6                     u6281:
  5400   0045E6  EF1A  F023         	goto	l639
  5401   0045EA                     u6280:
  5402   0045EA                     
  5403                           ;var.c: 124:         if (getAlarmLevel(alarm, level) >= getSensorValue(alarm)) {
  5404   0045EA  C04A  F013         	movff	checkAlarm@alarm,getAlarmLevel@alarm
  5405   0045EE  C04B  F014         	movff	checkAlarm@alarm+1,getAlarmLevel@alarm+1
  5406   0045F2  C04C  F015         	movff	checkAlarm@level,getAlarmLevel@level
  5407   0045F6  C04D  F016         	movff	checkAlarm@level+1,getAlarmLevel@level+1
  5408   0045FA  EC82  F023         	call	_getAlarmLevel	;wreg free
  5409   0045FE  C013  F04E         	movff	?_getAlarmLevel,??_checkAlarm
  5410   004602  C014  F04F         	movff	?_getAlarmLevel+1,??_checkAlarm+1
  5411   004606  C04A  F046         	movff	checkAlarm@alarm,getSensorValue@sensor
  5412   00460A  C04B  F047         	movff	checkAlarm@alarm+1,getSensorValue@sensor+1
  5413   00460E  EC06  F01F         	call	_getSensorValue	;wreg free
  5414   004612  5046               	movf	?_getSensorValue^0,w,c
  5415   004614  5C4E               	subwf	??_checkAlarm^0,w,c
  5416   004616  504F               	movf	(??_checkAlarm+1)^0,w,c
  5417   004618  0A80               	xorlw	128
  5418   00461A  6E50               	movwf	(??_checkAlarm+2)^0,c
  5419   00461C  5047               	movf	(?_getSensorValue+1)^0,w,c
  5420   00461E  0A80               	xorlw	128
  5421   004620  5850               	subwfb	(??_checkAlarm+2)^0,w,c
  5422   004622  A0D8               	btfss	status,0,c
  5423   004624  EF16  F023         	goto	u6291
  5424   004628  EF18  F023         	goto	u6290
  5425   00462C                     u6291:
  5426   00462C  EFE6  F022         	goto	l5058
  5427   004630                     u6290:
  5428   004630  EFE0  F022         	goto	l5052
  5429   004634                     l639:
  5430   004634  0012               	return		;funcret
  5431   004636                     __end_of_checkAlarm:
  5432                           	callstack 0
  5433                           
  5434 ;; *************** function _getSensorValue *****************
  5435 ;; Defined at:
  5436 ;;		line 140 in file "var.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  sensor          2   69[COMRAM] int 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  value           2   71[COMRAM] int 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  2   69[COMRAM] int 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5450 ;;      Params:         2       0       0       0       0       0       0       0       0
  5451 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5453 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5454 ;;Total ram usage:        4 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 2
  5457 ;; This function calls:
  5458 ;;		_adcRead
  5459 ;; This function is called by:
  5460 ;;		_checkAlarm
  5461 ;;		_outputPrint
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text18
  5466   003E0C                     __ptext18:
  5467                           	callstack 0
  5468   003E0C                     _getSensorValue:
  5469                           	callstack 26
  5470   003E0C                     
  5471                           ;var.c: 141:     int value;;var.c: 143:     if (sensor == 0) {
  5472   003E0C  5046               	movf	getSensorValue@sensor^0,w,c
  5473   003E0E  1047               	iorwf	(getSensorValue@sensor+1)^0,w,c
  5474   003E10  A4D8               	btfss	status,2,c
  5475   003E12  EF0D  F01F         	goto	u5351
  5476   003E16  EF0F  F01F         	goto	u5350
  5477   003E1A                     u5351:
  5478   003E1A  EF19  F01F         	goto	l4644
  5479   003E1E                     u5350:
  5480   003E1E                     
  5481                           ;var.c: 144:         value = adcRead(7);
  5482   003E1E  0E00               	movlw	0
  5483   003E20  6E43               	movwf	(adcRead@channel+1)^0,c
  5484   003E22  0E07               	movlw	7
  5485   003E24  6E42               	movwf	adcRead@channel^0,c
  5486   003E26  ECEA  F027         	call	_adcRead	;wreg free
  5487   003E2A  C042  F048         	movff	?_adcRead,getSensorValue@value
  5488   003E2E  C043  F049         	movff	?_adcRead+1,getSensorValue@value+1
  5489   003E32                     l4644:
  5490                           
  5491                           ;var.c: 146:     if (sensor == 1) {
  5492   003E32  0446               	decf	getSensorValue@sensor^0,w,c
  5493   003E34  1047               	iorwf	(getSensorValue@sensor+1)^0,w,c
  5494   003E36  A4D8               	btfss	status,2,c
  5495   003E38  EF20  F01F         	goto	u5361
  5496   003E3C  EF22  F01F         	goto	u5360
  5497   003E40                     u5361:
  5498   003E40  EF2C  F01F         	goto	l4648
  5499   003E44                     u5360:
  5500   003E44                     
  5501                           ;var.c: 147:         value = adcRead(11);
  5502   003E44  0E00               	movlw	0
  5503   003E46  6E43               	movwf	(adcRead@channel+1)^0,c
  5504   003E48  0E0B               	movlw	11
  5505   003E4A  6E42               	movwf	adcRead@channel^0,c
  5506   003E4C  ECEA  F027         	call	_adcRead	;wreg free
  5507   003E50  C042  F048         	movff	?_adcRead,getSensorValue@value
  5508   003E54  C043  F049         	movff	?_adcRead+1,getSensorValue@value+1
  5509   003E58                     l4648:
  5510                           
  5511                           ;var.c: 150:     return value;
  5512   003E58  C048  F046         	movff	getSensorValue@value,?_getSensorValue
  5513   003E5C  C049  F047         	movff	getSensorValue@value+1,?_getSensorValue+1
  5514   003E60  0012               	return		;funcret
  5515   003E62                     __end_of_getSensorValue:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function _adcRead *****************
  5519 ;; Defined at:
  5520 ;;		line 39 in file "adc.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  channel         2   65[COMRAM] unsigned int 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  ADvalor         2   67[COMRAM] unsigned int 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  2   65[COMRAM] int 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5534 ;;      Params:         2       0       0       0       0       0       0       0       0
  5535 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5537 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5538 ;;Total ram usage:        4 bytes
  5539 ;; Hardware stack levels used: 1
  5540 ;; Hardware stack levels required when called: 1
  5541 ;; This function calls:
  5542 ;;		___fladd
  5543 ;;		___fldiv
  5544 ;;		___fltol
  5545 ;;		___xxtofl
  5546 ;; This function is called by:
  5547 ;;		_getSensorValue
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text19
  5552   004FD4                     __ptext19:
  5553                           	callstack 0
  5554   004FD4                     _adcRead:
  5555                           	callstack 26
  5556   004FD4                     
  5557                           ;adc.c: 40:     unsigned int ADvalor;;adc.c: 41:     ADCON1 = 0b00000011;
  5558   004FD4  0E03               	movlw	3
  5559   004FD6  6EC1               	movwf	193,c	;volatile
  5560   004FD8                     
  5561                           ;adc.c: 43:     ADCON0 &= 0b11000011;
  5562   004FD8  0EC3               	movlw	195
  5563   004FDA  16C2               	andwf	194,f,c	;volatile
  5564   004FDC                     
  5565                           ;adc.c: 44:     if(channel == 7){
  5566   004FDC  0E07               	movlw	7
  5567   004FDE  1842               	xorwf	adcRead@channel^0,w,c
  5568   004FE0  1043               	iorwf	(adcRead@channel+1)^0,w,c
  5569   004FE2  A4D8               	btfss	status,2,c
  5570   004FE4  EFF6  F027         	goto	u5061
  5571   004FE8  EFF8  F027         	goto	u5060
  5572   004FEC                     u5061:
  5573   004FEC  EFFC  F027         	goto	l4406
  5574   004FF0                     u5060:
  5575   004FF0                     
  5576                           ;adc.c: 45:         ADCON0 |= 0b00011100;
  5577   004FF0  0E1C               	movlw	28
  5578   004FF2  12C2               	iorwf	194,f,c	;volatile
  5579                           
  5580                           ;adc.c: 46:     }else if (channel == 8) {
  5581   004FF4  EF15  F028         	goto	l4414
  5582   004FF8                     l4406:
  5583   004FF8  0E08               	movlw	8
  5584   004FFA  1842               	xorwf	adcRead@channel^0,w,c
  5585   004FFC  1043               	iorwf	(adcRead@channel+1)^0,w,c
  5586   004FFE  A4D8               	btfss	status,2,c
  5587   005000  EF04  F028         	goto	u5071
  5588   005004  EF06  F028         	goto	u5070
  5589   005008                     u5071:
  5590   005008  EF09  F028         	goto	l4410
  5591   00500C                     u5070:
  5592   00500C                     
  5593                           ;adc.c: 47:         ADCON0 |= 0b00100000;
  5594   00500C  8AC2               	bsf	194,5,c	;volatile
  5595                           
  5596                           ;adc.c: 49:     }else if( channel == 11){
  5597   00500E  EF15  F028         	goto	l4414
  5598   005012                     l4410:
  5599   005012  0E0B               	movlw	11
  5600   005014  1842               	xorwf	adcRead@channel^0,w,c
  5601   005016  1043               	iorwf	(adcRead@channel+1)^0,w,c
  5602   005018  A4D8               	btfss	status,2,c
  5603   00501A  EF11  F028         	goto	u5081
  5604   00501E  EF13  F028         	goto	u5080
  5605   005022                     u5081:
  5606   005022  EF15  F028         	goto	l4414
  5607   005026                     u5080:
  5608   005026                     
  5609                           ;adc.c: 50:         ADCON0 |= 0b00101100;
  5610   005026  0E2C               	movlw	44
  5611   005028  12C2               	iorwf	194,f,c	;volatile
  5612   00502A                     l4414:
  5613                           
  5614                           ;adc.c: 53:     ADCON0 |= 0b00000010;
  5615   00502A  82C2               	bsf	194,1,c	;volatile
  5616   00502C                     l185:
  5617   00502C  B2C2               	btfsc	194,1,c	;volatile
  5618   00502E  EF1B  F028         	goto	u5091
  5619   005032  EF1D  F028         	goto	u5090
  5620   005036                     u5091:
  5621   005036  EF16  F028         	goto	l185
  5622   00503A                     u5090:
  5623   00503A                     
  5624                           ;adc.c: 57:     ADvalor = ADRESH;
  5625   00503A  CFC4 F044          	movff	4036,adcRead@ADvalor	;volatile
  5626   00503E  6A45               	clrf	(adcRead@ADvalor+1)^0,c
  5627   005040                     
  5628                           ;adc.c: 58:     ADvalor <<= 8;
  5629   005040  5044               	movf	adcRead@ADvalor^0,w,c
  5630   005042  6E45               	movwf	(adcRead@ADvalor+1)^0,c
  5631   005044  6A44               	clrf	adcRead@ADvalor^0,c
  5632   005046                     
  5633                           ;adc.c: 59:     ADvalor += ADRESL;
  5634   005046  50C3               	movf	195,w,c	;volatile
  5635   005048  2644               	addwf	adcRead@ADvalor^0,f,c
  5636   00504A  0E00               	movlw	0
  5637   00504C  2245               	addwfc	(adcRead@ADvalor+1)^0,f,c
  5638   00504E                     
  5639                           ;adc.c: 61:     ADCON1 = 0b00001111;
  5640   00504E  0E0F               	movlw	15
  5641   005050  6EC1               	movwf	193,c	;volatile
  5642   005052                     
  5643                           ;adc.c: 63:     return ((ADvalor/10.24)>=0?(int)((ADvalor/10.24)+0.5):(int)((ADvalor/10.
      +                          24)-0.5));
  5644   005052  C044  F001         	movff	adcRead@ADvalor,___xxtofl@val
  5645   005056  C045  F002         	movff	adcRead@ADvalor+1,___xxtofl@val+1
  5646   00505A  6A03               	clrf	(___xxtofl@val+2)^0,c
  5647   00505C  6A04               	clrf	(___xxtofl@val+3)^0,c
  5648   00505E  0E00               	movlw	0
  5649   005060  EC10  F027         	call	___xxtofl
  5650   005064  C001  F00F         	movff	?___xxtofl,___fldiv@b
  5651   005068  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  5652   00506C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  5653   005070  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  5654   005074  0E0A               	movlw	10
  5655   005076  6E13               	movwf	___fldiv@a^0,c
  5656   005078  0ED7               	movlw	215
  5657   00507A  6E14               	movwf	(___fldiv@a+1)^0,c
  5658   00507C  0E23               	movlw	35
  5659   00507E  6E15               	movwf	(___fldiv@a+2)^0,c
  5660   005080  0E41               	movlw	65
  5661   005082  6E16               	movwf	(___fldiv@a+3)^0,c
  5662   005084  ECC9  F02D         	call	___fldiv	;wreg free
  5663   005088  BE12               	btfsc	(?___fldiv+3)^0,7,c
  5664   00508A  EF4B  F028         	goto	u5100
  5665   00508E  EF49  F028         	goto	u5101
  5666   005092                     u5101:
  5667   005092  EF88  F028         	goto	l4426
  5668   005096                     u5100:
  5669   005096  0E00               	movlw	0
  5670   005098  6E2C               	movwf	___fladd@a^0,c
  5671   00509A  0E00               	movlw	0
  5672   00509C  6E2D               	movwf	(___fladd@a+1)^0,c
  5673   00509E  0E00               	movlw	0
  5674   0050A0  6E2E               	movwf	(___fladd@a+2)^0,c
  5675   0050A2  0EBF               	movlw	191
  5676   0050A4  6E2F               	movwf	(___fladd@a+3)^0,c
  5677   0050A6  0E0A               	movlw	10
  5678   0050A8  6E13               	movwf	___fldiv@a^0,c
  5679   0050AA  0ED7               	movlw	215
  5680   0050AC  6E14               	movwf	(___fldiv@a+1)^0,c
  5681   0050AE  0E23               	movlw	35
  5682   0050B0  6E15               	movwf	(___fldiv@a+2)^0,c
  5683   0050B2  0E41               	movlw	65
  5684   0050B4  6E16               	movwf	(___fldiv@a+3)^0,c
  5685   0050B6  C044  F001         	movff	adcRead@ADvalor,___xxtofl@val
  5686   0050BA  C045  F002         	movff	adcRead@ADvalor+1,___xxtofl@val+1
  5687   0050BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  5688   0050C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  5689   0050C2  0E00               	movlw	0
  5690   0050C4  EC10  F027         	call	___xxtofl
  5691   0050C8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  5692   0050CC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  5693   0050D0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  5694   0050D4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  5695   0050D8  ECC9  F02D         	call	___fldiv	;wreg free
  5696   0050DC  C00F  F028         	movff	?___fldiv,___fladd@b
  5697   0050E0  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  5698   0050E4  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  5699   0050E8  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  5700   0050EC  EC96  F02F         	call	___fladd	;wreg free
  5701   0050F0  C028  F038         	movff	?___fladd,___fltol@f1
  5702   0050F4  C029  F039         	movff	?___fladd+1,___fltol@f1+1
  5703   0050F8  C02A  F03A         	movff	?___fladd+2,___fltol@f1+2
  5704   0050FC  C02B  F03B         	movff	?___fladd+3,___fltol@f1+3
  5705   005100  EC7D  F024         	call	___fltol	;wreg free
  5706   005104  C038  F042         	movff	?___fltol,?_adcRead
  5707   005108  C039  F043         	movff	?___fltol+1,?_adcRead+1
  5708   00510C  EFC3  F028         	goto	l192
  5709   005110                     l4426:
  5710   005110  0E00               	movlw	0
  5711   005112  6E2C               	movwf	___fladd@a^0,c
  5712   005114  0E00               	movlw	0
  5713   005116  6E2D               	movwf	(___fladd@a+1)^0,c
  5714   005118  0E00               	movlw	0
  5715   00511A  6E2E               	movwf	(___fladd@a+2)^0,c
  5716   00511C  0E3F               	movlw	63
  5717   00511E  6E2F               	movwf	(___fladd@a+3)^0,c
  5718   005120  0E0A               	movlw	10
  5719   005122  6E13               	movwf	___fldiv@a^0,c
  5720   005124  0ED7               	movlw	215
  5721   005126  6E14               	movwf	(___fldiv@a+1)^0,c
  5722   005128  0E23               	movlw	35
  5723   00512A  6E15               	movwf	(___fldiv@a+2)^0,c
  5724   00512C  0E41               	movlw	65
  5725   00512E  6E16               	movwf	(___fldiv@a+3)^0,c
  5726   005130  C044  F001         	movff	adcRead@ADvalor,___xxtofl@val
  5727   005134  C045  F002         	movff	adcRead@ADvalor+1,___xxtofl@val+1
  5728   005138  6A03               	clrf	(___xxtofl@val+2)^0,c
  5729   00513A  6A04               	clrf	(___xxtofl@val+3)^0,c
  5730   00513C  0E00               	movlw	0
  5731   00513E  EC10  F027         	call	___xxtofl
  5732   005142  C001  F00F         	movff	?___xxtofl,___fldiv@b
  5733   005146  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  5734   00514A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  5735   00514E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  5736   005152  ECC9  F02D         	call	___fldiv	;wreg free
  5737   005156  C00F  F028         	movff	?___fldiv,___fladd@b
  5738   00515A  C010  F029         	movff	?___fldiv+1,___fladd@b+1
  5739   00515E  C011  F02A         	movff	?___fldiv+2,___fladd@b+2
  5740   005162  C012  F02B         	movff	?___fldiv+3,___fladd@b+3
  5741   005166  EC96  F02F         	call	___fladd	;wreg free
  5742   00516A  C028  F038         	movff	?___fladd,___fltol@f1
  5743   00516E  C029  F039         	movff	?___fladd+1,___fltol@f1+1
  5744   005172  C02A  F03A         	movff	?___fladd+2,___fltol@f1+2
  5745   005176  C02B  F03B         	movff	?___fladd+3,___fltol@f1+3
  5746   00517A  EC7D  F024         	call	___fltol	;wreg free
  5747   00517E  C038  F042         	movff	?___fltol,?_adcRead
  5748   005182  C039  F043         	movff	?___fltol+1,?_adcRead+1
  5749   005186                     l192:
  5750   005186  0012               	return		;funcret
  5751   005188                     __end_of_adcRead:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function ___xxtofl *****************
  5755 ;; Defined at:
  5756 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  sign            1    wreg     unsigned char 
  5759 ;;  val             4    0[COMRAM] long 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  sign            1    8[COMRAM] unsigned char 
  5762 ;;  arg             4   10[COMRAM] unsigned long 
  5763 ;;  exp             1    9[COMRAM] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  4    0[COMRAM] unsigned char 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5773 ;;      Params:         4       0       0       0       0       0       0       0       0
  5774 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5775 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5776 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5777 ;;Total ram usage:       14 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_adcRead
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text20
  5787   004E20                     __ptext20:
  5788                           	callstack 0
  5789   004E20                     ___xxtofl:
  5790                           	callstack 26
  5791                           
  5792                           ;incstack = 0
  5793                           ;___xxtofl@sign stored from wreg
  5794   004E20  6E09               	movwf	___xxtofl@sign^0,c
  5795   004E22  5009               	movf	___xxtofl@sign^0,w,c
  5796   004E24  B4D8               	btfsc	status,2,c
  5797   004E26  EF17  F027         	goto	u4961
  5798   004E2A  EF19  F027         	goto	u4960
  5799   004E2E                     u4961:
  5800   004E2E  EF3B  F027         	goto	l1522
  5801   004E32                     u4960:
  5802   004E32  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5803   004E34  EF20  F027         	goto	u4970
  5804   004E38  EF1E  F027         	goto	u4971
  5805   004E3C                     u4971:
  5806   004E3C  EF3B  F027         	goto	l1522
  5807   004E40                     u4970:
  5808   004E40  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5809   004E44  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5810   004E48  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5811   004E4C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5812   004E50  1E05               	comf	??___xxtofl^0,f,c
  5813   004E52  1E06               	comf	(??___xxtofl+1)^0,f,c
  5814   004E54  1E07               	comf	(??___xxtofl+2)^0,f,c
  5815   004E56  1E08               	comf	(??___xxtofl+3)^0,f,c
  5816   004E58  2A05               	incf	??___xxtofl^0,f,c
  5817   004E5A  0E00               	movlw	0
  5818   004E5C  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5819   004E5E  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5820   004E60  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5821   004E62  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5822   004E66  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5823   004E6A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5824   004E6E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5825   004E72  EF43  F027         	goto	l4358
  5826   004E76                     l1522:
  5827   004E76  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5828   004E7A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5829   004E7E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5830   004E82  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5831   004E86                     l4358:
  5832   004E86  5001               	movf	___xxtofl@val^0,w,c
  5833   004E88  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5834   004E8A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5835   004E8C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5836   004E8E  A4D8               	btfss	status,2,c
  5837   004E90  EF4C  F027         	goto	u4981
  5838   004E94  EF4E  F027         	goto	u4980
  5839   004E98                     u4981:
  5840   004E98  EF58  F027         	goto	l4364
  5841   004E9C                     u4980:
  5842   004E9C  0E00               	movlw	0
  5843   004E9E  6E01               	movwf	?___xxtofl^0,c
  5844   004EA0  0E00               	movlw	0
  5845   004EA2  6E02               	movwf	(?___xxtofl+1)^0,c
  5846   004EA4  0E00               	movlw	0
  5847   004EA6  6E03               	movwf	(?___xxtofl+2)^0,c
  5848   004EA8  0E00               	movlw	0
  5849   004EAA  6E04               	movwf	(?___xxtofl+3)^0,c
  5850   004EAC  EFE9  F027         	goto	l1525
  5851   004EB0                     l4364:
  5852   004EB0  0E96               	movlw	150
  5853   004EB2  6E0A               	movwf	___xxtofl@exp^0,c
  5854   004EB4  EF62  F027         	goto	l4368
  5855   004EB8                     l4366:
  5856   004EB8  2A0A               	incf	___xxtofl@exp^0,f,c
  5857   004EBA  90D8               	bcf	status,0,c
  5858   004EBC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5859   004EBE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5860   004EC0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5861   004EC2  320B               	rrcf	___xxtofl@arg^0,f,c
  5862   004EC4                     l4368:
  5863   004EC4  0E00               	movlw	0
  5864   004EC6  140B               	andwf	___xxtofl@arg^0,w,c
  5865   004EC8  6E05               	movwf	??___xxtofl^0,c
  5866   004ECA  0E00               	movlw	0
  5867   004ECC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5868   004ECE  6E06               	movwf	(??___xxtofl+1)^0,c
  5869   004ED0  0E00               	movlw	0
  5870   004ED2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5871   004ED4  6E07               	movwf	(??___xxtofl+2)^0,c
  5872   004ED6  0EFE               	movlw	254
  5873   004ED8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5874   004EDA  6E08               	movwf	(??___xxtofl+3)^0,c
  5875   004EDC  5005               	movf	??___xxtofl^0,w,c
  5876   004EDE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5877   004EE0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5878   004EE2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5879   004EE4  A4D8               	btfss	status,2,c
  5880   004EE6  EF77  F027         	goto	u4991
  5881   004EEA  EF79  F027         	goto	u4990
  5882   004EEE                     u4991:
  5883   004EEE  EF5C  F027         	goto	l4366
  5884   004EF2                     u4990:
  5885   004EF2  EF87  F027         	goto	l1529
  5886   004EF6                     l4370:
  5887   004EF6  2A0A               	incf	___xxtofl@exp^0,f,c
  5888   004EF8  0E01               	movlw	1
  5889   004EFA  260B               	addwf	___xxtofl@arg^0,f,c
  5890   004EFC  0E00               	movlw	0
  5891   004EFE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5892   004F00  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5893   004F02  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5894   004F04  90D8               	bcf	status,0,c
  5895   004F06  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5896   004F08  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5897   004F0A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5898   004F0C  320B               	rrcf	___xxtofl@arg^0,f,c
  5899   004F0E                     l1529:
  5900   004F0E  0E00               	movlw	0
  5901   004F10  140B               	andwf	___xxtofl@arg^0,w,c
  5902   004F12  6E05               	movwf	??___xxtofl^0,c
  5903   004F14  0E00               	movlw	0
  5904   004F16  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5905   004F18  6E06               	movwf	(??___xxtofl+1)^0,c
  5906   004F1A  0E00               	movlw	0
  5907   004F1C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5908   004F1E  6E07               	movwf	(??___xxtofl+2)^0,c
  5909   004F20  0EFF               	movlw	255
  5910   004F22  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5911   004F24  6E08               	movwf	(??___xxtofl+3)^0,c
  5912   004F26  5005               	movf	??___xxtofl^0,w,c
  5913   004F28  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5914   004F2A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5915   004F2C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5916   004F2E  A4D8               	btfss	status,2,c
  5917   004F30  EF9C  F027         	goto	u5001
  5918   004F34  EF9E  F027         	goto	u5000
  5919   004F38                     u5001:
  5920   004F38  EF7B  F027         	goto	l4370
  5921   004F3C                     u5000:
  5922   004F3C  EFA6  F027         	goto	l4378
  5923   004F40                     l4376:
  5924   004F40  060A               	decf	___xxtofl@exp^0,f,c
  5925   004F42  90D8               	bcf	status,0,c
  5926   004F44  360B               	rlcf	___xxtofl@arg^0,f,c
  5927   004F46  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5928   004F48  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5929   004F4A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5930   004F4C                     l4378:
  5931   004F4C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5932   004F4E  EFAB  F027         	goto	u5011
  5933   004F52  EFAD  F027         	goto	u5010
  5934   004F56                     u5011:
  5935   004F56  EFB5  F027         	goto	l1536
  5936   004F5A                     u5010:
  5937   004F5A  0E02               	movlw	2
  5938   004F5C  600A               	cpfslt	___xxtofl@exp^0,c
  5939   004F5E  EFB3  F027         	goto	u5021
  5940   004F62  EFB5  F027         	goto	u5020
  5941   004F66                     u5021:
  5942   004F66  EFA0  F027         	goto	l4376
  5943   004F6A                     u5020:
  5944   004F6A                     l1536:
  5945   004F6A  B00A               	btfsc	___xxtofl@exp^0,0,c
  5946   004F6C  EFBA  F027         	goto	u5031
  5947   004F70  EFBC  F027         	goto	u5030
  5948   004F74                     u5031:
  5949   004F74  EFBD  F027         	goto	l4384
  5950   004F78                     u5030:
  5951   004F78  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5952   004F7A                     l4384:
  5953   004F7A  90D8               	bcf	status,0,c
  5954   004F7C  320A               	rrcf	___xxtofl@exp^0,f,c
  5955   004F7E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5956   004F82  6A06               	clrf	(??___xxtofl+1)^0,c
  5957   004F84  6A07               	clrf	(??___xxtofl+2)^0,c
  5958   004F86  6A08               	clrf	(??___xxtofl+3)^0,c
  5959   004F88  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5960   004F8C  6A07               	clrf	(??___xxtofl+2)^0,c
  5961   004F8E  6A06               	clrf	(??___xxtofl+1)^0,c
  5962   004F90  6A05               	clrf	??___xxtofl^0,c
  5963   004F92  5005               	movf	??___xxtofl^0,w,c
  5964   004F94  120B               	iorwf	___xxtofl@arg^0,f,c
  5965   004F96  5006               	movf	(??___xxtofl+1)^0,w,c
  5966   004F98  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5967   004F9A  5007               	movf	(??___xxtofl+2)^0,w,c
  5968   004F9C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5969   004F9E  5008               	movf	(??___xxtofl+3)^0,w,c
  5970   004FA0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5971   004FA2  5009               	movf	___xxtofl@sign^0,w,c
  5972   004FA4  B4D8               	btfsc	status,2,c
  5973   004FA6  EFD7  F027         	goto	u5041
  5974   004FAA  EFD9  F027         	goto	u5040
  5975   004FAE                     u5041:
  5976   004FAE  EFE1  F027         	goto	l4394
  5977   004FB2                     u5040:
  5978   004FB2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5979   004FB4  EFE0  F027         	goto	u5050
  5980   004FB8  EFDE  F027         	goto	u5051
  5981   004FBC                     u5051:
  5982   004FBC  EFE1  F027         	goto	l4394
  5983   004FC0                     u5050:
  5984   004FC0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5985   004FC2                     l4394:
  5986   004FC2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5987   004FC6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5988   004FCA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5989   004FCE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5990   004FD2                     l1525:
  5991   004FD2  0012               	return		;funcret
  5992   004FD4                     __end_of___xxtofl:
  5993                           	callstack 0
  5994                           
  5995 ;; *************** function ___fltol *****************
  5996 ;; Defined at:
  5997 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  f1              4   55[COMRAM] unsigned char 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  exp1            1   64[COMRAM] unsigned char 
  6002 ;;  sign1           1   63[COMRAM] unsigned char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  4   55[COMRAM] long 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6012 ;;      Params:         4       0       0       0       0       0       0       0       0
  6013 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6014 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6015 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6016 ;;Total ram usage:       10 bytes
  6017 ;; Hardware stack levels used: 1
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		_adcRead
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text21
  6026   0048FA                     __ptext21:
  6027                           	callstack 0
  6028   0048FA                     ___fltol:
  6029                           	callstack 26
  6030   0048FA  343A               	rlcf	(___fltol@f1+2)^0,w,c
  6031   0048FC  343B               	rlcf	(___fltol@f1+3)^0,w,c
  6032   0048FE  6E41               	movwf	___fltol@exp1^0,c
  6033   004900  5041               	movf	___fltol@exp1^0,w,c
  6034   004902  A4D8               	btfss	status,2,c
  6035   004904  EF86  F024         	goto	u4891
  6036   004908  EF88  F024         	goto	u4890
  6037   00490C                     u4891:
  6038   00490C  EF92  F024         	goto	l4314
  6039   004910                     u4890:
  6040   004910                     l4310:
  6041   004910  0E00               	movlw	0
  6042   004912  6E38               	movwf	?___fltol^0,c
  6043   004914  0E00               	movlw	0
  6044   004916  6E39               	movwf	(?___fltol+1)^0,c
  6045   004918  0E00               	movlw	0
  6046   00491A  6E3A               	movwf	(?___fltol+2)^0,c
  6047   00491C  0E00               	movlw	0
  6048   00491E  6E3B               	movwf	(?___fltol+3)^0,c
  6049   004920  EFFF  F024         	goto	l1164
  6050   004924                     l4314:
  6051   004924  C038  F03C         	movff	___fltol@f1,??___fltol
  6052   004928  C039  F03D         	movff	___fltol@f1+1,??___fltol+1
  6053   00492C  C03A  F03E         	movff	___fltol@f1+2,??___fltol+2
  6054   004930  C03B  F03F         	movff	___fltol@f1+3,??___fltol+3
  6055   004934  0E20               	movlw	32
  6056   004936  EFA2  F024         	goto	u4900
  6057   00493A                     u4905:
  6058   00493A  90D8               	bcf	status,0,c
  6059   00493C  323F               	rrcf	(??___fltol+3)^0,f,c
  6060   00493E  323E               	rrcf	(??___fltol+2)^0,f,c
  6061   004940  323D               	rrcf	(??___fltol+1)^0,f,c
  6062   004942  323C               	rrcf	??___fltol^0,f,c
  6063   004944                     u4900:
  6064   004944  2EE8               	decfsz	wreg,f,c
  6065   004946  EF9D  F024         	goto	u4905
  6066   00494A  503C               	movf	??___fltol^0,w,c
  6067   00494C  6E40               	movwf	___fltol@sign1^0,c
  6068   00494E  8E3A               	bsf	(___fltol@f1+2)^0,7,c
  6069   004950  0EFF               	movlw	255
  6070   004952  1638               	andwf	___fltol@f1^0,f,c
  6071   004954  0EFF               	movlw	255
  6072   004956  1639               	andwf	(___fltol@f1+1)^0,f,c
  6073   004958  0EFF               	movlw	255
  6074   00495A  163A               	andwf	(___fltol@f1+2)^0,f,c
  6075   00495C  0E00               	movlw	0
  6076   00495E  163B               	andwf	(___fltol@f1+3)^0,f,c
  6077   004960  0E96               	movlw	150
  6078   004962  5E41               	subwf	___fltol@exp1^0,f,c
  6079   004964  BE41               	btfsc	___fltol@exp1^0,7,c
  6080   004966  EFB9  F024         	goto	u4910
  6081   00496A  EFB7  F024         	goto	u4911
  6082   00496E                     u4911:
  6083   00496E  EFCF  F024         	goto	l4334
  6084   004972                     u4910:
  6085   004972  5041               	movf	___fltol@exp1^0,w,c
  6086   004974  0A80               	xorlw	128
  6087   004976  0F97               	addlw	151
  6088   004978  B0D8               	btfsc	status,0,c
  6089   00497A  EFC1  F024         	goto	u4921
  6090   00497E  EFC3  F024         	goto	u4920
  6091   004982                     u4921:
  6092   004982  EFC5  F024         	goto	l4330
  6093   004986                     u4920:
  6094   004986  EF88  F024         	goto	l4310
  6095   00498A                     l4330:
  6096   00498A  90D8               	bcf	status,0,c
  6097   00498C  323B               	rrcf	(___fltol@f1+3)^0,f,c
  6098   00498E  323A               	rrcf	(___fltol@f1+2)^0,f,c
  6099   004990  3239               	rrcf	(___fltol@f1+1)^0,f,c
  6100   004992  3238               	rrcf	___fltol@f1^0,f,c
  6101   004994  3E41               	incfsz	___fltol@exp1^0,f,c
  6102   004996  EFC5  F024         	goto	l4330
  6103   00499A  EFE7  F024         	goto	l4344
  6104   00499E                     l4334:
  6105   00499E  0E1F               	movlw	31
  6106   0049A0  6441               	cpfsgt	___fltol@exp1^0,c
  6107   0049A2  EFD5  F024         	goto	u4931
  6108   0049A6  EFD7  F024         	goto	u4930
  6109   0049AA                     u4931:
  6110   0049AA  EFDF  F024         	goto	l4342
  6111   0049AE                     u4930:
  6112   0049AE  EF88  F024         	goto	l4310
  6113   0049B2                     l4340:
  6114   0049B2  90D8               	bcf	status,0,c
  6115   0049B4  3638               	rlcf	___fltol@f1^0,f,c
  6116   0049B6  3639               	rlcf	(___fltol@f1+1)^0,f,c
  6117   0049B8  363A               	rlcf	(___fltol@f1+2)^0,f,c
  6118   0049BA  363B               	rlcf	(___fltol@f1+3)^0,f,c
  6119   0049BC  0641               	decf	___fltol@exp1^0,f,c
  6120   0049BE                     l4342:
  6121   0049BE  5041               	movf	___fltol@exp1^0,w,c
  6122   0049C0  A4D8               	btfss	status,2,c
  6123   0049C2  EFE5  F024         	goto	u4941
  6124   0049C6  EFE7  F024         	goto	u4940
  6125   0049CA                     u4941:
  6126   0049CA  EFD9  F024         	goto	l4340
  6127   0049CE                     u4940:
  6128   0049CE                     l4344:
  6129   0049CE  5040               	movf	___fltol@sign1^0,w,c
  6130   0049D0  B4D8               	btfsc	status,2,c
  6131   0049D2  EFED  F024         	goto	u4951
  6132   0049D6  EFEF  F024         	goto	u4950
  6133   0049DA                     u4951:
  6134   0049DA  EFF7  F024         	goto	l4348
  6135   0049DE                     u4950:
  6136   0049DE  1E3B               	comf	(___fltol@f1+3)^0,f,c
  6137   0049E0  1E3A               	comf	(___fltol@f1+2)^0,f,c
  6138   0049E2  1E39               	comf	(___fltol@f1+1)^0,f,c
  6139   0049E4  6C38               	negf	___fltol@f1^0,c
  6140   0049E6  0E00               	movlw	0
  6141   0049E8  2239               	addwfc	(___fltol@f1+1)^0,f,c
  6142   0049EA  223A               	addwfc	(___fltol@f1+2)^0,f,c
  6143   0049EC  223B               	addwfc	(___fltol@f1+3)^0,f,c
  6144   0049EE                     l4348:
  6145   0049EE  C038  F038         	movff	___fltol@f1,?___fltol
  6146   0049F2  C039  F039         	movff	___fltol@f1+1,?___fltol+1
  6147   0049F6  C03A  F03A         	movff	___fltol@f1+2,?___fltol+2
  6148   0049FA  C03B  F03B         	movff	___fltol@f1+3,?___fltol+3
  6149   0049FE                     l1164:
  6150   0049FE  0012               	return		;funcret
  6151   004A00                     __end_of___fltol:
  6152                           	callstack 0
  6153                           
  6154 ;; *************** function ___fldiv *****************
  6155 ;; Defined at:
  6156 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  b               4   14[COMRAM] long 
  6159 ;;  a               4   18[COMRAM] long 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  grs             4   33[COMRAM] unsigned long 
  6162 ;;  rem             4   26[COMRAM] unsigned long 
  6163 ;;  new_exp         2   31[COMRAM] short 
  6164 ;;  aexp            1   38[COMRAM] unsigned char 
  6165 ;;  bexp            1   37[COMRAM] unsigned char 
  6166 ;;  sign            1   30[COMRAM] unsigned char 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  4   14[COMRAM] unsigned char 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6176 ;;      Params:         8       0       0       0       0       0       0       0       0
  6177 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6178 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6179 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6180 ;;Total ram usage:       25 bytes
  6181 ;; Hardware stack levels used: 1
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		_adcRead
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text22
  6190   005B92                     __ptext22:
  6191                           	callstack 0
  6192   005B92                     ___fldiv:
  6193                           	callstack 26
  6194   005B92  5012               	movf	(___fldiv@b+3)^0,w,c
  6195   005B94  0B80               	andlw	128
  6196   005B96  6E1F               	movwf	___fldiv@sign^0,c
  6197   005B98  5012               	movf	(___fldiv@b+3)^0,w,c
  6198   005B9A  2412               	addwf	(___fldiv@b+3)^0,w,c
  6199   005B9C  6E26               	movwf	___fldiv@bexp^0,c
  6200   005B9E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6201   005BA0  EFD4  F02D         	goto	u4611
  6202   005BA4  EFD6  F02D         	goto	u4610
  6203   005BA8                     u4611:
  6204   005BA8  EFD7  F02D         	goto	l4154
  6205   005BAC                     u4610:
  6206   005BAC  8026               	bsf	___fldiv@bexp^0,0,c
  6207   005BAE                     l4154:
  6208   005BAE  5026               	movf	___fldiv@bexp^0,w,c
  6209   005BB0  B4D8               	btfsc	status,2,c
  6210   005BB2  EFDD  F02D         	goto	u4621
  6211   005BB6  EFDF  F02D         	goto	u4620
  6212   005BBA                     u4621:
  6213   005BBA  EFF4  F02D         	goto	l4164
  6214   005BBE                     u4620:
  6215   005BBE  2826               	incf	___fldiv@bexp^0,w,c
  6216   005BC0  A4D8               	btfss	status,2,c
  6217   005BC2  EFE5  F02D         	goto	u4631
  6218   005BC6  EFE7  F02D         	goto	u4630
  6219   005BCA                     u4631:
  6220   005BCA  EFEF  F02D         	goto	l4160
  6221   005BCE                     u4630:
  6222   005BCE  0E00               	movlw	0
  6223   005BD0  6E0F               	movwf	___fldiv@b^0,c
  6224   005BD2  0E00               	movlw	0
  6225   005BD4  6E10               	movwf	(___fldiv@b+1)^0,c
  6226   005BD6  0E00               	movlw	0
  6227   005BD8  6E11               	movwf	(___fldiv@b+2)^0,c
  6228   005BDA  0E00               	movlw	0
  6229   005BDC  6E12               	movwf	(___fldiv@b+3)^0,c
  6230   005BDE                     l4160:
  6231   005BDE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6232   005BE0  0E00               	movlw	0
  6233   005BE2  6E12               	movwf	(___fldiv@b+3)^0,c
  6234   005BE4  EFFC  F02D         	goto	l4166
  6235   005BE8                     l4164:
  6236   005BE8  0E00               	movlw	0
  6237   005BEA  6E0F               	movwf	___fldiv@b^0,c
  6238   005BEC  0E00               	movlw	0
  6239   005BEE  6E10               	movwf	(___fldiv@b+1)^0,c
  6240   005BF0  0E00               	movlw	0
  6241   005BF2  6E11               	movwf	(___fldiv@b+2)^0,c
  6242   005BF4  0E00               	movlw	0
  6243   005BF6  6E12               	movwf	(___fldiv@b+3)^0,c
  6244   005BF8                     l4166:
  6245   005BF8  5016               	movf	(___fldiv@a+3)^0,w,c
  6246   005BFA  0B80               	andlw	128
  6247   005BFC  1A1F               	xorwf	___fldiv@sign^0,f,c
  6248   005BFE  5016               	movf	(___fldiv@a+3)^0,w,c
  6249   005C00  2416               	addwf	(___fldiv@a+3)^0,w,c
  6250   005C02  6E27               	movwf	___fldiv@aexp^0,c
  6251   005C04  AE15               	btfss	(___fldiv@a+2)^0,7,c
  6252   005C06  EF07  F02E         	goto	u4641
  6253   005C0A  EF09  F02E         	goto	u4640
  6254   005C0E                     u4641:
  6255   005C0E  EF0A  F02E         	goto	l4174
  6256   005C12                     u4640:
  6257   005C12  8027               	bsf	___fldiv@aexp^0,0,c
  6258   005C14                     l4174:
  6259   005C14  5027               	movf	___fldiv@aexp^0,w,c
  6260   005C16  B4D8               	btfsc	status,2,c
  6261   005C18  EF10  F02E         	goto	u4651
  6262   005C1C  EF12  F02E         	goto	u4650
  6263   005C20                     u4651:
  6264   005C20  EF27  F02E         	goto	l4184
  6265   005C24                     u4650:
  6266   005C24  2827               	incf	___fldiv@aexp^0,w,c
  6267   005C26  A4D8               	btfss	status,2,c
  6268   005C28  EF18  F02E         	goto	u4661
  6269   005C2C  EF1A  F02E         	goto	u4660
  6270   005C30                     u4661:
  6271   005C30  EF22  F02E         	goto	l4180
  6272   005C34                     u4660:
  6273   005C34  0E00               	movlw	0
  6274   005C36  6E13               	movwf	___fldiv@a^0,c
  6275   005C38  0E00               	movlw	0
  6276   005C3A  6E14               	movwf	(___fldiv@a+1)^0,c
  6277   005C3C  0E00               	movlw	0
  6278   005C3E  6E15               	movwf	(___fldiv@a+2)^0,c
  6279   005C40  0E00               	movlw	0
  6280   005C42  6E16               	movwf	(___fldiv@a+3)^0,c
  6281   005C44                     l4180:
  6282   005C44  8E15               	bsf	(___fldiv@a+2)^0,7,c
  6283   005C46  0E00               	movlw	0
  6284   005C48  6E16               	movwf	(___fldiv@a+3)^0,c
  6285   005C4A  EF2F  F02E         	goto	l4186
  6286   005C4E                     l4184:
  6287   005C4E  0E00               	movlw	0
  6288   005C50  6E13               	movwf	___fldiv@a^0,c
  6289   005C52  0E00               	movlw	0
  6290   005C54  6E14               	movwf	(___fldiv@a+1)^0,c
  6291   005C56  0E00               	movlw	0
  6292   005C58  6E15               	movwf	(___fldiv@a+2)^0,c
  6293   005C5A  0E00               	movlw	0
  6294   005C5C  6E16               	movwf	(___fldiv@a+3)^0,c
  6295   005C5E                     l4186:
  6296   005C5E  5013               	movf	___fldiv@a^0,w,c
  6297   005C60  1014               	iorwf	(___fldiv@a+1)^0,w,c
  6298   005C62  1015               	iorwf	(___fldiv@a+2)^0,w,c
  6299   005C64  1016               	iorwf	(___fldiv@a+3)^0,w,c
  6300   005C66  A4D8               	btfss	status,2,c
  6301   005C68  EF38  F02E         	goto	u4671
  6302   005C6C  EF3A  F02E         	goto	u4670
  6303   005C70                     u4671:
  6304   005C70  EF52  F02E         	goto	l4198
  6305   005C74                     u4670:
  6306   005C74  0E00               	movlw	0
  6307   005C76  6E0F               	movwf	___fldiv@b^0,c
  6308   005C78  0E00               	movlw	0
  6309   005C7A  6E10               	movwf	(___fldiv@b+1)^0,c
  6310   005C7C  0E00               	movlw	0
  6311   005C7E  6E11               	movwf	(___fldiv@b+2)^0,c
  6312   005C80  0E00               	movlw	0
  6313   005C82  6E12               	movwf	(___fldiv@b+3)^0,c
  6314   005C84  0E80               	movlw	128
  6315   005C86  1211               	iorwf	(___fldiv@b+2)^0,f,c
  6316   005C88  0E7F               	movlw	127
  6317   005C8A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6318   005C8C                     l4192:
  6319   005C8C  501F               	movf	___fldiv@sign^0,w,c
  6320   005C8E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  6321   005C90  C00F  F00F         	movff	___fldiv@b,?___fldiv
  6322   005C94  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  6323   005C98  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  6324   005C9C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  6325   005CA0  EF95  F02F         	goto	l1449
  6326   005CA4                     l4198:
  6327   005CA4  5026               	movf	___fldiv@bexp^0,w,c
  6328   005CA6  A4D8               	btfss	status,2,c
  6329   005CA8  EF58  F02E         	goto	u4681
  6330   005CAC  EF5A  F02E         	goto	u4680
  6331   005CB0                     u4681:
  6332   005CB0  EF64  F02E         	goto	l4206
  6333   005CB4                     u4680:
  6334   005CB4  0E00               	movlw	0
  6335   005CB6  6E0F               	movwf	?___fldiv^0,c
  6336   005CB8  0E00               	movlw	0
  6337   005CBA  6E10               	movwf	(?___fldiv+1)^0,c
  6338   005CBC  0E00               	movlw	0
  6339   005CBE  6E11               	movwf	(?___fldiv+2)^0,c
  6340   005CC0  0E00               	movlw	0
  6341   005CC2  6E12               	movwf	(?___fldiv+3)^0,c
  6342   005CC4  EF95  F02F         	goto	l1449
  6343   005CC8                     l4206:
  6344   005CC8  5027               	movf	___fldiv@aexp^0,w,c
  6345   005CCA  C026  F017         	movff	___fldiv@bexp,??___fldiv
  6346   005CCE  6A18               	clrf	(??___fldiv+1)^0,c
  6347   005CD0  5E17               	subwf	??___fldiv^0,f,c
  6348   005CD2  0E00               	movlw	0
  6349   005CD4  5A18               	subwfb	(??___fldiv+1)^0,f,c
  6350   005CD6  0E7F               	movlw	127
  6351   005CD8  2417               	addwf	??___fldiv^0,w,c
  6352   005CDA  6E20               	movwf	___fldiv@new_exp^0,c
  6353   005CDC  0E00               	movlw	0
  6354   005CDE  2018               	addwfc	(??___fldiv+1)^0,w,c
  6355   005CE0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6356   005CE2  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  6357   005CE6  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  6358   005CEA  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  6359   005CEE  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  6360   005CF2  0E00               	movlw	0
  6361   005CF4  6E0F               	movwf	___fldiv@b^0,c
  6362   005CF6  0E00               	movlw	0
  6363   005CF8  6E10               	movwf	(___fldiv@b+1)^0,c
  6364   005CFA  0E00               	movlw	0
  6365   005CFC  6E11               	movwf	(___fldiv@b+2)^0,c
  6366   005CFE  0E00               	movlw	0
  6367   005D00  6E12               	movwf	(___fldiv@b+3)^0,c
  6368   005D02  0E00               	movlw	0
  6369   005D04  6E22               	movwf	___fldiv@grs^0,c
  6370   005D06  0E00               	movlw	0
  6371   005D08  6E23               	movwf	(___fldiv@grs+1)^0,c
  6372   005D0A  0E00               	movlw	0
  6373   005D0C  6E24               	movwf	(___fldiv@grs+2)^0,c
  6374   005D0E  0E00               	movlw	0
  6375   005D10  6E25               	movwf	(___fldiv@grs+3)^0,c
  6376   005D12  0E00               	movlw	0
  6377   005D14  6E27               	movwf	___fldiv@aexp^0,c
  6378   005D16  EFC5  F02E         	goto	l1451
  6379   005D1A                     l4216:
  6380   005D1A  5027               	movf	___fldiv@aexp^0,w,c
  6381   005D1C  B4D8               	btfsc	status,2,c
  6382   005D1E  EF93  F02E         	goto	u4691
  6383   005D22  EF95  F02E         	goto	u4690
  6384   005D26                     u4691:
  6385   005D26  EFAC  F02E         	goto	l4224
  6386   005D2A                     u4690:
  6387   005D2A  90D8               	bcf	status,0,c
  6388   005D2C  361B               	rlcf	___fldiv@rem^0,f,c
  6389   005D2E  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  6390   005D30  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  6391   005D32  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  6392   005D34  90D8               	bcf	status,0,c
  6393   005D36  360F               	rlcf	___fldiv@b^0,f,c
  6394   005D38  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6395   005D3A  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6396   005D3C  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6397   005D3E  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6398   005D40  EFA4  F02E         	goto	u4701
  6399   005D44  EFA6  F02E         	goto	u4700
  6400   005D48                     u4701:
  6401   005D48  EFA7  F02E         	goto	l1454
  6402   005D4C                     u4700:
  6403   005D4C  800F               	bsf	___fldiv@b^0,0,c
  6404   005D4E                     l1454:
  6405   005D4E  90D8               	bcf	status,0,c
  6406   005D50  3622               	rlcf	___fldiv@grs^0,f,c
  6407   005D52  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6408   005D54  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6409   005D56  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6410   005D58                     l4224:
  6411   005D58  5013               	movf	___fldiv@a^0,w,c
  6412   005D5A  5C1B               	subwf	___fldiv@rem^0,w,c
  6413   005D5C  5014               	movf	(___fldiv@a+1)^0,w,c
  6414   005D5E  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  6415   005D60  5015               	movf	(___fldiv@a+2)^0,w,c
  6416   005D62  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  6417   005D64  5016               	movf	(___fldiv@a+3)^0,w,c
  6418   005D66  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  6419   005D68  A0D8               	btfss	status,0,c
  6420   005D6A  EFB9  F02E         	goto	u4711
  6421   005D6E  EFBB  F02E         	goto	u4710
  6422   005D72                     u4711:
  6423   005D72  EFC4  F02E         	goto	l4230
  6424   005D76                     u4710:
  6425   005D76  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  6426   005D78  5013               	movf	___fldiv@a^0,w,c
  6427   005D7A  5E1B               	subwf	___fldiv@rem^0,f,c
  6428   005D7C  5014               	movf	(___fldiv@a+1)^0,w,c
  6429   005D7E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  6430   005D80  5015               	movf	(___fldiv@a+2)^0,w,c
  6431   005D82  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  6432   005D84  5016               	movf	(___fldiv@a+3)^0,w,c
  6433   005D86  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  6434   005D88                     l4230:
  6435   005D88  2A27               	incf	___fldiv@aexp^0,f,c
  6436   005D8A                     l1451:
  6437   005D8A  0E19               	movlw	25
  6438   005D8C  6427               	cpfsgt	___fldiv@aexp^0,c
  6439   005D8E  EFCB  F02E         	goto	u4721
  6440   005D92  EFCD  F02E         	goto	u4720
  6441   005D96                     u4721:
  6442   005D96  EF8D  F02E         	goto	l4216
  6443   005D9A                     u4720:
  6444   005D9A  501B               	movf	___fldiv@rem^0,w,c
  6445   005D9C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  6446   005D9E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  6447   005DA0  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  6448   005DA2  B4D8               	btfsc	status,2,c
  6449   005DA4  EFD6  F02E         	goto	u4731
  6450   005DA8  EFD8  F02E         	goto	u4730
  6451   005DAC                     u4731:
  6452   005DAC  EFF0  F02E         	goto	l4242
  6453   005DB0                     u4730:
  6454   005DB0  8022               	bsf	___fldiv@grs^0,0,c
  6455   005DB2  EFF0  F02E         	goto	l4242
  6456   005DB6                     l4236:
  6457   005DB6  90D8               	bcf	status,0,c
  6458   005DB8  360F               	rlcf	___fldiv@b^0,f,c
  6459   005DBA  3610               	rlcf	(___fldiv@b+1)^0,f,c
  6460   005DBC  3611               	rlcf	(___fldiv@b+2)^0,f,c
  6461   005DBE  3612               	rlcf	(___fldiv@b+3)^0,f,c
  6462   005DC0  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6463   005DC2  EFE5  F02E         	goto	u4741
  6464   005DC6  EFE7  F02E         	goto	u4740
  6465   005DCA                     u4741:
  6466   005DCA  EFE8  F02E         	goto	l1460
  6467   005DCE                     u4740:
  6468   005DCE  800F               	bsf	___fldiv@b^0,0,c
  6469   005DD0                     l1460:
  6470   005DD0  90D8               	bcf	status,0,c
  6471   005DD2  3622               	rlcf	___fldiv@grs^0,f,c
  6472   005DD4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  6473   005DD6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  6474   005DD8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  6475   005DDA  0620               	decf	___fldiv@new_exp^0,f,c
  6476   005DDC  A0D8               	btfss	status,0,c
  6477   005DDE  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  6478   005DE0                     l4242:
  6479   005DE0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  6480   005DE2  EFF5  F02E         	goto	u4751
  6481   005DE6  EFF7  F02E         	goto	u4750
  6482   005DEA                     u4751:
  6483   005DEA  EFDB  F02E         	goto	l4236
  6484   005DEE                     u4750:
  6485   005DEE  0E00               	movlw	0
  6486   005DF0  6E27               	movwf	___fldiv@aexp^0,c
  6487   005DF2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  6488   005DF4  EFFE  F02E         	goto	u4761
  6489   005DF8  EF00  F02F         	goto	u4760
  6490   005DFC                     u4761:
  6491   005DFC  EF24  F02F         	goto	l1462
  6492   005E00                     u4760:
  6493   005E00  0EFF               	movlw	255
  6494   005E02  1422               	andwf	___fldiv@grs^0,w,c
  6495   005E04  6E17               	movwf	??___fldiv^0,c
  6496   005E06  0EFF               	movlw	255
  6497   005E08  1423               	andwf	(___fldiv@grs+1)^0,w,c
  6498   005E0A  6E18               	movwf	(??___fldiv+1)^0,c
  6499   005E0C  0EFF               	movlw	255
  6500   005E0E  1424               	andwf	(___fldiv@grs+2)^0,w,c
  6501   005E10  6E19               	movwf	(??___fldiv+2)^0,c
  6502   005E12  0E7F               	movlw	127
  6503   005E14  1425               	andwf	(___fldiv@grs+3)^0,w,c
  6504   005E16  6E1A               	movwf	(??___fldiv+3)^0,c
  6505   005E18  5017               	movf	??___fldiv^0,w,c
  6506   005E1A  1018               	iorwf	(??___fldiv+1)^0,w,c
  6507   005E1C  1019               	iorwf	(??___fldiv+2)^0,w,c
  6508   005E1E  101A               	iorwf	(??___fldiv+3)^0,w,c
  6509   005E20  B4D8               	btfsc	status,2,c
  6510   005E22  EF15  F02F         	goto	u4771
  6511   005E26  EF17  F02F         	goto	u4770
  6512   005E2A                     u4771:
  6513   005E2A  EF1B  F02F         	goto	l1463
  6514   005E2E                     u4770:
  6515   005E2E                     l4250:
  6516   005E2E  0E01               	movlw	1
  6517   005E30  6E27               	movwf	___fldiv@aexp^0,c
  6518   005E32  EF24  F02F         	goto	l1462
  6519   005E36                     l1463:
  6520   005E36  A00F               	btfss	___fldiv@b^0,0,c
  6521   005E38  EF20  F02F         	goto	u4781
  6522   005E3C  EF22  F02F         	goto	u4780
  6523   005E40                     u4781:
  6524   005E40  EF24  F02F         	goto	l1462
  6525   005E44                     u4780:
  6526   005E44  EF17  F02F         	goto	l4250
  6527   005E48                     l1462:
  6528   005E48  5027               	movf	___fldiv@aexp^0,w,c
  6529   005E4A  B4D8               	btfsc	status,2,c
  6530   005E4C  EF2A  F02F         	goto	u4791
  6531   005E50  EF2C  F02F         	goto	u4790
  6532   005E54                     u4791:
  6533   005E54  EF50  F02F         	goto	l4262
  6534   005E58                     u4790:
  6535   005E58  0E01               	movlw	1
  6536   005E5A  260F               	addwf	___fldiv@b^0,f,c
  6537   005E5C  0E00               	movlw	0
  6538   005E5E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  6539   005E60  2211               	addwfc	(___fldiv@b+2)^0,f,c
  6540   005E62  2212               	addwfc	(___fldiv@b+3)^0,f,c
  6541   005E64  A012               	btfss	(___fldiv@b+3)^0,0,c
  6542   005E66  EF37  F02F         	goto	u4801
  6543   005E6A  EF39  F02F         	goto	u4800
  6544   005E6E                     u4801:
  6545   005E6E  EF50  F02F         	goto	l4262
  6546   005E72                     u4800:
  6547   005E72  C00F  F017         	movff	___fldiv@b,??___fldiv
  6548   005E76  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  6549   005E7A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  6550   005E7E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  6551   005E82  341A               	rlcf	(??___fldiv+3)^0,w,c
  6552   005E84  321A               	rrcf	(??___fldiv+3)^0,f,c
  6553   005E86  3219               	rrcf	(??___fldiv+2)^0,f,c
  6554   005E88  3218               	rrcf	(??___fldiv+1)^0,f,c
  6555   005E8A  3217               	rrcf	??___fldiv^0,f,c
  6556   005E8C  C017  F00F         	movff	??___fldiv,___fldiv@b
  6557   005E90  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  6558   005E94  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  6559   005E98  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  6560   005E9C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  6561   005E9E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  6562   005EA0                     l4262:
  6563   005EA0  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6564   005EA2  EF5B  F02F         	goto	u4811
  6565   005EA6  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6566   005EA8  E108               	bnz	u4810
  6567   005EAA  2820               	incf	___fldiv@new_exp^0,w,c
  6568   005EAC  A0D8               	btfss	status,0,c
  6569   005EAE  EF5B  F02F         	goto	u4811
  6570   005EB2  EF5D  F02F         	goto	u4810
  6571   005EB6                     u4811:
  6572   005EB6  EF68  F02F         	goto	l4266
  6573   005EBA                     u4810:
  6574   005EBA  0E00               	movlw	0
  6575   005EBC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6576   005EBE  6820               	setf	___fldiv@new_exp^0,c
  6577   005EC0  0E00               	movlw	0
  6578   005EC2  6E0F               	movwf	___fldiv@b^0,c
  6579   005EC4  0E00               	movlw	0
  6580   005EC6  6E10               	movwf	(___fldiv@b+1)^0,c
  6581   005EC8  0E00               	movlw	0
  6582   005ECA  6E11               	movwf	(___fldiv@b+2)^0,c
  6583   005ECC  0E00               	movlw	0
  6584   005ECE  6E12               	movwf	(___fldiv@b+3)^0,c
  6585   005ED0                     l4266:
  6586   005ED0  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6587   005ED2  EF75  F02F         	goto	u4820
  6588   005ED6  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  6589   005ED8  E106               	bnz	u4821
  6590   005EDA  0420               	decf	___fldiv@new_exp^0,w,c
  6591   005EDC  B0D8               	btfsc	status,0,c
  6592   005EDE  EF73  F02F         	goto	u4821
  6593   005EE2  EF75  F02F         	goto	u4820
  6594   005EE6                     u4821:
  6595   005EE6  EF83  F02F         	goto	l4270
  6596   005EEA                     u4820:
  6597   005EEA  0E00               	movlw	0
  6598   005EEC  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  6599   005EEE  0E00               	movlw	0
  6600   005EF0  6E20               	movwf	___fldiv@new_exp^0,c
  6601   005EF2  0E00               	movlw	0
  6602   005EF4  6E0F               	movwf	___fldiv@b^0,c
  6603   005EF6  0E00               	movlw	0
  6604   005EF8  6E10               	movwf	(___fldiv@b+1)^0,c
  6605   005EFA  0E00               	movlw	0
  6606   005EFC  6E11               	movwf	(___fldiv@b+2)^0,c
  6607   005EFE  0E00               	movlw	0
  6608   005F00  6E12               	movwf	(___fldiv@b+3)^0,c
  6609   005F02  0E00               	movlw	0
  6610   005F04  6E1F               	movwf	___fldiv@sign^0,c
  6611   005F06                     l4270:
  6612   005F06  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  6613   005F0A  A026               	btfss	___fldiv@bexp^0,0,c
  6614   005F0C  EF8A  F02F         	goto	u4831
  6615   005F10  EF8C  F02F         	goto	u4830
  6616   005F14                     u4831:
  6617   005F14  EF8F  F02F         	goto	l4276
  6618   005F18                     u4830:
  6619   005F18  8E11               	bsf	(___fldiv@b+2)^0,7,c
  6620   005F1A  EF90  F02F         	goto	l4278
  6621   005F1E                     l4276:
  6622   005F1E  9E11               	bcf	(___fldiv@b+2)^0,7,c
  6623   005F20                     l4278:
  6624   005F20  90D8               	bcf	status,0,c
  6625   005F22  3026               	rrcf	___fldiv@bexp^0,w,c
  6626   005F24  6E12               	movwf	(___fldiv@b+3)^0,c
  6627   005F26  EF46  F02E         	goto	l4192
  6628   005F2A                     l1449:
  6629   005F2A  0012               	return		;funcret
  6630   005F2C                     __end_of___fldiv:
  6631                           	callstack 0
  6632                           
  6633 ;; *************** function _getAlarmLevel *****************
  6634 ;; Defined at:
  6635 ;;		line 35 in file "var.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  alarm           2   18[COMRAM] int 
  6638 ;;  level           2   20[COMRAM] int 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  2   18[COMRAM] int 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6650 ;;      Params:         4       0       0       0       0       0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6652 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6653 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6654 ;;Total ram usage:        6 bytes
  6655 ;; Hardware stack levels used: 1
  6656 ;; Hardware stack levels required when called: 5
  6657 ;; This function calls:
  6658 ;;		_dsReadData
  6659 ;; This function is called by:
  6660 ;;		_varInit
  6661 ;;		_checkAlarm
  6662 ;;		_smLoop
  6663 ;;		_outputPrint
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text23
  6668   004704                     __ptext23:
  6669                           	callstack 0
  6670   004704                     _getAlarmLevel:
  6671                           	callstack 24
  6672   004704                     
  6673                           ;var.c: 36:     if (alarm == 0) {
  6674   004704  5013               	movf	getAlarmLevel@alarm^0,w,c
  6675   004706  1014               	iorwf	(getAlarmLevel@alarm+1)^0,w,c
  6676   004708  A4D8               	btfss	status,2,c
  6677   00470A  EF89  F023         	goto	u5331
  6678   00470E  EF8B  F023         	goto	u5330
  6679   004712                     u5331:
  6680   004712  EFC1  F023         	goto	l4606
  6681   004716                     u5330:
  6682   004716  EFAB  F023         	goto	l4604
  6683   00471A                     l4584:
  6684                           
  6685                           ;var.c: 39:                 return dsReadData(0x21);
  6686   00471A  0E00               	movlw	0
  6687   00471C  6E0F               	movwf	(dsReadData@address+1)^0,c
  6688   00471E  0E21               	movlw	33
  6689   004720  6E0E               	movwf	dsReadData@address^0,c
  6690   004722  EC48  F01E         	call	_dsReadData	;wreg free
  6691   004726  C00E  F013         	movff	?_dsReadData,?_getAlarmLevel
  6692   00472A  C00F  F014         	movff	?_dsReadData+1,?_getAlarmLevel+1
  6693   00472E  EFFA  F023         	goto	l582
  6694   004732                     l4590:
  6695                           
  6696                           ;var.c: 42:                 return dsReadData(0x20);
  6697   004732  0E00               	movlw	0
  6698   004734  6E0F               	movwf	(dsReadData@address+1)^0,c
  6699   004736  0E20               	movlw	32
  6700   004738  6E0E               	movwf	dsReadData@address^0,c
  6701   00473A  EC48  F01E         	call	_dsReadData	;wreg free
  6702   00473E  C00E  F013         	movff	?_dsReadData,?_getAlarmLevel
  6703   004742  C00F  F014         	movff	?_dsReadData+1,?_getAlarmLevel+1
  6704   004746  EFFA  F023         	goto	l582
  6705   00474A                     l4596:
  6706                           
  6707                           ;var.c: 45:                 return 0;
  6708   00474A  0E00               	movlw	0
  6709   00474C  6E14               	movwf	(?_getAlarmLevel+1)^0,c
  6710   00474E  0E00               	movlw	0
  6711   004750  6E13               	movwf	?_getAlarmLevel^0,c
  6712   004752  EFFA  F023         	goto	l582
  6713   004756                     l4604:
  6714   004756  C015  F017         	movff	getAlarmLevel@level,??_getAlarmLevel
  6715   00475A  C016  F018         	movff	getAlarmLevel@level+1,??_getAlarmLevel+1
  6716                           
  6717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6718                           ; Switch size 1, requested type "simple"
  6719                           ; Number of cases is 1, Range of values is 0 to 0
  6720                           ; switch strategies available:
  6721                           ; Name         Instructions Cycles
  6722                           ; simple_byte            4     3 (average)
  6723                           ;	Chosen strategy is simple_byte
  6724   00475E  5018               	movf	(??_getAlarmLevel+1)^0,w,c
  6725   004760  0A00               	xorlw	0	; case 0
  6726   004762  B4D8               	btfsc	status,2,c
  6727   004764  EFB6  F023         	goto	l5954
  6728   004768  EFA5  F023         	goto	l4596
  6729   00476C                     l5954:
  6730                           
  6731                           ; Switch size 1, requested type "simple"
  6732                           ; Number of cases is 2, Range of values is 0 to 1
  6733                           ; switch strategies available:
  6734                           ; Name         Instructions Cycles
  6735                           ; simple_byte            7     4 (average)
  6736                           ;	Chosen strategy is simple_byte
  6737   00476C  5017               	movf	??_getAlarmLevel^0,w,c
  6738   00476E  0A00               	xorlw	0	; case 0
  6739   004770  B4D8               	btfsc	status,2,c
  6740   004772  EF8D  F023         	goto	l4584
  6741   004776  0A01               	xorlw	1	; case 1
  6742   004778  B4D8               	btfsc	status,2,c
  6743   00477A  EF99  F023         	goto	l4590
  6744   00477E  EFA5  F023         	goto	l4596
  6745   004782                     l4606:
  6746   004782  0413               	decf	getAlarmLevel@alarm^0,w,c
  6747   004784  1014               	iorwf	(getAlarmLevel@alarm+1)^0,w,c
  6748   004786  A4D8               	btfss	status,2,c
  6749   004788  EFC8  F023         	goto	u5341
  6750   00478C  EFCA  F023         	goto	u5340
  6751   004790                     u5341:
  6752   004790  EFFA  F023         	goto	l582
  6753   004794                     u5340:
  6754   004794  EFE4  F023         	goto	l4630
  6755   004798                     l4610:
  6756                           
  6757                           ;var.c: 51:                 return dsReadData(0x23);
  6758   004798  0E00               	movlw	0
  6759   00479A  6E0F               	movwf	(dsReadData@address+1)^0,c
  6760   00479C  0E23               	movlw	35
  6761   00479E  6E0E               	movwf	dsReadData@address^0,c
  6762   0047A0  EC48  F01E         	call	_dsReadData	;wreg free
  6763   0047A4  C00E  F013         	movff	?_dsReadData,?_getAlarmLevel
  6764   0047A8  C00F  F014         	movff	?_dsReadData+1,?_getAlarmLevel+1
  6765   0047AC  EFFA  F023         	goto	l582
  6766   0047B0                     l4616:
  6767                           
  6768                           ;var.c: 54:                 return dsReadData(0x22);
  6769   0047B0  0E00               	movlw	0
  6770   0047B2  6E0F               	movwf	(dsReadData@address+1)^0,c
  6771   0047B4  0E22               	movlw	34
  6772   0047B6  6E0E               	movwf	dsReadData@address^0,c
  6773   0047B8  EC48  F01E         	call	_dsReadData	;wreg free
  6774   0047BC  C00E  F013         	movff	?_dsReadData,?_getAlarmLevel
  6775   0047C0  C00F  F014         	movff	?_dsReadData+1,?_getAlarmLevel+1
  6776   0047C4  EFFA  F023         	goto	l582
  6777   0047C8                     l4630:
  6778   0047C8  C015  F017         	movff	getAlarmLevel@level,??_getAlarmLevel
  6779   0047CC  C016  F018         	movff	getAlarmLevel@level+1,??_getAlarmLevel+1
  6780                           
  6781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6782                           ; Switch size 1, requested type "simple"
  6783                           ; Number of cases is 1, Range of values is 0 to 0
  6784                           ; switch strategies available:
  6785                           ; Name         Instructions Cycles
  6786                           ; simple_byte            4     3 (average)
  6787                           ;	Chosen strategy is simple_byte
  6788   0047D0  5018               	movf	(??_getAlarmLevel+1)^0,w,c
  6789   0047D2  0A00               	xorlw	0	; case 0
  6790   0047D4  B4D8               	btfsc	status,2,c
  6791   0047D6  EFEF  F023         	goto	l5956
  6792   0047DA  EFA5  F023         	goto	l4596
  6793   0047DE                     l5956:
  6794                           
  6795                           ; Switch size 1, requested type "simple"
  6796                           ; Number of cases is 2, Range of values is 0 to 1
  6797                           ; switch strategies available:
  6798                           ; Name         Instructions Cycles
  6799                           ; simple_byte            7     4 (average)
  6800                           ;	Chosen strategy is simple_byte
  6801   0047DE  5017               	movf	??_getAlarmLevel^0,w,c
  6802   0047E0  0A00               	xorlw	0	; case 0
  6803   0047E2  B4D8               	btfsc	status,2,c
  6804   0047E4  EFCC  F023         	goto	l4610
  6805   0047E8  0A01               	xorlw	1	; case 1
  6806   0047EA  B4D8               	btfsc	status,2,c
  6807   0047EC  EFD8  F023         	goto	l4616
  6808   0047F0  EFA5  F023         	goto	l4596
  6809   0047F4                     l582:
  6810   0047F4  0012               	return		;funcret
  6811   0047F6                     __end_of_getAlarmLevel:
  6812                           	callstack 0
  6813                           
  6814 ;; *************** function _getTimer *****************
  6815 ;; Defined at:
  6816 ;;		line 26 in file "var.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;		None
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;		None
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  2    0[COMRAM] int 
  6823 ;; Registers used:
  6824 ;;		None
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6830 ;;      Params:         2       0       0       0       0       0       0       0       0
  6831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6833 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6834 ;;Total ram usage:        2 bytes
  6835 ;; Hardware stack levels used: 1
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_smLoop
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text24
  6844   0038F4                     __ptext24:
  6845                           	callstack 0
  6846   0038F4                     _getTimer:
  6847                           	callstack 29
  6848   0038F4                     
  6849                           ;var.c: 28:     return timer;
  6850   0038F4  C0B2  F001         	movff	_timer,?_getTimer
  6851   0038F8  C0B3  F002         	movff	_timer+1,?_getTimer+1
  6852   0038FC  0012               	return		;funcret
  6853   0038FE                     __end_of_getTimer:
  6854                           	callstack 0
  6855                           
  6856 ;; *************** function _getState *****************
  6857 ;; Defined at:
  6858 ;;		line 18 in file "var.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;		None
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;		None
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      unsigned char 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6872 ;;      Params:         0       0       0       0       0       0       0       0       0
  6873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6876 ;;Total ram usage:        0 bytes
  6877 ;; Hardware stack levels used: 1
  6878 ;; This function calls:
  6879 ;;		Nothing
  6880 ;; This function is called by:
  6881 ;;		_smLoop
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text25
  6886   0038DE                     __ptext25:
  6887                           	callstack 0
  6888   0038DE                     _getState:
  6889                           	callstack 29
  6890   0038DE                     
  6891                           ;var.c: 19:     return state;
  6892   0038DE  0100               	movlb	0	; () banked
  6893   0038E0  51B8               	movf	_state& (0+255),w,b
  6894   0038E2                     
  6895                           ; BSR set to: 0
  6896   0038E2  0012               	return		;funcret
  6897   0038E4                     __end_of_getState:
  6898                           	callstack 0
  6899                           
  6900 ;; *************** function _getLanguage *****************
  6901 ;; Defined at:
  6902 ;;		line 132 in file "var.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;		None
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  2   18[COMRAM] int 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6916 ;;      Params:         2       0       0       0       0       0       0       0       0
  6917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6919 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6920 ;;Total ram usage:        2 bytes
  6921 ;; Hardware stack levels used: 1
  6922 ;; Hardware stack levels required when called: 5
  6923 ;; This function calls:
  6924 ;;		_dsReadData
  6925 ;; This function is called by:
  6926 ;;		_smLoop
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text26
  6931   003954                     __ptext26:
  6932                           	callstack 0
  6933   003954                     _getLanguage:
  6934                           	callstack 24
  6935   003954                     
  6936                           ;var.c: 133:     return dsReadData(0x30) % 2;
  6937   003954  0E00               	movlw	0
  6938   003956  6E0F               	movwf	(dsReadData@address+1)^0,c
  6939   003958  0E30               	movlw	48
  6940   00395A  6E0E               	movwf	dsReadData@address^0,c
  6941   00395C  EC48  F01E         	call	_dsReadData	;wreg free
  6942   003960  0E01               	movlw	1
  6943   003962  140E               	andwf	?_dsReadData^0,w,c
  6944   003964  6E13               	movwf	?_getLanguage^0,c
  6945   003966  6A14               	clrf	(?_getLanguage+1)^0,c
  6946   003968  0012               	return		;funcret
  6947   00396A                     __end_of_getLanguage:
  6948                           	callstack 0
  6949                           
  6950 ;; *************** function _eventRead *****************
  6951 ;; Defined at:
  6952 ;;		line 20 in file "event.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;		None
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  key             2    3[BANK0 ] unsigned int 
  6957 ;;  ev              2    1[BANK0 ] int 
  6958 ;;  serial_comma    1    5[BANK0 ] unsigned char 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  2   93[COMRAM] unsigned int 
  6961 ;; Registers used:
  6962 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6968 ;;      Params:         2       0       0       0       0       0       0       0       0
  6969 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6970 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6971 ;;      Totals:         2       6       0       0       0       0       0       0       0
  6972 ;;Total ram usage:        8 bytes
  6973 ;; Hardware stack levels used: 1
  6974 ;; Hardware stack levels required when called: 7
  6975 ;; This function calls:
  6976 ;;		_kpRead
  6977 ;;		_memset
  6978 ;;		_processarProtocolo
  6979 ;;		_serialRead
  6980 ;;		_serialString
  6981 ;; This function is called by:
  6982 ;;		_smLoop
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text27
  6987   0058D6                     __ptext27:
  6988                           	callstack 0
  6989   0058D6                     _eventRead:
  6990                           	callstack 22
  6991   0058D6                     
  6992                           ;event.c: 21:     unsigned int key;;event.c: 22:     unsigned char serial_command;;event
      +                          .c: 23:     int ev = EV_NOEVENT;
  6993   0058D6  0E00               	movlw	0
  6994   0058D8  0100               	movlb	0	; () banked
  6995   0058DA  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  6996   0058DC  0E05               	movlw	5
  6997   0058DE  6FDE               	movwf	eventRead@ev& (0+255),b
  6998   0058E0                     
  6999                           ; BSR set to: 0
  7000                           ;event.c: 25:     key = kpRead();
  7001   0058E0  ECE9  F01F         	call	_kpRead	;wreg free
  7002   0058E4  0100               	movlb	0	; () banked
  7003   0058E6  6FDD               	movwf	??_eventRead& (0+255),b
  7004   0058E8  51DD               	movf	??_eventRead& (0+255),w,b
  7005   0058EA  6FE0               	movwf	eventRead@key& (0+255),b
  7006   0058EC  6BE1               	clrf	(eventRead@key+1)& (0+255),b
  7007   0058EE                     
  7008                           ; BSR set to: 0
  7009                           ;event.c: 27:     if (key != key_ant) {
  7010   0058EE  51B6               	movf	_key_ant& (0+255),w,b
  7011   0058F0  19E0               	xorwf	eventRead@key& (0+255),w,b
  7012   0058F2  E109               	bnz	u6320
  7013   0058F4  51B7               	movf	(_key_ant+1)& (0+255),w,b
  7014   0058F6  19E1               	xorwf	(eventRead@key+1)& (0+255),w,b
  7015   0058F8  B4D8               	btfsc	status,2,c
  7016   0058FA  EF81  F02C         	goto	u6321
  7017   0058FE  EF83  F02C         	goto	u6320
  7018   005902                     u6321:
  7019   005902  EFC8  F02C         	goto	l5160
  7020   005906                     u6320:
  7021   005906                     
  7022                           ; BSR set to: 0
  7023                           ;event.c: 28:         if (key == 5) {
  7024   005906  0E05               	movlw	5
  7025   005908  19E0               	xorwf	eventRead@key& (0+255),w,b
  7026   00590A  11E1               	iorwf	(eventRead@key+1)& (0+255),w,b
  7027   00590C  A4D8               	btfss	status,2,c
  7028   00590E  EF8B  F02C         	goto	u6331
  7029   005912  EF8D  F02C         	goto	u6330
  7030   005916                     u6331:
  7031   005916  EF91  F02C         	goto	l5144
  7032   00591A                     u6330:
  7033   00591A                     
  7034                           ; BSR set to: 0
  7035                           ;event.c: 29:             ev = EV_RIGHT;
  7036   00591A  0E00               	movlw	0
  7037   00591C  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7038   00591E  0E03               	movlw	3
  7039   005920  6FDE               	movwf	eventRead@ev& (0+255),b
  7040   005922                     l5144:
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;event.c: 32:         if (key == 4) {
  7044   005922  0E04               	movlw	4
  7045   005924  19E0               	xorwf	eventRead@key& (0+255),w,b
  7046   005926  11E1               	iorwf	(eventRead@key+1)& (0+255),w,b
  7047   005928  A4D8               	btfss	status,2,c
  7048   00592A  EF99  F02C         	goto	u6341
  7049   00592E  EF9B  F02C         	goto	u6340
  7050   005932                     u6341:
  7051   005932  EF9F  F02C         	goto	l5148
  7052   005936                     u6340:
  7053   005936                     
  7054                           ; BSR set to: 0
  7055                           ;event.c: 33:             ev = EV_LEFT;
  7056   005936  0E00               	movlw	0
  7057   005938  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7058   00593A  0E02               	movlw	2
  7059   00593C  6FDE               	movwf	eventRead@ev& (0+255),b
  7060   00593E                     l5148:
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;event.c: 36:         if (key == 3) {
  7064   00593E  0E03               	movlw	3
  7065   005940  19E0               	xorwf	eventRead@key& (0+255),w,b
  7066   005942  11E1               	iorwf	(eventRead@key+1)& (0+255),w,b
  7067   005944  A4D8               	btfss	status,2,c
  7068   005946  EFA7  F02C         	goto	u6351
  7069   00594A  EFA9  F02C         	goto	u6350
  7070   00594E                     u6351:
  7071   00594E  EFAD  F02C         	goto	l5152
  7072   005952                     u6350:
  7073   005952                     
  7074                           ; BSR set to: 0
  7075                           ;event.c: 37:             ev = EV_ENTER;
  7076   005952  0E00               	movlw	0
  7077   005954  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7078   005956  0E04               	movlw	4
  7079   005958  6FDE               	movwf	eventRead@ev& (0+255),b
  7080   00595A                     l5152:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;event.c: 39:         if (key == 2) {
  7084   00595A  0E02               	movlw	2
  7085   00595C  19E0               	xorwf	eventRead@key& (0+255),w,b
  7086   00595E  11E1               	iorwf	(eventRead@key+1)& (0+255),w,b
  7087   005960  A4D8               	btfss	status,2,c
  7088   005962  EFB5  F02C         	goto	u6361
  7089   005966  EFB7  F02C         	goto	u6360
  7090   00596A                     u6361:
  7091   00596A  EFBB  F02C         	goto	l5156
  7092   00596E                     u6360:
  7093   00596E                     
  7094                           ; BSR set to: 0
  7095                           ;event.c: 40:             ev = EV_UP;
  7096   00596E  0E00               	movlw	0
  7097   005970  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7098   005972  0E00               	movlw	0
  7099   005974  6FDE               	movwf	eventRead@ev& (0+255),b
  7100   005976                     l5156:
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;event.c: 42:         if (key == 1) {
  7104   005976  05E0               	decf	eventRead@key& (0+255),w,b
  7105   005978  11E1               	iorwf	(eventRead@key+1)& (0+255),w,b
  7106   00597A  A4D8               	btfss	status,2,c
  7107   00597C  EFC2  F02C         	goto	u6371
  7108   005980  EFC4  F02C         	goto	u6370
  7109   005984                     u6371:
  7110   005984  EFC8  F02C         	goto	l5160
  7111   005988                     u6370:
  7112   005988                     
  7113                           ; BSR set to: 0
  7114                           ;event.c: 43:             ev = EV_DOWN;
  7115   005988  0E00               	movlw	0
  7116   00598A  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7117   00598C  0E01               	movlw	1
  7118   00598E  6FDE               	movwf	eventRead@ev& (0+255),b
  7119   005990                     l5160:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;event.c: 47:     serial_command = serialRead();
  7123   005990  EC40  F01D         	call	_serialRead	;wreg free
  7124   005994  0100               	movlb	0	; () banked
  7125   005996  6FE2               	movwf	eventRead@serial_command& (0+255),b
  7126   005998                     
  7127                           ; BSR set to: 0
  7128                           ;event.c: 49:     if (serial_command == 'a' || serial_command == 'A') {
  7129   005998  0E61               	movlw	97
  7130   00599A  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7131   00599C  B4D8               	btfsc	status,2,c
  7132   00599E  EFD3  F02C         	goto	u6381
  7133   0059A2  EFD5  F02C         	goto	u6380
  7134   0059A6                     u6381:
  7135   0059A6  EFDE  F02C         	goto	l5166
  7136   0059AA                     u6380:
  7137   0059AA                     
  7138                           ; BSR set to: 0
  7139   0059AA  0E41               	movlw	65
  7140   0059AC  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7141   0059AE  A4D8               	btfss	status,2,c
  7142   0059B0  EFDC  F02C         	goto	u6391
  7143   0059B4  EFDE  F02C         	goto	u6390
  7144   0059B8                     u6391:
  7145   0059B8  EFE4  F02C         	goto	l5168
  7146   0059BC                     u6390:
  7147   0059BC                     l5166:
  7148                           
  7149                           ; BSR set to: 0
  7150                           ;event.c: 50:         ev = EV_LEFT;
  7151   0059BC  0E00               	movlw	0
  7152   0059BE  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7153   0059C0  0E02               	movlw	2
  7154   0059C2  6FDE               	movwf	eventRead@ev& (0+255),b
  7155                           
  7156                           ;event.c: 51:     } else if (serial_command == 'd' || serial_command == 'D') {
  7157   0059C4  EFC0  F02D         	goto	l5224
  7158   0059C8                     l5168:
  7159                           
  7160                           ; BSR set to: 0
  7161   0059C8  0E64               	movlw	100
  7162   0059CA  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7163   0059CC  B4D8               	btfsc	status,2,c
  7164   0059CE  EFEB  F02C         	goto	u6401
  7165   0059D2  EFED  F02C         	goto	u6400
  7166   0059D6                     u6401:
  7167   0059D6  EFF6  F02C         	goto	l5172
  7168   0059DA                     u6400:
  7169   0059DA                     
  7170                           ; BSR set to: 0
  7171   0059DA  0E44               	movlw	68
  7172   0059DC  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7173   0059DE  A4D8               	btfss	status,2,c
  7174   0059E0  EFF4  F02C         	goto	u6411
  7175   0059E4  EFF6  F02C         	goto	u6410
  7176   0059E8                     u6411:
  7177   0059E8  EFFC  F02C         	goto	l5174
  7178   0059EC                     u6410:
  7179   0059EC                     l5172:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;event.c: 52:         ev = EV_RIGHT;
  7183   0059EC  0E00               	movlw	0
  7184   0059EE  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7185   0059F0  0E03               	movlw	3
  7186   0059F2  6FDE               	movwf	eventRead@ev& (0+255),b
  7187                           
  7188                           ;event.c: 53:     } else if (serial_command == 's' || serial_command == 'S') {
  7189   0059F4  EFC0  F02D         	goto	l5224
  7190   0059F8                     l5174:
  7191                           
  7192                           ; BSR set to: 0
  7193   0059F8  0E73               	movlw	115
  7194   0059FA  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7195   0059FC  B4D8               	btfsc	status,2,c
  7196   0059FE  EF03  F02D         	goto	u6421
  7197   005A02  EF05  F02D         	goto	u6420
  7198   005A06                     u6421:
  7199   005A06  EF0E  F02D         	goto	l5178
  7200   005A0A                     u6420:
  7201   005A0A                     
  7202                           ; BSR set to: 0
  7203   005A0A  0E53               	movlw	83
  7204   005A0C  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7205   005A0E  A4D8               	btfss	status,2,c
  7206   005A10  EF0C  F02D         	goto	u6431
  7207   005A14  EF0E  F02D         	goto	u6430
  7208   005A18                     u6431:
  7209   005A18  EF14  F02D         	goto	l5180
  7210   005A1C                     u6430:
  7211   005A1C                     l5178:
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;event.c: 54:         ev = EV_DOWN;
  7215   005A1C  0E00               	movlw	0
  7216   005A1E  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7217   005A20  0E01               	movlw	1
  7218   005A22  6FDE               	movwf	eventRead@ev& (0+255),b
  7219                           
  7220                           ;event.c: 55:     } else if (serial_command == 'w' || serial_command == 'W') {
  7221   005A24  EFC0  F02D         	goto	l5224
  7222   005A28                     l5180:
  7223                           
  7224                           ; BSR set to: 0
  7225   005A28  0E77               	movlw	119
  7226   005A2A  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7227   005A2C  B4D8               	btfsc	status,2,c
  7228   005A2E  EF1B  F02D         	goto	u6441
  7229   005A32  EF1D  F02D         	goto	u6440
  7230   005A36                     u6441:
  7231   005A36  EF26  F02D         	goto	l5184
  7232   005A3A                     u6440:
  7233   005A3A                     
  7234                           ; BSR set to: 0
  7235   005A3A  0E57               	movlw	87
  7236   005A3C  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7237   005A3E  A4D8               	btfss	status,2,c
  7238   005A40  EF24  F02D         	goto	u6451
  7239   005A44  EF26  F02D         	goto	u6450
  7240   005A48                     u6451:
  7241   005A48  EF2C  F02D         	goto	l5186
  7242   005A4C                     u6450:
  7243   005A4C                     l5184:
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;event.c: 56:         ev = EV_UP;
  7247   005A4C  0E00               	movlw	0
  7248   005A4E  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7249   005A50  0E00               	movlw	0
  7250   005A52  6FDE               	movwf	eventRead@ev& (0+255),b
  7251                           
  7252                           ;event.c: 57:     } else if (serial_command == 'f' || serial_command == 'F') {
  7253   005A54  EFC0  F02D         	goto	l5224
  7254   005A58                     l5186:
  7255                           
  7256                           ; BSR set to: 0
  7257   005A58  0E66               	movlw	102
  7258   005A5A  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7259   005A5C  B4D8               	btfsc	status,2,c
  7260   005A5E  EF33  F02D         	goto	u6461
  7261   005A62  EF35  F02D         	goto	u6460
  7262   005A66                     u6461:
  7263   005A66  EF3E  F02D         	goto	l5190
  7264   005A6A                     u6460:
  7265   005A6A                     
  7266                           ; BSR set to: 0
  7267   005A6A  0E46               	movlw	70
  7268   005A6C  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7269   005A6E  A4D8               	btfss	status,2,c
  7270   005A70  EF3C  F02D         	goto	u6471
  7271   005A74  EF3E  F02D         	goto	u6470
  7272   005A78                     u6471:
  7273   005A78  EF44  F02D         	goto	l5192
  7274   005A7C                     u6470:
  7275   005A7C                     l5190:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;event.c: 58:         ev = EV_ENTER;
  7279   005A7C  0E00               	movlw	0
  7280   005A7E  6FDF               	movwf	(eventRead@ev+1)& (0+255),b
  7281   005A80  0E04               	movlw	4
  7282   005A82  6FDE               	movwf	eventRead@ev& (0+255),b
  7283                           
  7284                           ;event.c: 59:     } else {
  7285   005A84  EFC0  F02D         	goto	l5224
  7286   005A88                     l5192:
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;event.c: 60:         if (serial_command == '/') {
  7290   005A88  0E2F               	movlw	47
  7291   005A8A  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7292   005A8C  A4D8               	btfss	status,2,c
  7293   005A8E  EF4B  F02D         	goto	u6481
  7294   005A92  EF4D  F02D         	goto	u6480
  7295   005A96                     u6481:
  7296   005A96  EF64  F02D         	goto	l5200
  7297   005A9A                     u6480:
  7298   005A9A                     
  7299                           ; BSR set to: 0
  7300                           ;event.c: 61:             memset(protocolo, 0, 32);
  7301   005A9A  0EBD               	movlw	low _protocolo
  7302   005A9C  6E01               	movwf	memset@dest^0,c
  7303   005A9E  0E00               	movlw	high _protocolo
  7304   005AA0  6E02               	movwf	(memset@dest+1)^0,c
  7305   005AA2  0E00               	movlw	0
  7306   005AA4  6E04               	movwf	(memset@c+1)^0,c
  7307   005AA6  0E00               	movlw	0
  7308   005AA8  6E03               	movwf	memset@c^0,c
  7309   005AAA  0E00               	movlw	0
  7310   005AAC  6E06               	movwf	(memset@n+1)^0,c
  7311   005AAE  0E20               	movlw	32
  7312   005AB0  6E05               	movwf	memset@n^0,c
  7313   005AB2  EC55  F026         	call	_memset	;wreg free
  7314   005AB6                     
  7315                           ;event.c: 62:             protocolo[0] = serial_command;
  7316   005AB6  C0E2  F0BD         	movff	eventRead@serial_command,_protocolo
  7317   005ABA                     l5198:
  7318                           
  7319                           ;event.c: 63:             protocolo_index = 0;
  7320   005ABA  0E00               	movlw	0
  7321   005ABC  0100               	movlb	0	; () banked
  7322   005ABE  6FB5               	movwf	(_protocolo_index+1)& (0+255),b
  7323   005AC0  0E00               	movlw	0
  7324   005AC2  6FB4               	movwf	_protocolo_index& (0+255),b
  7325                           
  7326                           ;event.c: 64:         } else if (serial_command == ';') {
  7327   005AC4  EFC0  F02D         	goto	l5224
  7328   005AC8                     l5200:
  7329                           
  7330                           ; BSR set to: 0
  7331   005AC8  0E3B               	movlw	59
  7332   005ACA  19E2               	xorwf	eventRead@serial_command& (0+255),w,b
  7333   005ACC  A4D8               	btfss	status,2,c
  7334   005ACE  EF6B  F02D         	goto	u6491
  7335   005AD2  EF6D  F02D         	goto	u6490
  7336   005AD6                     u6491:
  7337   005AD6  EF8C  F02D         	goto	l5210
  7338   005ADA                     u6490:
  7339   005ADA                     
  7340                           ; BSR set to: 0
  7341                           ;event.c: 65:             protocolo[protocolo_index + 1] = serial_command;
  7342   005ADA  0EBE               	movlw	low (_protocolo+1)
  7343   005ADC  25B4               	addwf	_protocolo_index& (0+255),w,b
  7344   005ADE  6ED9               	movwf	fsr2l,c
  7345   005AE0  0E00               	movlw	high (_protocolo+1)
  7346   005AE2  21B5               	addwfc	(_protocolo_index+1)& (0+255),w,b
  7347   005AE4  6EDA               	movwf	fsr2h,c
  7348   005AE6  C0E2  FFDF         	movff	eventRead@serial_command,indf2
  7349   005AEA                     
  7350                           ; BSR set to: 0
  7351                           ;event.c: 66:             processarProtocolo();
  7352   005AEA  ECBB  F034         	call	_processarProtocolo	;wreg free
  7353   005AEE                     
  7354                           ;event.c: 67:             protocolo_index = 0;
  7355   005AEE  0E00               	movlw	0
  7356   005AF0  0100               	movlb	0	; () banked
  7357   005AF2  6FB5               	movwf	(_protocolo_index+1)& (0+255),b
  7358   005AF4  0E00               	movlw	0
  7359   005AF6  6FB4               	movwf	_protocolo_index& (0+255),b
  7360   005AF8                     
  7361                           ; BSR set to: 0
  7362                           ;event.c: 68:             memset(protocolo, 0, 32);
  7363   005AF8  0EBD               	movlw	low _protocolo
  7364   005AFA  6E01               	movwf	memset@dest^0,c
  7365   005AFC  0E00               	movlw	high _protocolo
  7366   005AFE  6E02               	movwf	(memset@dest+1)^0,c
  7367   005B00  0E00               	movlw	0
  7368   005B02  6E04               	movwf	(memset@c+1)^0,c
  7369   005B04  0E00               	movlw	0
  7370   005B06  6E03               	movwf	memset@c^0,c
  7371   005B08  0E00               	movlw	0
  7372   005B0A  6E06               	movwf	(memset@n+1)^0,c
  7373   005B0C  0E20               	movlw	32
  7374   005B0E  6E05               	movwf	memset@n^0,c
  7375   005B10  EC55  F026         	call	_memset	;wreg free
  7376                           
  7377                           ;event.c: 69:         } else if(protocolo_index == 32){
  7378   005B14  EFC0  F02D         	goto	l5224
  7379   005B18                     l5210:
  7380                           
  7381                           ; BSR set to: 0
  7382   005B18  0E20               	movlw	32
  7383   005B1A  19B4               	xorwf	_protocolo_index& (0+255),w,b
  7384   005B1C  11B5               	iorwf	(_protocolo_index+1)& (0+255),w,b
  7385   005B1E  A4D8               	btfss	status,2,c
  7386   005B20  EF94  F02D         	goto	u6501
  7387   005B24  EF96  F02D         	goto	u6500
  7388   005B28                     u6501:
  7389   005B28  EFA6  F02D         	goto	l5216
  7390   005B2C                     u6500:
  7391   005B2C                     
  7392                           ; BSR set to: 0
  7393                           ;event.c: 70:             memset(protocolo, 0, 32);
  7394   005B2C  0EBD               	movlw	low _protocolo
  7395   005B2E  6E01               	movwf	memset@dest^0,c
  7396   005B30  0E00               	movlw	high _protocolo
  7397   005B32  6E02               	movwf	(memset@dest+1)^0,c
  7398   005B34  0E00               	movlw	0
  7399   005B36  6E04               	movwf	(memset@c+1)^0,c
  7400   005B38  0E00               	movlw	0
  7401   005B3A  6E03               	movwf	memset@c^0,c
  7402   005B3C  0E00               	movlw	0
  7403   005B3E  6E06               	movwf	(memset@n+1)^0,c
  7404   005B40  0E20               	movlw	32
  7405   005B42  6E05               	movwf	memset@n^0,c
  7406   005B44  EC55  F026         	call	_memset	;wreg free
  7407   005B48  EF5D  F02D         	goto	l5198
  7408   005B4C                     l5216:
  7409                           
  7410                           ; BSR set to: 0
  7411   005B4C  51E2               	movf	eventRead@serial_command& (0+255),w,b
  7412   005B4E  B4D8               	btfsc	status,2,c
  7413   005B50  EFAC  F02D         	goto	u6511
  7414   005B54  EFAE  F02D         	goto	u6510
  7415   005B58                     u6511:
  7416   005B58  EFC0  F02D         	goto	l57
  7417   005B5C                     u6510:
  7418   005B5C                     
  7419                           ; BSR set to: 0
  7420                           ;event.c: 73:             protocolo_index++;
  7421   005B5C  4BB4               	infsnz	_protocolo_index& (0+255),f,b
  7422   005B5E  2BB5               	incf	(_protocolo_index+1)& (0+255),f,b
  7423   005B60                     
  7424                           ; BSR set to: 0
  7425                           ;event.c: 74:             protocolo[protocolo_index] = serial_command;
  7426   005B60  0EBD               	movlw	low _protocolo
  7427   005B62  25B4               	addwf	_protocolo_index& (0+255),w,b
  7428   005B64  6ED9               	movwf	fsr2l,c
  7429   005B66  0E00               	movlw	high _protocolo
  7430   005B68  21B5               	addwfc	(_protocolo_index+1)& (0+255),w,b
  7431   005B6A  6EDA               	movwf	fsr2h,c
  7432   005B6C  C0E2  FFDF         	movff	eventRead@serial_command,indf2
  7433   005B70                     
  7434                           ; BSR set to: 0
  7435                           ;event.c: 75:             serialString(protocolo);
  7436   005B70  0EBD               	movlw	low _protocolo
  7437   005B72  6E02               	movwf	serialString@msg^0,c
  7438   005B74  0E00               	movlw	high _protocolo
  7439   005B76  6E03               	movwf	(serialString@msg+1)^0,c
  7440   005B78  EC98  F020         	call	_serialString	;wreg free
  7441   005B7C  EFC0  F02D         	goto	l5224
  7442   005B80                     l57:
  7443   005B80                     l5224:
  7444                           
  7445                           ;event.c: 81:     key_ant = key;
  7446   005B80  C0E0  F0B6         	movff	eventRead@key,_key_ant
  7447   005B84  C0E1  F0B7         	movff	eventRead@key+1,_key_ant+1
  7448   005B88                     
  7449                           ;event.c: 82:     return ev;
  7450   005B88  C0DE  F05E         	movff	eventRead@ev,?_eventRead
  7451   005B8C  C0DF  F05F         	movff	eventRead@ev+1,?_eventRead+1
  7452   005B90  0012               	return		;funcret
  7453   005B92                     __end_of_eventRead:
  7454                           	callstack 0
  7455                           
  7456 ;; *************** function _serialRead *****************
  7457 ;; Defined at:
  7458 ;;		line 46 in file "serial.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;		None
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;  resp            1    0[COMRAM] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  1    wreg      unsigned char 
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7472 ;;      Params:         0       0       0       0       0       0       0       0       0
  7473 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7475 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7476 ;;Total ram usage:        1 bytes
  7477 ;; Hardware stack levels used: 1
  7478 ;; This function calls:
  7479 ;;		Nothing
  7480 ;; This function is called by:
  7481 ;;		_eventRead
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text28
  7486   003A80                     __ptext28:
  7487                           	callstack 0
  7488   003A80                     _serialRead:
  7489                           	callstack 28
  7490   003A80                     
  7491                           ;serial.c: 47:     char resp = 0;
  7492   003A80  0E00               	movlw	0
  7493   003A82  6E01               	movwf	serialRead@resp^0,c
  7494   003A84                     
  7495                           ;serial.c: 49:     if (((RCSTA) & (1<<(1))))
  7496   003A84  A2AB               	btfss	171,1,c	;volatile
  7497   003A86  EF47  F01D         	goto	u5531
  7498   003A8A  EF49  F01D         	goto	u5530
  7499   003A8E                     u5531:
  7500   003A8E  EF4B  F01D         	goto	l4766
  7501   003A92                     u5530:
  7502   003A92                     
  7503                           ;serial.c: 50:     {;serial.c: 51:         ((RCSTA) &= ~(1<<(4)));
  7504   003A92  98AB               	bcf	171,4,c	;volatile
  7505                           
  7506                           ;serial.c: 52:         ((RCSTA) |= (1<<(4)));
  7507   003A94  88AB               	bsf	171,4,c	;volatile
  7508   003A96                     l4766:
  7509                           
  7510                           ;serial.c: 55:     if (((PIR1) & (1<<(5))))
  7511   003A96  AA9E               	btfss	158,5,c	;volatile
  7512   003A98  EF50  F01D         	goto	u5541
  7513   003A9C  EF52  F01D         	goto	u5540
  7514   003AA0                     u5541:
  7515   003AA0  EF54  F01D         	goto	l4770
  7516   003AA4                     u5540:
  7517   003AA4                     
  7518                           ;serial.c: 56:     {;serial.c: 57:         resp = RCREG;
  7519   003AA4  CFAE F001          	movff	4014,serialRead@resp	;volatile
  7520   003AA8                     l4770:
  7521                           
  7522                           ;serial.c: 59:     return resp;
  7523   003AA8  5001               	movf	serialRead@resp^0,w,c
  7524   003AAA  0012               	return		;funcret
  7525   003AAC                     __end_of_serialRead:
  7526                           	callstack 0
  7527                           
  7528 ;; *************** function _processarProtocolo *****************
  7529 ;; Defined at:
  7530 ;;		line 85 in file "event.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;		None
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;  i               2   89[COMRAM] int 
  7535 ;;  i               2   87[COMRAM] int 
  7536 ;;  i               2   85[COMRAM] int 
  7537 ;;  i               2   83[COMRAM] int 
  7538 ;;  new_value       2   91[COMRAM] int 
  7539 ;;  err             2   81[COMRAM] unsigned int 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0
  7550 ;;      Locals:        12       0       0       0       0       0       0       0       0
  7551 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7552 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7553 ;;Total ram usage:       15 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 6
  7556 ;; This function calls:
  7557 ;;		___wmul
  7558 ;;		_serialString
  7559 ;;		_setAlarmLevel
  7560 ;;		_setLanguage
  7561 ;; This function is called by:
  7562 ;;		_eventRead
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text29
  7567   006976                     __ptext29:
  7568                           	callstack 0
  7569   006976                     _processarProtocolo:
  7570                           	callstack 22
  7571   006976                     
  7572                           ;event.c: 105:     unsigned int err = 0;
  7573   006976  0E00               	movlw	0
  7574   006978  6E53               	movwf	(processarProtocolo@err+1)^0,c
  7575   00697A  0E00               	movlw	0
  7576   00697C  6E52               	movwf	processarProtocolo@err^0,c
  7577   00697E                     
  7578                           ;event.c: 107:     if ((protocolo[1] == 'C' || protocolo[1] == 'c') || (protocolo[2] == 
      +                          'H' || protocolo[2] == 'h')) {
  7579   00697E  0E43               	movlw	67
  7580   006980  0100               	movlb	0	; () banked
  7581   006982  19BE               	xorwf	(_protocolo+1)& (0+255),w,b
  7582   006984  B4D8               	btfsc	status,2,c
  7583   006986  EFC7  F034         	goto	u5601
  7584   00698A  EFC9  F034         	goto	u5600
  7585   00698E                     u5601:
  7586   00698E  EFE4  F034         	goto	l4816
  7587   006992                     u5600:
  7588   006992                     
  7589                           ; BSR set to: 0
  7590   006992  0E63               	movlw	99
  7591   006994  19BE               	xorwf	(_protocolo+1)& (0+255),w,b
  7592   006996  B4D8               	btfsc	status,2,c
  7593   006998  EFD0  F034         	goto	u5611
  7594   00699C  EFD2  F034         	goto	u5610
  7595   0069A0                     u5611:
  7596   0069A0  EFE4  F034         	goto	l4816
  7597   0069A4                     u5610:
  7598   0069A4                     
  7599                           ; BSR set to: 0
  7600   0069A4  0E48               	movlw	72
  7601   0069A6  19BF               	xorwf	(_protocolo+2)& (0+255),w,b
  7602   0069A8  B4D8               	btfsc	status,2,c
  7603   0069AA  EFD9  F034         	goto	u5621
  7604   0069AE  EFDB  F034         	goto	u5620
  7605   0069B2                     u5621:
  7606   0069B2  EFE4  F034         	goto	l4816
  7607   0069B6                     u5620:
  7608   0069B6                     
  7609                           ; BSR set to: 0
  7610   0069B6  0E68               	movlw	104
  7611   0069B8  19BF               	xorwf	(_protocolo+2)& (0+255),w,b
  7612   0069BA  A4D8               	btfss	status,2,c
  7613   0069BC  EFE2  F034         	goto	u5631
  7614   0069C0  EFE4  F034         	goto	u5630
  7615   0069C4                     u5631:
  7616   0069C4  EF77  F036         	goto	l4900
  7617   0069C8                     u5630:
  7618   0069C8                     l4816:
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;event.c: 108:         if (protocolo[3] == 'M' || protocolo[3] == 'm') {
  7622   0069C8  0E4D               	movlw	77
  7623   0069CA  19C0               	xorwf	(_protocolo+3)& (0+255),w,b
  7624   0069CC  B4D8               	btfsc	status,2,c
  7625   0069CE  EFEB  F034         	goto	u5641
  7626   0069D2  EFED  F034         	goto	u5640
  7627   0069D6                     u5641:
  7628   0069D6  EFF6  F034         	goto	l4820
  7629   0069DA                     u5640:
  7630   0069DA                     
  7631                           ; BSR set to: 0
  7632   0069DA  0E6D               	movlw	109
  7633   0069DC  19C0               	xorwf	(_protocolo+3)& (0+255),w,b
  7634   0069DE  A4D8               	btfss	status,2,c
  7635   0069E0  EFF4  F034         	goto	u5651
  7636   0069E4  EFF6  F034         	goto	u5650
  7637   0069E8                     u5651:
  7638   0069E8  EFFA  F037         	goto	l4984
  7639   0069EC                     u5650:
  7640   0069EC                     l4820:
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;event.c: 109:             int new_value = 0;
  7644   0069EC  0E00               	movlw	0
  7645   0069EE  6E5D               	movwf	(processarProtocolo@new_value+1)^0,c
  7646   0069F0  0E00               	movlw	0
  7647   0069F2  6E5C               	movwf	processarProtocolo@new_value^0,c
  7648   0069F4                     
  7649                           ; BSR set to: 0
  7650                           ;event.c: 110:             if(protocolo[4] == '1'){
  7651   0069F4  0E31               	movlw	49
  7652   0069F6  19C1               	xorwf	(_protocolo+4)& (0+255),w,b
  7653   0069F8  A4D8               	btfss	status,2,c
  7654   0069FA  EF01  F035         	goto	u5661
  7655   0069FE  EF03  F035         	goto	u5660
  7656   006A02                     u5661:
  7657   006A02  EF7D  F036         	goto	l4902
  7658   006A06                     u5660:
  7659   006A06                     
  7660                           ; BSR set to: 0
  7661                           ;event.c: 111:                 if((protocolo[6] == 'L' || protocolo[6] == 'l') && (proto
      +                          colo[7] == 'V' || protocolo[7] == 'v')){
  7662   006A06  0E4C               	movlw	76
  7663   006A08  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  7664   006A0A  B4D8               	btfsc	status,2,c
  7665   006A0C  EF0A  F035         	goto	u5671
  7666   006A10  EF0C  F035         	goto	u5670
  7667   006A14                     u5671:
  7668   006A14  EF15  F035         	goto	l4828
  7669   006A18                     u5670:
  7670   006A18                     
  7671                           ; BSR set to: 0
  7672   006A18  0E6C               	movlw	108
  7673   006A1A  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  7674   006A1C  A4D8               	btfss	status,2,c
  7675   006A1E  EF13  F035         	goto	u5681
  7676   006A22  EF15  F035         	goto	u5680
  7677   006A26                     u5681:
  7678   006A26  EFBD  F035         	goto	l4862
  7679   006A2A                     u5680:
  7680   006A2A                     l4828:
  7681                           
  7682                           ; BSR set to: 0
  7683   006A2A  0E56               	movlw	86
  7684   006A2C  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  7685   006A2E  B4D8               	btfsc	status,2,c
  7686   006A30  EF1C  F035         	goto	u5691
  7687   006A34  EF1E  F035         	goto	u5690
  7688   006A38                     u5691:
  7689   006A38  EF27  F035         	goto	l4832
  7690   006A3C                     u5690:
  7691   006A3C                     
  7692                           ; BSR set to: 0
  7693   006A3C  0E76               	movlw	118
  7694   006A3E  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  7695   006A40  A4D8               	btfss	status,2,c
  7696   006A42  EF25  F035         	goto	u5701
  7697   006A46  EF27  F035         	goto	u5700
  7698   006A4A                     u5701:
  7699   006A4A  EFBD  F035         	goto	l4862
  7700   006A4E                     u5700:
  7701   006A4E                     l4832:
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;event.c: 112:                     for(int i = 9; i <= protocolo_index; i++){
  7705   006A4E  0E00               	movlw	0
  7706   006A50  6E55               	movwf	(processarProtocolo@i+1)^0,c
  7707   006A52  0E09               	movlw	9
  7708   006A54  6E54               	movwf	processarProtocolo@i^0,c
  7709   006A56  EF7E  F035         	goto	l4850
  7710   006A5A                     l4834:
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;event.c: 113:                         if(new_value != 0){
  7714   006A5A  505C               	movf	processarProtocolo@new_value^0,w,c
  7715   006A5C  105D               	iorwf	(processarProtocolo@new_value+1)^0,w,c
  7716   006A5E  B4D8               	btfsc	status,2,c
  7717   006A60  EF34  F035         	goto	u5711
  7718   006A64  EF36  F035         	goto	u5710
  7719   006A68                     u5711:
  7720   006A68  EF44  F035         	goto	l4838
  7721   006A6C                     u5710:
  7722   006A6C                     
  7723                           ; BSR set to: 0
  7724                           ;event.c: 114:                             new_value *= 10;
  7725   006A6C  C05C  F001         	movff	processarProtocolo@new_value,___wmul@multiplier
  7726   006A70  C05D  F002         	movff	processarProtocolo@new_value+1,___wmul@multiplier+1
  7727   006A74  0E00               	movlw	0
  7728   006A76  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7729   006A78  0E0A               	movlw	10
  7730   006A7A  6E03               	movwf	___wmul@multiplicand^0,c
  7731   006A7C  ECEE  F01C         	call	___wmul	;wreg free
  7732   006A80  C001  F05C         	movff	?___wmul,processarProtocolo@new_value
  7733   006A84  C002  F05D         	movff	?___wmul+1,processarProtocolo@new_value+1
  7734   006A88                     l4838:
  7735                           
  7736                           ;event.c: 116:                         if (protocolo[i]>= '0' && protocolo[i] <= '9') {
  7737   006A88  0EBD               	movlw	low _protocolo
  7738   006A8A  2454               	addwf	processarProtocolo@i^0,w,c
  7739   006A8C  6ED9               	movwf	fsr2l,c
  7740   006A8E  0E00               	movlw	high _protocolo
  7741   006A90  2055               	addwfc	(processarProtocolo@i+1)^0,w,c
  7742   006A92  6EDA               	movwf	fsr2h,c
  7743   006A94  0E2F               	movlw	47
  7744   006A96  64DF               	cpfsgt	indf2,c
  7745   006A98  EF50  F035         	goto	u5721
  7746   006A9C  EF52  F035         	goto	u5720
  7747   006AA0                     u5721:
  7748   006AA0  EF74  F035         	goto	l4844
  7749   006AA4                     u5720:
  7750   006AA4  0EBD               	movlw	low _protocolo
  7751   006AA6  2454               	addwf	processarProtocolo@i^0,w,c
  7752   006AA8  6ED9               	movwf	fsr2l,c
  7753   006AAA  0E00               	movlw	high _protocolo
  7754   006AAC  2055               	addwfc	(processarProtocolo@i+1)^0,w,c
  7755   006AAE  6EDA               	movwf	fsr2h,c
  7756   006AB0  0E3A               	movlw	58
  7757   006AB2  60DF               	cpfslt	indf2,c
  7758   006AB4  EF5E  F035         	goto	u5731
  7759   006AB8  EF60  F035         	goto	u5730
  7760   006ABC                     u5731:
  7761   006ABC  EF74  F035         	goto	l4844
  7762   006AC0                     u5730:
  7763   006AC0                     
  7764                           ;event.c: 117:                             new_value += (protocolo[i] - '0');
  7765   006AC0  0EBD               	movlw	low _protocolo
  7766   006AC2  2454               	addwf	processarProtocolo@i^0,w,c
  7767   006AC4  6ED9               	movwf	fsr2l,c
  7768   006AC6  0E00               	movlw	high _protocolo
  7769   006AC8  2055               	addwfc	(processarProtocolo@i+1)^0,w,c
  7770   006ACA  6EDA               	movwf	fsr2h,c
  7771   006ACC  50DF               	movf	indf2,w,c
  7772   006ACE  6E4F               	movwf	??_processarProtocolo^0,c
  7773   006AD0  0ED0               	movlw	208
  7774   006AD2  244F               	addwf	??_processarProtocolo^0,w,c
  7775   006AD4  6E50               	movwf	(??_processarProtocolo+1)^0,c
  7776   006AD6  6A51               	clrf	(??_processarProtocolo+2)^0,c
  7777   006AD8  0EFF               	movlw	255
  7778   006ADA  2251               	addwfc	(??_processarProtocolo+2)^0,f,c
  7779   006ADC  5050               	movf	(??_processarProtocolo+1)^0,w,c
  7780   006ADE  265C               	addwf	processarProtocolo@new_value^0,f,c
  7781   006AE0  5051               	movf	(??_processarProtocolo+2)^0,w,c
  7782   006AE2  225D               	addwfc	(processarProtocolo@new_value+1)^0,f,c
  7783                           
  7784                           ;event.c: 118:                         }else{
  7785   006AE4  EF7C  F035         	goto	l4848
  7786   006AE8                     l4844:
  7787                           
  7788                           ;event.c: 119:                             serialString("Error: invalid prompt value");
  7789   006AE8  0EA3               	movlw	low STR_1
  7790   006AEA  6E02               	movwf	serialString@msg^0,c
  7791   006AEC  0E7E               	movlw	high STR_1
  7792   006AEE  6E03               	movwf	(serialString@msg+1)^0,c
  7793   006AF0  EC98  F020         	call	_serialString	;wreg free
  7794   006AF4  EF95  F038         	goto	l85
  7795   006AF8                     l4848:
  7796   006AF8  4A54               	infsnz	processarProtocolo@i^0,f,c
  7797   006AFA  2A55               	incf	(processarProtocolo@i+1)^0,f,c
  7798   006AFC                     l4850:
  7799   006AFC  5054               	movf	processarProtocolo@i^0,w,c
  7800   006AFE  0100               	movlb	0	; () banked
  7801   006B00  5DB4               	subwf	_protocolo_index& (0+255),w,b
  7802   006B02  5055               	movf	(processarProtocolo@i+1)^0,w,c
  7803   006B04  59B5               	subwfb	(_protocolo_index+1)& (0+255),w,b
  7804   006B06  B0D8               	btfsc	status,0,c
  7805   006B08  EF88  F035         	goto	u5741
  7806   006B0C  EF8A  F035         	goto	u5740
  7807   006B10                     u5741:
  7808   006B10  EF2D  F035         	goto	l4834
  7809   006B14                     u5740:
  7810   006B14                     
  7811                           ; BSR set to: 0
  7812                           ;event.c: 122:                     if(new_value != 0){
  7813   006B14  505C               	movf	processarProtocolo@new_value^0,w,c
  7814   006B16  105D               	iorwf	(processarProtocolo@new_value+1)^0,w,c
  7815   006B18  B4D8               	btfsc	status,2,c
  7816   006B1A  EF91  F035         	goto	u5751
  7817   006B1E  EF93  F035         	goto	u5750
  7818   006B22                     u5751:
  7819   006B22  EFB5  F035         	goto	l4860
  7820   006B26                     u5750:
  7821   006B26                     
  7822                           ; BSR set to: 0
  7823                           ;event.c: 123:                         if(new_value > 100){
  7824   006B26  BE5D               	btfsc	(processarProtocolo@new_value+1)^0,7,c
  7825   006B28  EF9F  F035         	goto	u5761
  7826   006B2C  505D               	movf	(processarProtocolo@new_value+1)^0,w,c
  7827   006B2E  E109               	bnz	u5760
  7828   006B30  0E65               	movlw	101
  7829   006B32  5C5C               	subwf	processarProtocolo@new_value^0,w,c
  7830   006B34  A0D8               	btfss	status,0,c
  7831   006B36  EF9F  F035         	goto	u5761
  7832   006B3A  EFA1  F035         	goto	u5760
  7833   006B3E                     u5761:
  7834   006B3E  EFA5  F035         	goto	l4858
  7835   006B42                     u5760:
  7836   006B42                     
  7837                           ; BSR set to: 0
  7838                           ;event.c: 124:                             new_value = 100;
  7839   006B42  0E00               	movlw	0
  7840   006B44  6E5D               	movwf	(processarProtocolo@new_value+1)^0,c
  7841   006B46  0E64               	movlw	100
  7842   006B48  6E5C               	movwf	processarProtocolo@new_value^0,c
  7843   006B4A                     l4858:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;event.c: 126:                         setAlarmLevel(0,1, new_value);
  7847   006B4A  0E00               	movlw	0
  7848   006B4C  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  7849   006B4E  0E00               	movlw	0
  7850   006B50  6E3F               	movwf	setAlarmLevel@alarm^0,c
  7851   006B52  0E00               	movlw	0
  7852   006B54  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  7853   006B56  0E01               	movlw	1
  7854   006B58  6E41               	movwf	setAlarmLevel@level^0,c
  7855   006B5A  C05C  F043         	movff	processarProtocolo@new_value,setAlarmLevel@newAlarmLevel
  7856   006B5E  C05D  F044         	movff	processarProtocolo@new_value+1,setAlarmLevel@newAlarmLevel+1
  7857   006B62  EC12  F02B         	call	_setAlarmLevel	;wreg free
  7858                           
  7859                           ;event.c: 127:                     }else{
  7860   006B66  EF86  F038         	goto	l5020
  7861   006B6A                     l4860:
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;event.c: 128:                         serialString("Error: invalid prompt value");
  7865   006B6A  0EA3               	movlw	low STR_1
  7866   006B6C  6E02               	movwf	serialString@msg^0,c
  7867   006B6E  0E7E               	movlw	high STR_1
  7868   006B70  6E03               	movwf	(serialString@msg+1)^0,c
  7869   006B72  EC98  F020         	call	_serialString	;wreg free
  7870   006B76  EF86  F038         	goto	l5020
  7871   006B7A                     l4862:
  7872                           
  7873                           ; BSR set to: 0
  7874   006B7A  0E48               	movlw	72
  7875   006B7C  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  7876   006B7E  B4D8               	btfsc	status,2,c
  7877   006B80  EFC4  F035         	goto	u5771
  7878   006B84  EFC6  F035         	goto	u5770
  7879   006B88                     u5771:
  7880   006B88  EFCF  F035         	goto	l4866
  7881   006B8C                     u5770:
  7882   006B8C                     
  7883                           ; BSR set to: 0
  7884   006B8C  0E68               	movlw	104
  7885   006B8E  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  7886   006B90  A4D8               	btfss	status,2,c
  7887   006B92  EFCD  F035         	goto	u5781
  7888   006B96  EFCF  F035         	goto	u5780
  7889   006B9A                     u5781:
  7890   006B9A  EF77  F036         	goto	l4900
  7891   006B9E                     u5780:
  7892   006B9E                     l4866:
  7893                           
  7894                           ; BSR set to: 0
  7895   006B9E  0E56               	movlw	86
  7896   006BA0  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  7897   006BA2  B4D8               	btfsc	status,2,c
  7898   006BA4  EFD6  F035         	goto	u5791
  7899   006BA8  EFD8  F035         	goto	u5790
  7900   006BAC                     u5791:
  7901   006BAC  EFE1  F035         	goto	l4870
  7902   006BB0                     u5790:
  7903   006BB0                     
  7904                           ; BSR set to: 0
  7905   006BB0  0E76               	movlw	118
  7906   006BB2  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  7907   006BB4  A4D8               	btfss	status,2,c
  7908   006BB6  EFDF  F035         	goto	u5801
  7909   006BBA  EFE1  F035         	goto	u5800
  7910   006BBE                     u5801:
  7911   006BBE  EF77  F036         	goto	l4900
  7912   006BC2                     u5800:
  7913   006BC2                     l4870:
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;event.c: 131:                     for(int i = 9; i <= protocolo_index; i++){
  7917   006BC2  0E00               	movlw	0
  7918   006BC4  6E57               	movwf	(processarProtocolo@i_89+1)^0,c
  7919   006BC6  0E09               	movlw	9
  7920   006BC8  6E56               	movwf	processarProtocolo@i_89^0,c
  7921   006BCA  EF38  F036         	goto	l4888
  7922   006BCE                     l4872:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;event.c: 132:                         if(new_value != 0){
  7926   006BCE  505C               	movf	processarProtocolo@new_value^0,w,c
  7927   006BD0  105D               	iorwf	(processarProtocolo@new_value+1)^0,w,c
  7928   006BD2  B4D8               	btfsc	status,2,c
  7929   006BD4  EFEE  F035         	goto	u5811
  7930   006BD8  EFF0  F035         	goto	u5810
  7931   006BDC                     u5811:
  7932   006BDC  EFFE  F035         	goto	l4876
  7933   006BE0                     u5810:
  7934   006BE0                     
  7935                           ; BSR set to: 0
  7936                           ;event.c: 133:                             new_value *= 10;
  7937   006BE0  C05C  F001         	movff	processarProtocolo@new_value,___wmul@multiplier
  7938   006BE4  C05D  F002         	movff	processarProtocolo@new_value+1,___wmul@multiplier+1
  7939   006BE8  0E00               	movlw	0
  7940   006BEA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7941   006BEC  0E0A               	movlw	10
  7942   006BEE  6E03               	movwf	___wmul@multiplicand^0,c
  7943   006BF0  ECEE  F01C         	call	___wmul	;wreg free
  7944   006BF4  C001  F05C         	movff	?___wmul,processarProtocolo@new_value
  7945   006BF8  C002  F05D         	movff	?___wmul+1,processarProtocolo@new_value+1
  7946   006BFC                     l4876:
  7947                           
  7948                           ;event.c: 135:                         if (protocolo[i]>= '0' && protocolo[i] <= '9') {
  7949   006BFC  0EBD               	movlw	low _protocolo
  7950   006BFE  2456               	addwf	processarProtocolo@i_89^0,w,c
  7951   006C00  6ED9               	movwf	fsr2l,c
  7952   006C02  0E00               	movlw	high _protocolo
  7953   006C04  2057               	addwfc	(processarProtocolo@i_89+1)^0,w,c
  7954   006C06  6EDA               	movwf	fsr2h,c
  7955   006C08  0E2F               	movlw	47
  7956   006C0A  64DF               	cpfsgt	indf2,c
  7957   006C0C  EF0A  F036         	goto	u5821
  7958   006C10  EF0C  F036         	goto	u5820
  7959   006C14                     u5821:
  7960   006C14  EF2E  F036         	goto	l4882
  7961   006C18                     u5820:
  7962   006C18  0EBD               	movlw	low _protocolo
  7963   006C1A  2456               	addwf	processarProtocolo@i_89^0,w,c
  7964   006C1C  6ED9               	movwf	fsr2l,c
  7965   006C1E  0E00               	movlw	high _protocolo
  7966   006C20  2057               	addwfc	(processarProtocolo@i_89+1)^0,w,c
  7967   006C22  6EDA               	movwf	fsr2h,c
  7968   006C24  0E3A               	movlw	58
  7969   006C26  60DF               	cpfslt	indf2,c
  7970   006C28  EF18  F036         	goto	u5831
  7971   006C2C  EF1A  F036         	goto	u5830
  7972   006C30                     u5831:
  7973   006C30  EF2E  F036         	goto	l4882
  7974   006C34                     u5830:
  7975   006C34                     
  7976                           ;event.c: 136:                             new_value += (protocolo[i] - '0');
  7977   006C34  0EBD               	movlw	low _protocolo
  7978   006C36  2456               	addwf	processarProtocolo@i_89^0,w,c
  7979   006C38  6ED9               	movwf	fsr2l,c
  7980   006C3A  0E00               	movlw	high _protocolo
  7981   006C3C  2057               	addwfc	(processarProtocolo@i_89+1)^0,w,c
  7982   006C3E  6EDA               	movwf	fsr2h,c
  7983   006C40  50DF               	movf	indf2,w,c
  7984   006C42  6E4F               	movwf	??_processarProtocolo^0,c
  7985   006C44  0ED0               	movlw	208
  7986   006C46  244F               	addwf	??_processarProtocolo^0,w,c
  7987   006C48  6E50               	movwf	(??_processarProtocolo+1)^0,c
  7988   006C4A  6A51               	clrf	(??_processarProtocolo+2)^0,c
  7989   006C4C  0EFF               	movlw	255
  7990   006C4E  2251               	addwfc	(??_processarProtocolo+2)^0,f,c
  7991   006C50  5050               	movf	(??_processarProtocolo+1)^0,w,c
  7992   006C52  265C               	addwf	processarProtocolo@new_value^0,f,c
  7993   006C54  5051               	movf	(??_processarProtocolo+2)^0,w,c
  7994   006C56  225D               	addwfc	(processarProtocolo@new_value+1)^0,f,c
  7995                           
  7996                           ;event.c: 137:                         }else{
  7997   006C58  EF36  F036         	goto	l4886
  7998   006C5C                     l4882:
  7999                           
  8000                           ;event.c: 138:                             serialString("Error: invalid prompt value");
  8001   006C5C  0EA3               	movlw	low STR_1
  8002   006C5E  6E02               	movwf	serialString@msg^0,c
  8003   006C60  0E7E               	movlw	high STR_1
  8004   006C62  6E03               	movwf	(serialString@msg+1)^0,c
  8005   006C64  EC98  F020         	call	_serialString	;wreg free
  8006   006C68  EF95  F038         	goto	l85
  8007   006C6C                     l4886:
  8008                           
  8009                           ;event.c: 141:                     }
  8010   006C6C  4A56               	infsnz	processarProtocolo@i_89^0,f,c
  8011   006C6E  2A57               	incf	(processarProtocolo@i_89+1)^0,f,c
  8012   006C70                     l4888:
  8013   006C70  5056               	movf	processarProtocolo@i_89^0,w,c
  8014   006C72  0100               	movlb	0	; () banked
  8015   006C74  5DB4               	subwf	_protocolo_index& (0+255),w,b
  8016   006C76  5057               	movf	(processarProtocolo@i_89+1)^0,w,c
  8017   006C78  59B5               	subwfb	(_protocolo_index+1)& (0+255),w,b
  8018   006C7A  B0D8               	btfsc	status,0,c
  8019   006C7C  EF42  F036         	goto	u5841
  8020   006C80  EF44  F036         	goto	u5840
  8021   006C84                     u5841:
  8022   006C84  EFE7  F035         	goto	l4872
  8023   006C88                     u5840:
  8024   006C88                     
  8025                           ; BSR set to: 0
  8026                           ;event.c: 142:                     if(new_value != 0){
  8027   006C88  505C               	movf	processarProtocolo@new_value^0,w,c
  8028   006C8A  105D               	iorwf	(processarProtocolo@new_value+1)^0,w,c
  8029   006C8C  B4D8               	btfsc	status,2,c
  8030   006C8E  EF4B  F036         	goto	u5851
  8031   006C92  EF4D  F036         	goto	u5850
  8032   006C96                     u5851:
  8033   006C96  EF6F  F036         	goto	l4898
  8034   006C9A                     u5850:
  8035   006C9A                     
  8036                           ; BSR set to: 0
  8037                           ;event.c: 143:                         if(new_value > 100){
  8038   006C9A  BE5D               	btfsc	(processarProtocolo@new_value+1)^0,7,c
  8039   006C9C  EF59  F036         	goto	u5861
  8040   006CA0  505D               	movf	(processarProtocolo@new_value+1)^0,w,c
  8041   006CA2  E109               	bnz	u5860
  8042   006CA4  0E65               	movlw	101
  8043   006CA6  5C5C               	subwf	processarProtocolo@new_value^0,w,c
  8044   006CA8  A0D8               	btfss	status,0,c
  8045   006CAA  EF59  F036         	goto	u5861
  8046   006CAE  EF5B  F036         	goto	u5860
  8047   006CB2                     u5861:
  8048   006CB2  EF5F  F036         	goto	l4896
  8049   006CB6                     u5860:
  8050   006CB6                     
  8051                           ; BSR set to: 0
  8052                           ;event.c: 144:                             new_value = 100;
  8053   006CB6  0E00               	movlw	0
  8054   006CB8  6E5D               	movwf	(processarProtocolo@new_value+1)^0,c
  8055   006CBA  0E64               	movlw	100
  8056   006CBC  6E5C               	movwf	processarProtocolo@new_value^0,c
  8057   006CBE                     l4896:
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;event.c: 146:                         setAlarmLevel(0,0, new_value);
  8061   006CBE  0E00               	movlw	0
  8062   006CC0  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  8063   006CC2  0E00               	movlw	0
  8064   006CC4  6E3F               	movwf	setAlarmLevel@alarm^0,c
  8065   006CC6  0E00               	movlw	0
  8066   006CC8  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  8067   006CCA  0E00               	movlw	0
  8068   006CCC  6E41               	movwf	setAlarmLevel@level^0,c
  8069   006CCE  C05C  F043         	movff	processarProtocolo@new_value,setAlarmLevel@newAlarmLevel
  8070   006CD2  C05D  F044         	movff	processarProtocolo@new_value+1,setAlarmLevel@newAlarmLevel+1
  8071   006CD6  EC12  F02B         	call	_setAlarmLevel	;wreg free
  8072                           
  8073                           ;event.c: 147:                     }else{
  8074   006CDA  EF86  F038         	goto	l5020
  8075   006CDE                     l4898:
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;event.c: 148:                         serialString("Error: invalid prompt value");
  8079   006CDE  0EA3               	movlw	low STR_1
  8080   006CE0  6E02               	movwf	serialString@msg^0,c
  8081   006CE2  0E7E               	movlw	high STR_1
  8082   006CE4  6E03               	movwf	(serialString@msg+1)^0,c
  8083   006CE6  EC98  F020         	call	_serialString	;wreg free
  8084   006CEA  EF86  F038         	goto	l5020
  8085   006CEE                     l4900:
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;event.c: 151:                     err = 1;
  8089   006CEE  0E00               	movlw	0
  8090   006CF0  6E53               	movwf	(processarProtocolo@err+1)^0,c
  8091   006CF2  0E01               	movlw	1
  8092   006CF4  6E52               	movwf	processarProtocolo@err^0,c
  8093   006CF6  EF86  F038         	goto	l5020
  8094   006CFA                     l4902:
  8095                           
  8096                           ; BSR set to: 0
  8097   006CFA  0E32               	movlw	50
  8098   006CFC  19C1               	xorwf	(_protocolo+4)& (0+255),w,b
  8099   006CFE  A4D8               	btfss	status,2,c
  8100   006D00  EF84  F036         	goto	u5871
  8101   006D04  EF86  F036         	goto	u5870
  8102   006D08                     u5871:
  8103   006D08  EF77  F036         	goto	l4900
  8104   006D0C                     u5870:
  8105   006D0C                     
  8106                           ; BSR set to: 0
  8107                           ;event.c: 154:                 if((protocolo[6] == 'L' || protocolo[6] == 'l') && (proto
      +                          colo[7] == 'V' || protocolo[7] == 'v')){
  8108   006D0C  0E4C               	movlw	76
  8109   006D0E  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8110   006D10  B4D8               	btfsc	status,2,c
  8111   006D12  EF8D  F036         	goto	u5881
  8112   006D16  EF8F  F036         	goto	u5880
  8113   006D1A                     u5881:
  8114   006D1A  EF98  F036         	goto	l4908
  8115   006D1E                     u5880:
  8116   006D1E                     
  8117                           ; BSR set to: 0
  8118   006D1E  0E6C               	movlw	108
  8119   006D20  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8120   006D22  A4D8               	btfss	status,2,c
  8121   006D24  EF96  F036         	goto	u5891
  8122   006D28  EF98  F036         	goto	u5890
  8123   006D2C                     u5891:
  8124   006D2C  EF40  F037         	goto	l4942
  8125   006D30                     u5890:
  8126   006D30                     l4908:
  8127                           
  8128                           ; BSR set to: 0
  8129   006D30  0E56               	movlw	86
  8130   006D32  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8131   006D34  B4D8               	btfsc	status,2,c
  8132   006D36  EF9F  F036         	goto	u5901
  8133   006D3A  EFA1  F036         	goto	u5900
  8134   006D3E                     u5901:
  8135   006D3E  EFAA  F036         	goto	l4912
  8136   006D42                     u5900:
  8137   006D42                     
  8138                           ; BSR set to: 0
  8139   006D42  0E76               	movlw	118
  8140   006D44  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8141   006D46  A4D8               	btfss	status,2,c
  8142   006D48  EFA8  F036         	goto	u5911
  8143   006D4C  EFAA  F036         	goto	u5910
  8144   006D50                     u5911:
  8145   006D50  EF40  F037         	goto	l4942
  8146   006D54                     u5910:
  8147   006D54                     l4912:
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;event.c: 155:                     for(int i = 9; i <= protocolo_index; i++){
  8151   006D54  0E00               	movlw	0
  8152   006D56  6E59               	movwf	(processarProtocolo@i_92+1)^0,c
  8153   006D58  0E09               	movlw	9
  8154   006D5A  6E58               	movwf	processarProtocolo@i_92^0,c
  8155   006D5C  EF01  F037         	goto	l4930
  8156   006D60                     l4914:
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;event.c: 156:                         if(new_value != 0){
  8160   006D60  505C               	movf	processarProtocolo@new_value^0,w,c
  8161   006D62  105D               	iorwf	(processarProtocolo@new_value+1)^0,w,c
  8162   006D64  B4D8               	btfsc	status,2,c
  8163   006D66  EFB7  F036         	goto	u5921
  8164   006D6A  EFB9  F036         	goto	u5920
  8165   006D6E                     u5921:
  8166   006D6E  EFC7  F036         	goto	l4918
  8167   006D72                     u5920:
  8168   006D72                     
  8169                           ; BSR set to: 0
  8170                           ;event.c: 157:                             new_value *= 10;
  8171   006D72  C05C  F001         	movff	processarProtocolo@new_value,___wmul@multiplier
  8172   006D76  C05D  F002         	movff	processarProtocolo@new_value+1,___wmul@multiplier+1
  8173   006D7A  0E00               	movlw	0
  8174   006D7C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8175   006D7E  0E0A               	movlw	10
  8176   006D80  6E03               	movwf	___wmul@multiplicand^0,c
  8177   006D82  ECEE  F01C         	call	___wmul	;wreg free
  8178   006D86  C001  F05C         	movff	?___wmul,processarProtocolo@new_value
  8179   006D8A  C002  F05D         	movff	?___wmul+1,processarProtocolo@new_value+1
  8180   006D8E                     l4918:
  8181                           
  8182                           ;event.c: 159:                         if (protocolo[i]>= '0' && protocolo[i] <= '9') {
  8183   006D8E  0EBD               	movlw	low _protocolo
  8184   006D90  2458               	addwf	processarProtocolo@i_92^0,w,c
  8185   006D92  6ED9               	movwf	fsr2l,c
  8186   006D94  0E00               	movlw	high _protocolo
  8187   006D96  2059               	addwfc	(processarProtocolo@i_92+1)^0,w,c
  8188   006D98  6EDA               	movwf	fsr2h,c
  8189   006D9A  0E2F               	movlw	47
  8190   006D9C  64DF               	cpfsgt	indf2,c
  8191   006D9E  EFD3  F036         	goto	u5931
  8192   006DA2  EFD5  F036         	goto	u5930
  8193   006DA6                     u5931:
  8194   006DA6  EFF7  F036         	goto	l4924
  8195   006DAA                     u5930:
  8196   006DAA  0EBD               	movlw	low _protocolo
  8197   006DAC  2458               	addwf	processarProtocolo@i_92^0,w,c
  8198   006DAE  6ED9               	movwf	fsr2l,c
  8199   006DB0  0E00               	movlw	high _protocolo
  8200   006DB2  2059               	addwfc	(processarProtocolo@i_92+1)^0,w,c
  8201   006DB4  6EDA               	movwf	fsr2h,c
  8202   006DB6  0E3A               	movlw	58
  8203   006DB8  60DF               	cpfslt	indf2,c
  8204   006DBA  EFE1  F036         	goto	u5941
  8205   006DBE  EFE3  F036         	goto	u5940
  8206   006DC2                     u5941:
  8207   006DC2  EFF7  F036         	goto	l4924
  8208   006DC6                     u5940:
  8209   006DC6                     
  8210                           ;event.c: 160:                             new_value += (protocolo[i] - '0');
  8211   006DC6  0EBD               	movlw	low _protocolo
  8212   006DC8  2458               	addwf	processarProtocolo@i_92^0,w,c
  8213   006DCA  6ED9               	movwf	fsr2l,c
  8214   006DCC  0E00               	movlw	high _protocolo
  8215   006DCE  2059               	addwfc	(processarProtocolo@i_92+1)^0,w,c
  8216   006DD0  6EDA               	movwf	fsr2h,c
  8217   006DD2  50DF               	movf	indf2,w,c
  8218   006DD4  6E4F               	movwf	??_processarProtocolo^0,c
  8219   006DD6  0ED0               	movlw	208
  8220   006DD8  244F               	addwf	??_processarProtocolo^0,w,c
  8221   006DDA  6E50               	movwf	(??_processarProtocolo+1)^0,c
  8222   006DDC  6A51               	clrf	(??_processarProtocolo+2)^0,c
  8223   006DDE  0EFF               	movlw	255
  8224   006DE0  2251               	addwfc	(??_processarProtocolo+2)^0,f,c
  8225   006DE2  5050               	movf	(??_processarProtocolo+1)^0,w,c
  8226   006DE4  265C               	addwf	processarProtocolo@new_value^0,f,c
  8227   006DE6  5051               	movf	(??_processarProtocolo+2)^0,w,c
  8228   006DE8  225D               	addwfc	(processarProtocolo@new_value+1)^0,f,c
  8229                           
  8230                           ;event.c: 161:                         }else{
  8231   006DEA  EFFF  F036         	goto	l4928
  8232   006DEE                     l4924:
  8233                           
  8234                           ;event.c: 162:                             serialString("Error: invalid prompt value");
  8235   006DEE  0EA3               	movlw	low STR_1
  8236   006DF0  6E02               	movwf	serialString@msg^0,c
  8237   006DF2  0E7E               	movlw	high STR_1
  8238   006DF4  6E03               	movwf	(serialString@msg+1)^0,c
  8239   006DF6  EC98  F020         	call	_serialString	;wreg free
  8240   006DFA  EF95  F038         	goto	l85
  8241   006DFE                     l4928:
  8242                           
  8243                           ;event.c: 165:                     }
  8244   006DFE  4A58               	infsnz	processarProtocolo@i_92^0,f,c
  8245   006E00  2A59               	incf	(processarProtocolo@i_92+1)^0,f,c
  8246   006E02                     l4930:
  8247   006E02  5058               	movf	processarProtocolo@i_92^0,w,c
  8248   006E04  0100               	movlb	0	; () banked
  8249   006E06  5DB4               	subwf	_protocolo_index& (0+255),w,b
  8250   006E08  5059               	movf	(processarProtocolo@i_92+1)^0,w,c
  8251   006E0A  59B5               	subwfb	(_protocolo_index+1)& (0+255),w,b
  8252   006E0C  B0D8               	btfsc	status,0,c
  8253   006E0E  EF0B  F037         	goto	u5951
  8254   006E12  EF0D  F037         	goto	u5950
  8255   006E16                     u5951:
  8256   006E16  EFB0  F036         	goto	l4914
  8257   006E1A                     u5950:
  8258   006E1A                     
  8259                           ; BSR set to: 0
  8260                           ;event.c: 167:                     if(new_value != 0){
  8261   006E1A  505C               	movf	processarProtocolo@new_value^0,w,c
  8262   006E1C  105D               	iorwf	(processarProtocolo@new_value+1)^0,w,c
  8263   006E1E  B4D8               	btfsc	status,2,c
  8264   006E20  EF14  F037         	goto	u5961
  8265   006E24  EF16  F037         	goto	u5960
  8266   006E28                     u5961:
  8267   006E28  EF38  F037         	goto	l4940
  8268   006E2C                     u5960:
  8269   006E2C                     
  8270                           ; BSR set to: 0
  8271                           ;event.c: 168:                         if(new_value > 100){
  8272   006E2C  BE5D               	btfsc	(processarProtocolo@new_value+1)^0,7,c
  8273   006E2E  EF22  F037         	goto	u5971
  8274   006E32  505D               	movf	(processarProtocolo@new_value+1)^0,w,c
  8275   006E34  E109               	bnz	u5970
  8276   006E36  0E65               	movlw	101
  8277   006E38  5C5C               	subwf	processarProtocolo@new_value^0,w,c
  8278   006E3A  A0D8               	btfss	status,0,c
  8279   006E3C  EF22  F037         	goto	u5971
  8280   006E40  EF24  F037         	goto	u5970
  8281   006E44                     u5971:
  8282   006E44  EF28  F037         	goto	l4938
  8283   006E48                     u5970:
  8284   006E48                     
  8285                           ; BSR set to: 0
  8286                           ;event.c: 169:                             new_value = 100;
  8287   006E48  0E00               	movlw	0
  8288   006E4A  6E5D               	movwf	(processarProtocolo@new_value+1)^0,c
  8289   006E4C  0E64               	movlw	100
  8290   006E4E  6E5C               	movwf	processarProtocolo@new_value^0,c
  8291   006E50                     l4938:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;event.c: 171:                         setAlarmLevel(1,1, new_value);
  8295   006E50  0E00               	movlw	0
  8296   006E52  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  8297   006E54  0E01               	movlw	1
  8298   006E56  6E3F               	movwf	setAlarmLevel@alarm^0,c
  8299   006E58  0E00               	movlw	0
  8300   006E5A  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  8301   006E5C  0E01               	movlw	1
  8302   006E5E  6E41               	movwf	setAlarmLevel@level^0,c
  8303   006E60  C05C  F043         	movff	processarProtocolo@new_value,setAlarmLevel@newAlarmLevel
  8304   006E64  C05D  F044         	movff	processarProtocolo@new_value+1,setAlarmLevel@newAlarmLevel+1
  8305   006E68  EC12  F02B         	call	_setAlarmLevel	;wreg free
  8306                           
  8307                           ;event.c: 172:                     }else{
  8308   006E6C  EF86  F038         	goto	l5020
  8309   006E70                     l4940:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;event.c: 173:                         serialString("Error: invalid prompt value");
  8313   006E70  0EA3               	movlw	low STR_1
  8314   006E72  6E02               	movwf	serialString@msg^0,c
  8315   006E74  0E7E               	movlw	high STR_1
  8316   006E76  6E03               	movwf	(serialString@msg+1)^0,c
  8317   006E78  EC98  F020         	call	_serialString	;wreg free
  8318   006E7C  EF86  F038         	goto	l5020
  8319   006E80                     l4942:
  8320                           
  8321                           ; BSR set to: 0
  8322   006E80  0E48               	movlw	72
  8323   006E82  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8324   006E84  B4D8               	btfsc	status,2,c
  8325   006E86  EF47  F037         	goto	u5981
  8326   006E8A  EF49  F037         	goto	u5980
  8327   006E8E                     u5981:
  8328   006E8E  EF52  F037         	goto	l4946
  8329   006E92                     u5980:
  8330   006E92                     
  8331                           ; BSR set to: 0
  8332   006E92  0E68               	movlw	104
  8333   006E94  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8334   006E96  A4D8               	btfss	status,2,c
  8335   006E98  EF50  F037         	goto	u5991
  8336   006E9C  EF52  F037         	goto	u5990
  8337   006EA0                     u5991:
  8338   006EA0  EF77  F036         	goto	l4900
  8339   006EA4                     u5990:
  8340   006EA4                     l4946:
  8341                           
  8342                           ; BSR set to: 0
  8343   006EA4  0E56               	movlw	86
  8344   006EA6  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8345   006EA8  B4D8               	btfsc	status,2,c
  8346   006EAA  EF59  F037         	goto	u6001
  8347   006EAE  EF5B  F037         	goto	u6000
  8348   006EB2                     u6001:
  8349   006EB2  EF64  F037         	goto	l4950
  8350   006EB6                     u6000:
  8351   006EB6                     
  8352                           ; BSR set to: 0
  8353   006EB6  0E76               	movlw	118
  8354   006EB8  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8355   006EBA  A4D8               	btfss	status,2,c
  8356   006EBC  EF62  F037         	goto	u6011
  8357   006EC0  EF64  F037         	goto	u6010
  8358   006EC4                     u6011:
  8359   006EC4  EF77  F036         	goto	l4900
  8360   006EC8                     u6010:
  8361   006EC8                     l4950:
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;event.c: 177:                     for(int i = 9; i <= protocolo_index; i++){
  8365   006EC8  0E00               	movlw	0
  8366   006ECA  6E5B               	movwf	(processarProtocolo@i_95+1)^0,c
  8367   006ECC  0E09               	movlw	9
  8368   006ECE  6E5A               	movwf	processarProtocolo@i_95^0,c
  8369   006ED0  EFBB  F037         	goto	l4968
  8370   006ED4                     l4952:
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;event.c: 178:                         if(new_value != 0){
  8374   006ED4  505C               	movf	processarProtocolo@new_value^0,w,c
  8375   006ED6  105D               	iorwf	(processarProtocolo@new_value+1)^0,w,c
  8376   006ED8  B4D8               	btfsc	status,2,c
  8377   006EDA  EF71  F037         	goto	u6021
  8378   006EDE  EF73  F037         	goto	u6020
  8379   006EE2                     u6021:
  8380   006EE2  EF81  F037         	goto	l4956
  8381   006EE6                     u6020:
  8382   006EE6                     
  8383                           ; BSR set to: 0
  8384                           ;event.c: 179:                             new_value *= 10;
  8385   006EE6  C05C  F001         	movff	processarProtocolo@new_value,___wmul@multiplier
  8386   006EEA  C05D  F002         	movff	processarProtocolo@new_value+1,___wmul@multiplier+1
  8387   006EEE  0E00               	movlw	0
  8388   006EF0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8389   006EF2  0E0A               	movlw	10
  8390   006EF4  6E03               	movwf	___wmul@multiplicand^0,c
  8391   006EF6  ECEE  F01C         	call	___wmul	;wreg free
  8392   006EFA  C001  F05C         	movff	?___wmul,processarProtocolo@new_value
  8393   006EFE  C002  F05D         	movff	?___wmul+1,processarProtocolo@new_value+1
  8394   006F02                     l4956:
  8395                           
  8396                           ;event.c: 181:                         if (protocolo[i]>= '0' && protocolo[i] <= '9') {
  8397   006F02  0EBD               	movlw	low _protocolo
  8398   006F04  245A               	addwf	processarProtocolo@i_95^0,w,c
  8399   006F06  6ED9               	movwf	fsr2l,c
  8400   006F08  0E00               	movlw	high _protocolo
  8401   006F0A  205B               	addwfc	(processarProtocolo@i_95+1)^0,w,c
  8402   006F0C  6EDA               	movwf	fsr2h,c
  8403   006F0E  0E2F               	movlw	47
  8404   006F10  64DF               	cpfsgt	indf2,c
  8405   006F12  EF8D  F037         	goto	u6031
  8406   006F16  EF8F  F037         	goto	u6030
  8407   006F1A                     u6031:
  8408   006F1A  EFB1  F037         	goto	l4962
  8409   006F1E                     u6030:
  8410   006F1E  0EBD               	movlw	low _protocolo
  8411   006F20  245A               	addwf	processarProtocolo@i_95^0,w,c
  8412   006F22  6ED9               	movwf	fsr2l,c
  8413   006F24  0E00               	movlw	high _protocolo
  8414   006F26  205B               	addwfc	(processarProtocolo@i_95+1)^0,w,c
  8415   006F28  6EDA               	movwf	fsr2h,c
  8416   006F2A  0E3A               	movlw	58
  8417   006F2C  60DF               	cpfslt	indf2,c
  8418   006F2E  EF9B  F037         	goto	u6041
  8419   006F32  EF9D  F037         	goto	u6040
  8420   006F36                     u6041:
  8421   006F36  EFB1  F037         	goto	l4962
  8422   006F3A                     u6040:
  8423   006F3A                     
  8424                           ;event.c: 182:                             new_value += (protocolo[i] - '0');
  8425   006F3A  0EBD               	movlw	low _protocolo
  8426   006F3C  245A               	addwf	processarProtocolo@i_95^0,w,c
  8427   006F3E  6ED9               	movwf	fsr2l,c
  8428   006F40  0E00               	movlw	high _protocolo
  8429   006F42  205B               	addwfc	(processarProtocolo@i_95+1)^0,w,c
  8430   006F44  6EDA               	movwf	fsr2h,c
  8431   006F46  50DF               	movf	indf2,w,c
  8432   006F48  6E4F               	movwf	??_processarProtocolo^0,c
  8433   006F4A  0ED0               	movlw	208
  8434   006F4C  244F               	addwf	??_processarProtocolo^0,w,c
  8435   006F4E  6E50               	movwf	(??_processarProtocolo+1)^0,c
  8436   006F50  6A51               	clrf	(??_processarProtocolo+2)^0,c
  8437   006F52  0EFF               	movlw	255
  8438   006F54  2251               	addwfc	(??_processarProtocolo+2)^0,f,c
  8439   006F56  5050               	movf	(??_processarProtocolo+1)^0,w,c
  8440   006F58  265C               	addwf	processarProtocolo@new_value^0,f,c
  8441   006F5A  5051               	movf	(??_processarProtocolo+2)^0,w,c
  8442   006F5C  225D               	addwfc	(processarProtocolo@new_value+1)^0,f,c
  8443                           
  8444                           ;event.c: 183:                         }else{
  8445   006F5E  EFB9  F037         	goto	l4966
  8446   006F62                     l4962:
  8447                           
  8448                           ;event.c: 184:                             serialString("Error: invalid prompt value");
  8449   006F62  0EA3               	movlw	low STR_1
  8450   006F64  6E02               	movwf	serialString@msg^0,c
  8451   006F66  0E7E               	movlw	high STR_1
  8452   006F68  6E03               	movwf	(serialString@msg+1)^0,c
  8453   006F6A  EC98  F020         	call	_serialString	;wreg free
  8454   006F6E  EF95  F038         	goto	l85
  8455   006F72                     l4966:
  8456                           
  8457                           ;event.c: 187:                     }
  8458   006F72  4A5A               	infsnz	processarProtocolo@i_95^0,f,c
  8459   006F74  2A5B               	incf	(processarProtocolo@i_95+1)^0,f,c
  8460   006F76                     l4968:
  8461   006F76  505A               	movf	processarProtocolo@i_95^0,w,c
  8462   006F78  0100               	movlb	0	; () banked
  8463   006F7A  5DB4               	subwf	_protocolo_index& (0+255),w,b
  8464   006F7C  505B               	movf	(processarProtocolo@i_95+1)^0,w,c
  8465   006F7E  59B5               	subwfb	(_protocolo_index+1)& (0+255),w,b
  8466   006F80  B0D8               	btfsc	status,0,c
  8467   006F82  EFC5  F037         	goto	u6051
  8468   006F86  EFC7  F037         	goto	u6050
  8469   006F8A                     u6051:
  8470   006F8A  EF6A  F037         	goto	l4952
  8471   006F8E                     u6050:
  8472   006F8E                     
  8473                           ; BSR set to: 0
  8474                           ;event.c: 188:                     if(new_value != 0){
  8475   006F8E  505C               	movf	processarProtocolo@new_value^0,w,c
  8476   006F90  105D               	iorwf	(processarProtocolo@new_value+1)^0,w,c
  8477   006F92  B4D8               	btfsc	status,2,c
  8478   006F94  EFCE  F037         	goto	u6061
  8479   006F98  EFD0  F037         	goto	u6060
  8480   006F9C                     u6061:
  8481   006F9C  EFF2  F037         	goto	l4978
  8482   006FA0                     u6060:
  8483   006FA0                     
  8484                           ; BSR set to: 0
  8485                           ;event.c: 189:                         if(new_value > 100){
  8486   006FA0  BE5D               	btfsc	(processarProtocolo@new_value+1)^0,7,c
  8487   006FA2  EFDC  F037         	goto	u6071
  8488   006FA6  505D               	movf	(processarProtocolo@new_value+1)^0,w,c
  8489   006FA8  E109               	bnz	u6070
  8490   006FAA  0E65               	movlw	101
  8491   006FAC  5C5C               	subwf	processarProtocolo@new_value^0,w,c
  8492   006FAE  A0D8               	btfss	status,0,c
  8493   006FB0  EFDC  F037         	goto	u6071
  8494   006FB4  EFDE  F037         	goto	u6070
  8495   006FB8                     u6071:
  8496   006FB8  EFE2  F037         	goto	l4976
  8497   006FBC                     u6070:
  8498   006FBC                     
  8499                           ; BSR set to: 0
  8500                           ;event.c: 190:                             new_value = 100;
  8501   006FBC  0E00               	movlw	0
  8502   006FBE  6E5D               	movwf	(processarProtocolo@new_value+1)^0,c
  8503   006FC0  0E64               	movlw	100
  8504   006FC2  6E5C               	movwf	processarProtocolo@new_value^0,c
  8505   006FC4                     l4976:
  8506                           
  8507                           ; BSR set to: 0
  8508                           ;event.c: 192:                         setAlarmLevel(1,0, new_value);
  8509   006FC4  0E00               	movlw	0
  8510   006FC6  6E40               	movwf	(setAlarmLevel@alarm+1)^0,c
  8511   006FC8  0E01               	movlw	1
  8512   006FCA  6E3F               	movwf	setAlarmLevel@alarm^0,c
  8513   006FCC  0E00               	movlw	0
  8514   006FCE  6E42               	movwf	(setAlarmLevel@level+1)^0,c
  8515   006FD0  0E00               	movlw	0
  8516   006FD2  6E41               	movwf	setAlarmLevel@level^0,c
  8517   006FD4  C05C  F043         	movff	processarProtocolo@new_value,setAlarmLevel@newAlarmLevel
  8518   006FD8  C05D  F044         	movff	processarProtocolo@new_value+1,setAlarmLevel@newAlarmLevel+1
  8519   006FDC  EC12  F02B         	call	_setAlarmLevel	;wreg free
  8520                           
  8521                           ;event.c: 193:                     }else{
  8522   006FE0  EF86  F038         	goto	l5020
  8523   006FE4                     l4978:
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;event.c: 194:                         serialString("Error: invalid prompt value");
  8527   006FE4  0EA3               	movlw	low STR_1
  8528   006FE6  6E02               	movwf	serialString@msg^0,c
  8529   006FE8  0E7E               	movlw	high STR_1
  8530   006FEA  6E03               	movwf	(serialString@msg+1)^0,c
  8531   006FEC  EC98  F020         	call	_serialString	;wreg free
  8532   006FF0  EF86  F038         	goto	l5020
  8533   006FF4                     l4984:
  8534                           
  8535                           ; BSR set to: 0
  8536   006FF4  0E4C               	movlw	76
  8537   006FF6  19C0               	xorwf	(_protocolo+3)& (0+255),w,b
  8538   006FF8  B4D8               	btfsc	status,2,c
  8539   006FFA  EF01  F038         	goto	u6081
  8540   006FFE  EF03  F038         	goto	u6080
  8541   007002                     u6081:
  8542   007002  EF0C  F038         	goto	l4988
  8543   007006                     u6080:
  8544   007006                     
  8545                           ; BSR set to: 0
  8546   007006  0E6C               	movlw	108
  8547   007008  19C0               	xorwf	(_protocolo+3)& (0+255),w,b
  8548   00700A  A4D8               	btfss	status,2,c
  8549   00700C  EF0A  F038         	goto	u6091
  8550   007010  EF0C  F038         	goto	u6090
  8551   007014                     u6091:
  8552   007014  EF77  F036         	goto	l4900
  8553   007018                     u6090:
  8554   007018                     l4988:
  8555                           
  8556                           ; BSR set to: 0
  8557   007018  0E47               	movlw	71
  8558   00701A  19C1               	xorwf	(_protocolo+4)& (0+255),w,b
  8559   00701C  B4D8               	btfsc	status,2,c
  8560   00701E  EF13  F038         	goto	u6101
  8561   007022  EF15  F038         	goto	u6100
  8562   007026                     u6101:
  8563   007026  EF1E  F038         	goto	l4992
  8564   00702A                     u6100:
  8565   00702A                     
  8566                           ; BSR set to: 0
  8567   00702A  0E67               	movlw	103
  8568   00702C  19C1               	xorwf	(_protocolo+4)& (0+255),w,b
  8569   00702E  A4D8               	btfss	status,2,c
  8570   007030  EF1C  F038         	goto	u6111
  8571   007034  EF1E  F038         	goto	u6110
  8572   007038                     u6111:
  8573   007038  EF77  F036         	goto	l4900
  8574   00703C                     u6110:
  8575   00703C                     l4992:
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;event.c: 203:             if(protocolo[6] == '0' || ((protocolo[6] == 'P' || protocolo[
      +                          7] == 'p') && (protocolo[7] == 'T' || protocolo[7] == 't'))){
  8579   00703C  0E30               	movlw	48
  8580   00703E  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8581   007040  B4D8               	btfsc	status,2,c
  8582   007042  EF25  F038         	goto	u6121
  8583   007046  EF27  F038         	goto	u6120
  8584   00704A                     u6121:
  8585   00704A  EF4B  F038         	goto	l5002
  8586   00704E                     u6120:
  8587   00704E                     
  8588                           ; BSR set to: 0
  8589   00704E  0E50               	movlw	80
  8590   007050  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8591   007052  B4D8               	btfsc	status,2,c
  8592   007054  EF2E  F038         	goto	u6131
  8593   007058  EF30  F038         	goto	u6130
  8594   00705C                     u6131:
  8595   00705C  EF39  F038         	goto	l4998
  8596   007060                     u6130:
  8597   007060                     
  8598                           ; BSR set to: 0
  8599   007060  0E70               	movlw	112
  8600   007062  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8601   007064  A4D8               	btfss	status,2,c
  8602   007066  EF37  F038         	goto	u6141
  8603   00706A  EF39  F038         	goto	u6140
  8604   00706E                     u6141:
  8605   00706E  EF53  F038         	goto	l5004
  8606   007072                     u6140:
  8607   007072                     l4998:
  8608                           
  8609                           ; BSR set to: 0
  8610   007072  0E54               	movlw	84
  8611   007074  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8612   007076  B4D8               	btfsc	status,2,c
  8613   007078  EF40  F038         	goto	u6151
  8614   00707C  EF42  F038         	goto	u6150
  8615   007080                     u6151:
  8616   007080  EF4B  F038         	goto	l5002
  8617   007084                     u6150:
  8618   007084                     
  8619                           ; BSR set to: 0
  8620   007084  0E74               	movlw	116
  8621   007086  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8622   007088  A4D8               	btfss	status,2,c
  8623   00708A  EF49  F038         	goto	u6161
  8624   00708E  EF4B  F038         	goto	u6160
  8625   007092                     u6161:
  8626   007092  EF53  F038         	goto	l5004
  8627   007096                     u6160:
  8628   007096                     l5002:
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;event.c: 204:                 setLanguage(0);
  8632   007096  0E00               	movlw	0
  8633   007098  6E40               	movwf	(setLanguage@newLanguage+1)^0,c
  8634   00709A  0E00               	movlw	0
  8635   00709C  6E3F               	movwf	setLanguage@newLanguage^0,c
  8636   00709E  EC8C  F01C         	call	_setLanguage	;wreg free
  8637                           
  8638                           ;event.c: 205:             }else if(protocolo[6] == '1' || ((protocolo[6] == 'E' || prot
      +                          ocolo[6] == 'e') && (protocolo[7] == 'N' || protocolo[7] == 'n'))){
  8639   0070A2  EF86  F038         	goto	l5020
  8640   0070A6                     l5004:
  8641                           
  8642                           ; BSR set to: 0
  8643   0070A6  0E31               	movlw	49
  8644   0070A8  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8645   0070AA  B4D8               	btfsc	status,2,c
  8646   0070AC  EF5A  F038         	goto	u6171
  8647   0070B0  EF5C  F038         	goto	u6170
  8648   0070B4                     u6171:
  8649   0070B4  EF80  F038         	goto	l5014
  8650   0070B8                     u6170:
  8651   0070B8                     
  8652                           ; BSR set to: 0
  8653   0070B8  0E45               	movlw	69
  8654   0070BA  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8655   0070BC  B4D8               	btfsc	status,2,c
  8656   0070BE  EF63  F038         	goto	u6181
  8657   0070C2  EF65  F038         	goto	u6180
  8658   0070C6                     u6181:
  8659   0070C6  EF6E  F038         	goto	l5010
  8660   0070CA                     u6180:
  8661   0070CA                     
  8662                           ; BSR set to: 0
  8663   0070CA  0E65               	movlw	101
  8664   0070CC  19C3               	xorwf	(_protocolo+6)& (0+255),w,b
  8665   0070CE  A4D8               	btfss	status,2,c
  8666   0070D0  EF6C  F038         	goto	u6191
  8667   0070D4  EF6E  F038         	goto	u6190
  8668   0070D8                     u6191:
  8669   0070D8  EF86  F038         	goto	l5020
  8670   0070DC                     u6190:
  8671   0070DC                     l5010:
  8672                           
  8673                           ; BSR set to: 0
  8674   0070DC  0E4E               	movlw	78
  8675   0070DE  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8676   0070E0  B4D8               	btfsc	status,2,c
  8677   0070E2  EF75  F038         	goto	u6201
  8678   0070E6  EF77  F038         	goto	u6200
  8679   0070EA                     u6201:
  8680   0070EA  EF80  F038         	goto	l5014
  8681   0070EE                     u6200:
  8682   0070EE                     
  8683                           ; BSR set to: 0
  8684   0070EE  0E6E               	movlw	110
  8685   0070F0  19C4               	xorwf	(_protocolo+7)& (0+255),w,b
  8686   0070F2  A4D8               	btfss	status,2,c
  8687   0070F4  EF7E  F038         	goto	u6211
  8688   0070F8  EF80  F038         	goto	u6210
  8689   0070FC                     u6211:
  8690   0070FC  EF86  F038         	goto	l5020
  8691   007100                     u6210:
  8692   007100                     l5014:
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;event.c: 206:                 setLanguage(1);
  8696   007100  0E00               	movlw	0
  8697   007102  6E40               	movwf	(setLanguage@newLanguage+1)^0,c
  8698   007104  0E01               	movlw	1
  8699   007106  6E3F               	movwf	setLanguage@newLanguage^0,c
  8700   007108  EC8C  F01C         	call	_setLanguage	;wreg free
  8701   00710C                     l5020:
  8702                           
  8703                           ;event.c: 215:     if(err == 1){
  8704   00710C  0452               	decf	processarProtocolo@err^0,w,c
  8705   00710E  1053               	iorwf	(processarProtocolo@err+1)^0,w,c
  8706   007110  A4D8               	btfss	status,2,c
  8707   007112  EF8D  F038         	goto	u6221
  8708   007116  EF8F  F038         	goto	u6220
  8709   00711A                     u6221:
  8710   00711A  EF95  F038         	goto	l85
  8711   00711E                     u6220:
  8712   00711E                     
  8713                           ;event.c: 216:         serialString("protocolo invalido | invalid protocol");
  8714   00711E  0E03               	movlw	low STR_9
  8715   007120  6E02               	movwf	serialString@msg^0,c
  8716   007122  0E7E               	movlw	high STR_9
  8717   007124  6E03               	movwf	(serialString@msg+1)^0,c
  8718   007126  EC98  F020         	call	_serialString	;wreg free
  8719   00712A                     l85:
  8720   00712A  0012               	return		;funcret
  8721   00712C                     __end_of_processarProtocolo:
  8722                           	callstack 0
  8723                           
  8724 ;; *************** function _setLanguage *****************
  8725 ;; Defined at:
  8726 ;;		line 136 in file "var.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  newLanguage     2   62[COMRAM] int 
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;		None
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      void 
  8733 ;; Registers used:
  8734 ;;		wreg, status,2, status,0, cstack
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8740 ;;      Params:         2       0       0       0       0       0       0       0       0
  8741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8743 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8744 ;;Total ram usage:        2 bytes
  8745 ;; Hardware stack levels used: 1
  8746 ;; Hardware stack levels required when called: 5
  8747 ;; This function calls:
  8748 ;;		_dsWriteData
  8749 ;; This function is called by:
  8750 ;;		_processarProtocolo
  8751 ;;		_smLoop
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text30
  8756   003918                     __ptext30:
  8757                           	callstack 0
  8758   003918                     _setLanguage:
  8759                           	callstack 24
  8760   003918                     
  8761                           ;var.c: 137:     dsWriteData(newLanguage % 2, 0x30);
  8762   003918  0E00               	movlw	0
  8763   00391A  6E39               	movwf	(dsWriteData@address+1)^0,c
  8764   00391C  0E30               	movlw	48
  8765   00391E  6E38               	movwf	dsWriteData@address^0,c
  8766   003920  503F               	movf	setLanguage@newLanguage^0,w,c
  8767   003922  0B01               	andlw	1
  8768   003924  EC4F  F022         	call	_dsWriteData
  8769   003928  0012               	return		;funcret
  8770   00392A                     __end_of_setLanguage:
  8771                           	callstack 0
  8772                           
  8773 ;; *************** function _setAlarmLevel *****************
  8774 ;; Defined at:
  8775 ;;		line 69 in file "var.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  alarm           2   62[COMRAM] int 
  8778 ;;  level           2   64[COMRAM] int 
  8779 ;;  newAlarmLeve    2   66[COMRAM] int 
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;		None
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  1    wreg      void 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0, cstack
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8791 ;;      Params:         6       0       0       0       0       0       0       0       0
  8792 ;;      Locals:         8       0       0       0       0       0       0       0       0
  8793 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8794 ;;      Totals:        16       0       0       0       0       0       0       0       0
  8795 ;;Total ram usage:       16 bytes
  8796 ;; Hardware stack levels used: 1
  8797 ;; Hardware stack levels required when called: 5
  8798 ;; This function calls:
  8799 ;;		_dsReadData
  8800 ;;		_dsWriteData
  8801 ;; This function is called by:
  8802 ;;		_processarProtocolo
  8803 ;;		_varInit
  8804 ;;		_smLoop
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text31
  8809   005624                     __ptext31:
  8810                           	callstack 0
  8811   005624                     _setAlarmLevel:
  8812                           	callstack 24
  8813   005624                     
  8814                           ;var.c: 70:     switch (alarm) {
  8815   005624  EF54  F02C         	goto	l4538
  8816   005628                     l4480:
  8817                           
  8818                           ;var.c: 74:                     if (newAlarmLevel > dsReadData(0x20)) {
  8819   005628  0E00               	movlw	0
  8820   00562A  6E0F               	movwf	(dsReadData@address+1)^0,c
  8821   00562C  0E20               	movlw	32
  8822   00562E  6E0E               	movwf	dsReadData@address^0,c
  8823   005630  EC48  F01E         	call	_dsReadData	;wreg free
  8824   005634  5043               	movf	setAlarmLevel@newAlarmLevel^0,w,c
  8825   005636  5C0E               	subwf	?_dsReadData^0,w,c
  8826   005638  500F               	movf	(?_dsReadData+1)^0,w,c
  8827   00563A  0A80               	xorlw	128
  8828   00563C  6E45               	movwf	??_setAlarmLevel^0,c
  8829   00563E  5044               	movf	(setAlarmLevel@newAlarmLevel+1)^0,w,c
  8830   005640  0A80               	xorlw	128
  8831   005642  5845               	subwfb	??_setAlarmLevel^0,w,c
  8832   005644  B0D8               	btfsc	status,0,c
  8833   005646  EF27  F02B         	goto	u5231
  8834   00564A  EF29  F02B         	goto	u5230
  8835   00564E                     u5231:
  8836   00564E  EF4A  F02B         	goto	l4490
  8837   005652                     u5230:
  8838   005652                     
  8839                           ;var.c: 75:                         dsWriteData(newAlarmLevel > 100 ? 100 : newAlarmLeve
      +                          l, 0x21);
  8840   005652  BE44               	btfsc	(setAlarmLevel@newAlarmLevel+1)^0,7,c
  8841   005654  EF37  F02B         	goto	u5240
  8842   005658  5044               	movf	(setAlarmLevel@newAlarmLevel+1)^0,w,c
  8843   00565A  E107               	bnz	u5241
  8844   00565C  0E65               	movlw	101
  8845   00565E  5C43               	subwf	setAlarmLevel@newAlarmLevel^0,w,c
  8846   005660  B0D8               	btfsc	status,0,c
  8847   005662  EF35  F02B         	goto	u5241
  8848   005666  EF37  F02B         	goto	u5240
  8849   00566A                     u5241:
  8850   00566A  EF3D  F02B         	goto	l4486
  8851   00566E                     u5240:
  8852   00566E  C043  F047         	movff	setAlarmLevel@newAlarmLevel,_setAlarmLevel$538
  8853   005672  C044  F048         	movff	setAlarmLevel@newAlarmLevel+1,_setAlarmLevel$538+1
  8854   005676  EF41  F02B         	goto	l4488
  8855   00567A                     l4486:
  8856   00567A  0E00               	movlw	0
  8857   00567C  6E48               	movwf	(_setAlarmLevel$538+1)^0,c
  8858   00567E  0E64               	movlw	100
  8859   005680  6E47               	movwf	_setAlarmLevel$538^0,c
  8860   005682                     l4488:
  8861   005682  0E00               	movlw	0
  8862   005684  6E39               	movwf	(dsWriteData@address+1)^0,c
  8863   005686  0E21               	movlw	33
  8864   005688  6E38               	movwf	dsWriteData@address^0,c
  8865   00568A  5047               	movf	_setAlarmLevel$538^0,w,c
  8866   00568C  EC4F  F022         	call	_dsWriteData
  8867                           
  8868                           ;var.c: 76:                     } else {
  8869   005690  EF6A  F02C         	goto	l634
  8870   005694                     l4490:
  8871                           
  8872                           ;var.c: 77:                         dsWriteData(dsReadData(0x20) + 1, 0x21);
  8873   005694  0E00               	movlw	0
  8874   005696  6E39               	movwf	(dsWriteData@address+1)^0,c
  8875   005698  0E21               	movlw	33
  8876   00569A  6E38               	movwf	dsWriteData@address^0,c
  8877   00569C  0E00               	movlw	0
  8878   00569E  6E0F               	movwf	(dsReadData@address+1)^0,c
  8879   0056A0  0E20               	movlw	32
  8880   0056A2  6E0E               	movwf	dsReadData@address^0,c
  8881   0056A4  EC48  F01E         	call	_dsReadData	;wreg free
  8882   0056A8  280E               	incf	?_dsReadData^0,w,c
  8883   0056AA  EC4F  F022         	call	_dsWriteData
  8884   0056AE  EF6A  F02C         	goto	l634
  8885   0056B2                     l4492:
  8886                           
  8887                           ;var.c: 81:                     if (newAlarmLevel < dsReadData(0x21)) {
  8888   0056B2  0E00               	movlw	0
  8889   0056B4  6E0F               	movwf	(dsReadData@address+1)^0,c
  8890   0056B6  0E21               	movlw	33
  8891   0056B8  6E0E               	movwf	dsReadData@address^0,c
  8892   0056BA  EC48  F01E         	call	_dsReadData	;wreg free
  8893   0056BE  500E               	movf	?_dsReadData^0,w,c
  8894   0056C0  5C43               	subwf	setAlarmLevel@newAlarmLevel^0,w,c
  8895   0056C2  5044               	movf	(setAlarmLevel@newAlarmLevel+1)^0,w,c
  8896   0056C4  0A80               	xorlw	128
  8897   0056C6  6E45               	movwf	??_setAlarmLevel^0,c
  8898   0056C8  500F               	movf	(?_dsReadData+1)^0,w,c
  8899   0056CA  0A80               	xorlw	128
  8900   0056CC  5845               	subwfb	??_setAlarmLevel^0,w,c
  8901   0056CE  B0D8               	btfsc	status,0,c
  8902   0056D0  EF6C  F02B         	goto	u5251
  8903   0056D4  EF6E  F02B         	goto	u5250
  8904   0056D8                     u5251:
  8905   0056D8  EF8F  F02B         	goto	l4502
  8906   0056DC                     u5250:
  8907   0056DC                     
  8908                           ;var.c: 82:                         dsWriteData(newAlarmLevel > 99 ? 99 : newAlarmLevel,
      +                           0x20);
  8909   0056DC  BE44               	btfsc	(setAlarmLevel@newAlarmLevel+1)^0,7,c
  8910   0056DE  EF7C  F02B         	goto	u5260
  8911   0056E2  5044               	movf	(setAlarmLevel@newAlarmLevel+1)^0,w,c
  8912   0056E4  E107               	bnz	u5261
  8913   0056E6  0E64               	movlw	100
  8914   0056E8  5C43               	subwf	setAlarmLevel@newAlarmLevel^0,w,c
  8915   0056EA  B0D8               	btfsc	status,0,c
  8916   0056EC  EF7A  F02B         	goto	u5261
  8917   0056F0  EF7C  F02B         	goto	u5260
  8918   0056F4                     u5261:
  8919   0056F4  EF82  F02B         	goto	l4498
  8920   0056F8                     u5260:
  8921   0056F8  C043  F049         	movff	setAlarmLevel@newAlarmLevel,_setAlarmLevel$539
  8922   0056FC  C044  F04A         	movff	setAlarmLevel@newAlarmLevel+1,_setAlarmLevel$539+1
  8923   005700  EF86  F02B         	goto	l4500
  8924   005704                     l4498:
  8925   005704  0E00               	movlw	0
  8926   005706  6E4A               	movwf	(_setAlarmLevel$539+1)^0,c
  8927   005708  0E63               	movlw	99
  8928   00570A  6E49               	movwf	_setAlarmLevel$539^0,c
  8929   00570C                     l4500:
  8930   00570C  0E00               	movlw	0
  8931   00570E  6E39               	movwf	(dsWriteData@address+1)^0,c
  8932   005710  0E20               	movlw	32
  8933   005712  6E38               	movwf	dsWriteData@address^0,c
  8934   005714  5049               	movf	_setAlarmLevel$539^0,w,c
  8935   005716  EC4F  F022         	call	_dsWriteData
  8936                           
  8937                           ;var.c: 83:                     } else {
  8938   00571A  EF6A  F02C         	goto	l634
  8939   00571E                     l4502:
  8940                           
  8941                           ;var.c: 84:                         dsWriteData(dsReadData(0x21) - 1, 0x20);
  8942   00571E  0E00               	movlw	0
  8943   005720  6E39               	movwf	(dsWriteData@address+1)^0,c
  8944   005722  0E20               	movlw	32
  8945   005724  6E38               	movwf	dsWriteData@address^0,c
  8946   005726  0E00               	movlw	0
  8947   005728  6E0F               	movwf	(dsReadData@address+1)^0,c
  8948   00572A  0E21               	movlw	33
  8949   00572C  6E0E               	movwf	dsReadData@address^0,c
  8950   00572E  EC48  F01E         	call	_dsReadData	;wreg free
  8951   005732  040E               	decf	?_dsReadData^0,w,c
  8952   005734  EC4F  F022         	call	_dsWriteData
  8953   005738  EF6A  F02C         	goto	l634
  8954   00573C                     l4506:
  8955   00573C  C041  F045         	movff	setAlarmLevel@level,??_setAlarmLevel
  8956   005740  C042  F046         	movff	setAlarmLevel@level+1,??_setAlarmLevel+1
  8957                           
  8958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8959                           ; Switch size 1, requested type "simple"
  8960                           ; Number of cases is 1, Range of values is 0 to 0
  8961                           ; switch strategies available:
  8962                           ; Name         Instructions Cycles
  8963                           ; simple_byte            4     3 (average)
  8964                           ;	Chosen strategy is simple_byte
  8965   005744  5046               	movf	(??_setAlarmLevel+1)^0,w,c
  8966   005746  0A00               	xorlw	0	; case 0
  8967   005748  B4D8               	btfsc	status,2,c
  8968   00574A  EFA9  F02B         	goto	l5958
  8969   00574E  EF6A  F02C         	goto	l634
  8970   005752                     l5958:
  8971                           
  8972                           ; Switch size 1, requested type "simple"
  8973                           ; Number of cases is 2, Range of values is 0 to 1
  8974                           ; switch strategies available:
  8975                           ; Name         Instructions Cycles
  8976                           ; simple_byte            7     4 (average)
  8977                           ;	Chosen strategy is simple_byte
  8978   005752  5045               	movf	??_setAlarmLevel^0,w,c
  8979   005754  0A00               	xorlw	0	; case 0
  8980   005756  B4D8               	btfsc	status,2,c
  8981   005758  EF14  F02B         	goto	l4480
  8982   00575C  0A01               	xorlw	1	; case 1
  8983   00575E  B4D8               	btfsc	status,2,c
  8984   005760  EF59  F02B         	goto	l4492
  8985   005764  EF6A  F02C         	goto	l634
  8986   005768                     l4508:
  8987                           
  8988                           ;var.c: 94:                     if (newAlarmLevel > dsReadData(0x22)) {
  8989   005768  0E00               	movlw	0
  8990   00576A  6E0F               	movwf	(dsReadData@address+1)^0,c
  8991   00576C  0E22               	movlw	34
  8992   00576E  6E0E               	movwf	dsReadData@address^0,c
  8993   005770  EC48  F01E         	call	_dsReadData	;wreg free
  8994   005774  5043               	movf	setAlarmLevel@newAlarmLevel^0,w,c
  8995   005776  5C0E               	subwf	?_dsReadData^0,w,c
  8996   005778  500F               	movf	(?_dsReadData+1)^0,w,c
  8997   00577A  0A80               	xorlw	128
  8998   00577C  6E45               	movwf	??_setAlarmLevel^0,c
  8999   00577E  5044               	movf	(setAlarmLevel@newAlarmLevel+1)^0,w,c
  9000   005780  0A80               	xorlw	128
  9001   005782  5845               	subwfb	??_setAlarmLevel^0,w,c
  9002   005784  B0D8               	btfsc	status,0,c
  9003   005786  EFC7  F02B         	goto	u5271
  9004   00578A  EFC9  F02B         	goto	u5270
  9005   00578E                     u5271:
  9006   00578E  EFEA  F02B         	goto	l4518
  9007   005792                     u5270:
  9008   005792                     
  9009                           ;var.c: 95:                         dsWriteData(newAlarmLevel > 100 ? 100 : newAlarmLeve
      +                          l, 0x23);
  9010   005792  BE44               	btfsc	(setAlarmLevel@newAlarmLevel+1)^0,7,c
  9011   005794  EFD7  F02B         	goto	u5280
  9012   005798  5044               	movf	(setAlarmLevel@newAlarmLevel+1)^0,w,c
  9013   00579A  E107               	bnz	u5281
  9014   00579C  0E65               	movlw	101
  9015   00579E  5C43               	subwf	setAlarmLevel@newAlarmLevel^0,w,c
  9016   0057A0  B0D8               	btfsc	status,0,c
  9017   0057A2  EFD5  F02B         	goto	u5281
  9018   0057A6  EFD7  F02B         	goto	u5280
  9019   0057AA                     u5281:
  9020   0057AA  EFDD  F02B         	goto	l4514
  9021   0057AE                     u5280:
  9022   0057AE  C043  F04B         	movff	setAlarmLevel@newAlarmLevel,_setAlarmLevel$540
  9023   0057B2  C044  F04C         	movff	setAlarmLevel@newAlarmLevel+1,_setAlarmLevel$540+1
  9024   0057B6  EFE1  F02B         	goto	l4516
  9025   0057BA                     l4514:
  9026   0057BA  0E00               	movlw	0
  9027   0057BC  6E4C               	movwf	(_setAlarmLevel$540+1)^0,c
  9028   0057BE  0E64               	movlw	100
  9029   0057C0  6E4B               	movwf	_setAlarmLevel$540^0,c
  9030   0057C2                     l4516:
  9031   0057C2  0E00               	movlw	0
  9032   0057C4  6E39               	movwf	(dsWriteData@address+1)^0,c
  9033   0057C6  0E23               	movlw	35
  9034   0057C8  6E38               	movwf	dsWriteData@address^0,c
  9035   0057CA  504B               	movf	_setAlarmLevel$540^0,w,c
  9036   0057CC  EC4F  F022         	call	_dsWriteData
  9037                           
  9038                           ;var.c: 96:                     } else {
  9039   0057D0  EF6A  F02C         	goto	l634
  9040   0057D4                     l4518:
  9041                           
  9042                           ;var.c: 97:                         dsWriteData(dsReadData(0x22) + 1, 0x23);
  9043   0057D4  0E00               	movlw	0
  9044   0057D6  6E39               	movwf	(dsWriteData@address+1)^0,c
  9045   0057D8  0E23               	movlw	35
  9046   0057DA  6E38               	movwf	dsWriteData@address^0,c
  9047   0057DC  0E00               	movlw	0
  9048   0057DE  6E0F               	movwf	(dsReadData@address+1)^0,c
  9049   0057E0  0E22               	movlw	34
  9050   0057E2  6E0E               	movwf	dsReadData@address^0,c
  9051   0057E4  EC48  F01E         	call	_dsReadData	;wreg free
  9052   0057E8  280E               	incf	?_dsReadData^0,w,c
  9053   0057EA  EC4F  F022         	call	_dsWriteData
  9054   0057EE  EF6A  F02C         	goto	l634
  9055   0057F2                     l4520:
  9056                           
  9057                           ;var.c: 101:                     if (newAlarmLevel < dsReadData(0x23)) {
  9058   0057F2  0E00               	movlw	0
  9059   0057F4  6E0F               	movwf	(dsReadData@address+1)^0,c
  9060   0057F6  0E23               	movlw	35
  9061   0057F8  6E0E               	movwf	dsReadData@address^0,c
  9062   0057FA  EC48  F01E         	call	_dsReadData	;wreg free
  9063   0057FE  500E               	movf	?_dsReadData^0,w,c
  9064   005800  5C43               	subwf	setAlarmLevel@newAlarmLevel^0,w,c
  9065   005802  5044               	movf	(setAlarmLevel@newAlarmLevel+1)^0,w,c
  9066   005804  0A80               	xorlw	128
  9067   005806  6E45               	movwf	??_setAlarmLevel^0,c
  9068   005808  500F               	movf	(?_dsReadData+1)^0,w,c
  9069   00580A  0A80               	xorlw	128
  9070   00580C  5845               	subwfb	??_setAlarmLevel^0,w,c
  9071   00580E  B0D8               	btfsc	status,0,c
  9072   005810  EF0C  F02C         	goto	u5291
  9073   005814  EF0E  F02C         	goto	u5290
  9074   005818                     u5291:
  9075   005818  EF2F  F02C         	goto	l4530
  9076   00581C                     u5290:
  9077   00581C                     
  9078                           ;var.c: 102:                         dsWriteData(newAlarmLevel > 99 ? 99 : newAlarmLevel
      +                          , 0x22);
  9079   00581C  BE44               	btfsc	(setAlarmLevel@newAlarmLevel+1)^0,7,c
  9080   00581E  EF1C  F02C         	goto	u5300
  9081   005822  5044               	movf	(setAlarmLevel@newAlarmLevel+1)^0,w,c
  9082   005824  E107               	bnz	u5301
  9083   005826  0E64               	movlw	100
  9084   005828  5C43               	subwf	setAlarmLevel@newAlarmLevel^0,w,c
  9085   00582A  B0D8               	btfsc	status,0,c
  9086   00582C  EF1A  F02C         	goto	u5301
  9087   005830  EF1C  F02C         	goto	u5300
  9088   005834                     u5301:
  9089   005834  EF22  F02C         	goto	l4526
  9090   005838                     u5300:
  9091   005838  C043  F04D         	movff	setAlarmLevel@newAlarmLevel,_setAlarmLevel$541
  9092   00583C  C044  F04E         	movff	setAlarmLevel@newAlarmLevel+1,_setAlarmLevel$541+1
  9093   005840  EF26  F02C         	goto	l4528
  9094   005844                     l4526:
  9095   005844  0E00               	movlw	0
  9096   005846  6E4E               	movwf	(_setAlarmLevel$541+1)^0,c
  9097   005848  0E63               	movlw	99
  9098   00584A  6E4D               	movwf	_setAlarmLevel$541^0,c
  9099   00584C                     l4528:
  9100   00584C  0E00               	movlw	0
  9101   00584E  6E39               	movwf	(dsWriteData@address+1)^0,c
  9102   005850  0E22               	movlw	34
  9103   005852  6E38               	movwf	dsWriteData@address^0,c
  9104   005854  504D               	movf	_setAlarmLevel$541^0,w,c
  9105   005856  EC4F  F022         	call	_dsWriteData
  9106                           
  9107                           ;var.c: 103:                     } else {
  9108   00585A  EF6A  F02C         	goto	l634
  9109   00585E                     l4530:
  9110                           
  9111                           ;var.c: 104:                         dsWriteData(dsReadData(0x23) - 1, 0x22);
  9112   00585E  0E00               	movlw	0
  9113   005860  6E39               	movwf	(dsWriteData@address+1)^0,c
  9114   005862  0E22               	movlw	34
  9115   005864  6E38               	movwf	dsWriteData@address^0,c
  9116   005866  0E00               	movlw	0
  9117   005868  6E0F               	movwf	(dsReadData@address+1)^0,c
  9118   00586A  0E23               	movlw	35
  9119   00586C  6E0E               	movwf	dsReadData@address^0,c
  9120   00586E  EC48  F01E         	call	_dsReadData	;wreg free
  9121   005872  040E               	decf	?_dsReadData^0,w,c
  9122   005874  EC4F  F022         	call	_dsWriteData
  9123   005878  EF6A  F02C         	goto	l634
  9124   00587C                     l4534:
  9125   00587C  C041  F045         	movff	setAlarmLevel@level,??_setAlarmLevel
  9126   005880  C042  F046         	movff	setAlarmLevel@level+1,??_setAlarmLevel+1
  9127                           
  9128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9129                           ; Switch size 1, requested type "simple"
  9130                           ; Number of cases is 1, Range of values is 0 to 0
  9131                           ; switch strategies available:
  9132                           ; Name         Instructions Cycles
  9133                           ; simple_byte            4     3 (average)
  9134                           ;	Chosen strategy is simple_byte
  9135   005884  5046               	movf	(??_setAlarmLevel+1)^0,w,c
  9136   005886  0A00               	xorlw	0	; case 0
  9137   005888  B4D8               	btfsc	status,2,c
  9138   00588A  EF49  F02C         	goto	l5960
  9139   00588E  EF6A  F02C         	goto	l634
  9140   005892                     l5960:
  9141                           
  9142                           ; Switch size 1, requested type "simple"
  9143                           ; Number of cases is 2, Range of values is 0 to 1
  9144                           ; switch strategies available:
  9145                           ; Name         Instructions Cycles
  9146                           ; simple_byte            7     4 (average)
  9147                           ;	Chosen strategy is simple_byte
  9148   005892  5045               	movf	??_setAlarmLevel^0,w,c
  9149   005894  0A00               	xorlw	0	; case 0
  9150   005896  B4D8               	btfsc	status,2,c
  9151   005898  EFB4  F02B         	goto	l4508
  9152   00589C  0A01               	xorlw	1	; case 1
  9153   00589E  B4D8               	btfsc	status,2,c
  9154   0058A0  EFF9  F02B         	goto	l4520
  9155   0058A4  EF6A  F02C         	goto	l634
  9156   0058A8                     l4538:
  9157   0058A8  C03F  F045         	movff	setAlarmLevel@alarm,??_setAlarmLevel
  9158   0058AC  C040  F046         	movff	setAlarmLevel@alarm+1,??_setAlarmLevel+1
  9159                           
  9160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9161                           ; Switch size 1, requested type "simple"
  9162                           ; Number of cases is 1, Range of values is 0 to 0
  9163                           ; switch strategies available:
  9164                           ; Name         Instructions Cycles
  9165                           ; simple_byte            4     3 (average)
  9166                           ;	Chosen strategy is simple_byte
  9167   0058B0  5046               	movf	(??_setAlarmLevel+1)^0,w,c
  9168   0058B2  0A00               	xorlw	0	; case 0
  9169   0058B4  B4D8               	btfsc	status,2,c
  9170   0058B6  EF5F  F02C         	goto	l5962
  9171   0058BA  EF6A  F02C         	goto	l634
  9172   0058BE                     l5962:
  9173                           
  9174                           ; Switch size 1, requested type "simple"
  9175                           ; Number of cases is 2, Range of values is 0 to 1
  9176                           ; switch strategies available:
  9177                           ; Name         Instructions Cycles
  9178                           ; simple_byte            7     4 (average)
  9179                           ;	Chosen strategy is simple_byte
  9180   0058BE  5045               	movf	??_setAlarmLevel^0,w,c
  9181   0058C0  0A00               	xorlw	0	; case 0
  9182   0058C2  B4D8               	btfsc	status,2,c
  9183   0058C4  EF9E  F02B         	goto	l4506
  9184   0058C8  0A01               	xorlw	1	; case 1
  9185   0058CA  B4D8               	btfsc	status,2,c
  9186   0058CC  EF3E  F02C         	goto	l4534
  9187   0058D0  EF6A  F02C         	goto	l634
  9188   0058D4                     l634:
  9189   0058D4  0012               	return		;funcret
  9190   0058D6                     __end_of_setAlarmLevel:
  9191                           	callstack 0
  9192                           
  9193 ;; *************** function _dsWriteData *****************
  9194 ;; Defined at:
  9195 ;;		line 24 in file "rtc.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  value           1    wreg     unsigned char 
  9198 ;;  address         2   55[COMRAM] int 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  value           1   57[COMRAM] unsigned char 
  9201 ;;  i               4   58[COMRAM] float 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9211 ;;      Params:         2       0       0       0       0       0       0       0       0
  9212 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9214 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9215 ;;Total ram usage:        7 bytes
  9216 ;; Hardware stack levels used: 1
  9217 ;; Hardware stack levels required when called: 4
  9218 ;; This function calls:
  9219 ;;		___fladd
  9220 ;;		___flge
  9221 ;;		_i2cWriteByte
  9222 ;; This function is called by:
  9223 ;;		_setAlarmLevel
  9224 ;;		_setLanguage
  9225 ;;		_dsStartClock
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           	psect	text32
  9230   00449E                     __ptext32:
  9231                           	callstack 0
  9232   00449E                     _dsWriteData:
  9233                           	callstack 24
  9234                           
  9235                           ;incstack = 0
  9236                           ;dsWriteData@value stored from wreg
  9237   00449E  6E3A               	movwf	dsWriteData@value^0,c
  9238   0044A0                     
  9239                           ;rtc.c: 25:  i2cWriteByte(1,0, 0xde);
  9240   0044A0  0E00               	movlw	0
  9241   0044A2  6E08               	movwf	i2cWriteByte@send_stop^0,c
  9242   0044A4  0EDE               	movlw	222
  9243   0044A6  6E09               	movwf	i2cWriteByte@byte^0,c
  9244   0044A8  0E01               	movlw	1
  9245   0044AA  EC88  F01F         	call	_i2cWriteByte
  9246                           
  9247                           ;rtc.c: 26:  i2cWriteByte(0,0,address);
  9248   0044AE  0E00               	movlw	0
  9249   0044B0  6E08               	movwf	i2cWriteByte@send_stop^0,c
  9250   0044B2  C038  F009         	movff	dsWriteData@address,i2cWriteByte@byte
  9251   0044B6  0E00               	movlw	0
  9252   0044B8  EC88  F01F         	call	_i2cWriteByte
  9253                           
  9254                           ;rtc.c: 27:  i2cWriteByte(0,1,value);
  9255   0044BC  0E01               	movlw	1
  9256   0044BE  6E08               	movwf	i2cWriteByte@send_stop^0,c
  9257   0044C0  C03A  F009         	movff	dsWriteData@value,i2cWriteByte@byte
  9258   0044C4  0E00               	movlw	0
  9259   0044C6  EC88  F01F         	call	_i2cWriteByte
  9260                           
  9261                           ;rtc.c: 28:     for(float i; i<100;i++);
  9262   0044CA  C03B  F001         	movff	dsWriteData@i,___flge@ff1
  9263   0044CE  C03C  F002         	movff	dsWriteData@i+1,___flge@ff1+1
  9264   0044D2  C03D  F003         	movff	dsWriteData@i+2,___flge@ff1+2
  9265   0044D6  C03E  F004         	movff	dsWriteData@i+3,___flge@ff1+3
  9266   0044DA  0E00               	movlw	0
  9267   0044DC  6E05               	movwf	___flge@ff2^0,c
  9268   0044DE  0E00               	movlw	0
  9269   0044E0  6E06               	movwf	(___flge@ff2+1)^0,c
  9270   0044E2  0EC8               	movlw	200
  9271   0044E4  6E07               	movwf	(___flge@ff2+2)^0,c
  9272   0044E6  0E42               	movlw	66
  9273   0044E8  6E08               	movwf	(___flge@ff2+3)^0,c
  9274   0044EA  ECFB  F023         	call	___flge	;wreg free
  9275   0044EE  A0D8               	btfss	status,0,c
  9276   0044F0  EF7C  F022         	goto	u5181
  9277   0044F4  EF7E  F022         	goto	u5180
  9278   0044F8                     u5181:
  9279   0044F8  EF80  F022         	goto	l4468
  9280   0044FC                     u5180:
  9281   0044FC  EFB3  F022         	goto	l843
  9282   004500                     l4468:
  9283   004500  C03B  F028         	movff	dsWriteData@i,___fladd@b
  9284   004504  C03C  F029         	movff	dsWriteData@i+1,___fladd@b+1
  9285   004508  C03D  F02A         	movff	dsWriteData@i+2,___fladd@b+2
  9286   00450C  C03E  F02B         	movff	dsWriteData@i+3,___fladd@b+3
  9287   004510  0E00               	movlw	0
  9288   004512  6E2C               	movwf	___fladd@a^0,c
  9289   004514  0E00               	movlw	0
  9290   004516  6E2D               	movwf	(___fladd@a+1)^0,c
  9291   004518  0E80               	movlw	128
  9292   00451A  6E2E               	movwf	(___fladd@a+2)^0,c
  9293   00451C  0E3F               	movlw	63
  9294   00451E  6E2F               	movwf	(___fladd@a+3)^0,c
  9295   004520  EC96  F02F         	call	___fladd	;wreg free
  9296   004524  C028  F03B         	movff	?___fladd,dsWriteData@i
  9297   004528  C029  F03C         	movff	?___fladd+1,dsWriteData@i+1
  9298   00452C  C02A  F03D         	movff	?___fladd+2,dsWriteData@i+2
  9299   004530  C02B  F03E         	movff	?___fladd+3,dsWriteData@i+3
  9300   004534  C03B  F001         	movff	dsWriteData@i,___flge@ff1
  9301   004538  C03C  F002         	movff	dsWriteData@i+1,___flge@ff1+1
  9302   00453C  C03D  F003         	movff	dsWriteData@i+2,___flge@ff1+2
  9303   004540  C03E  F004         	movff	dsWriteData@i+3,___flge@ff1+3
  9304   004544  0E00               	movlw	0
  9305   004546  6E05               	movwf	___flge@ff2^0,c
  9306   004548  0E00               	movlw	0
  9307   00454A  6E06               	movwf	(___flge@ff2+1)^0,c
  9308   00454C  0EC8               	movlw	200
  9309   00454E  6E07               	movwf	(___flge@ff2+2)^0,c
  9310   004550  0E42               	movlw	66
  9311   004552  6E08               	movwf	(___flge@ff2+3)^0,c
  9312   004554  ECFB  F023         	call	___flge	;wreg free
  9313   004558  A0D8               	btfss	status,0,c
  9314   00455A  EFB1  F022         	goto	u5191
  9315   00455E  EFB3  F022         	goto	u5190
  9316   004562                     u5191:
  9317   004562  EF80  F022         	goto	l4468
  9318   004566                     u5190:
  9319   004566                     l843:
  9320   004566  0012               	return		;funcret
  9321   004568                     __end_of_dsWriteData:
  9322                           	callstack 0
  9323                           
  9324 ;; *************** function ___flge *****************
  9325 ;; Defined at:
  9326 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  ff1             4    0[COMRAM] void 
  9329 ;;  ff2             4    4[COMRAM] void 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;		None
  9332 ;; Return value:  Size  Location     Type
  9333 ;;		None               void
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9341 ;;      Params:         8       0       0       0       0       0       0       0       0
  9342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9343 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9344 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9345 ;;Total ram usage:       12 bytes
  9346 ;; Hardware stack levels used: 1
  9347 ;; This function calls:
  9348 ;;		Nothing
  9349 ;; This function is called by:
  9350 ;;		_dsWriteData
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           	psect	text33
  9355   0047F6                     __ptext33:
  9356                           	callstack 0
  9357   0047F6                     ___flge:
  9358                           	callstack 27
  9359   0047F6  0E00               	movlw	0
  9360   0047F8  1401               	andwf	___flge@ff1^0,w,c
  9361   0047FA  6E09               	movwf	??___flge^0,c
  9362   0047FC  0E00               	movlw	0
  9363   0047FE  1402               	andwf	(___flge@ff1+1)^0,w,c
  9364   004800  6E0A               	movwf	(??___flge+1)^0,c
  9365   004802  0E80               	movlw	128
  9366   004804  1403               	andwf	(___flge@ff1+2)^0,w,c
  9367   004806  6E0B               	movwf	(??___flge+2)^0,c
  9368   004808  0E7F               	movlw	127
  9369   00480A  1404               	andwf	(___flge@ff1+3)^0,w,c
  9370   00480C  6E0C               	movwf	(??___flge+3)^0,c
  9371   00480E  5009               	movf	??___flge^0,w,c
  9372   004810  100A               	iorwf	(??___flge+1)^0,w,c
  9373   004812  100B               	iorwf	(??___flge+2)^0,w,c
  9374   004814  100C               	iorwf	(??___flge+3)^0,w,c
  9375   004816  A4D8               	btfss	status,2,c
  9376   004818  EF10  F024         	goto	u4841
  9377   00481C  EF12  F024         	goto	u4840
  9378   004820                     u4841:
  9379   004820  EF1A  F024         	goto	l4290
  9380   004824                     u4840:
  9381   004824  0E00               	movlw	0
  9382   004826  6E01               	movwf	___flge@ff1^0,c
  9383   004828  0E00               	movlw	0
  9384   00482A  6E02               	movwf	(___flge@ff1+1)^0,c
  9385   00482C  0E00               	movlw	0
  9386   00482E  6E03               	movwf	(___flge@ff1+2)^0,c
  9387   004830  0E00               	movlw	0
  9388   004832  6E04               	movwf	(___flge@ff1+3)^0,c
  9389   004834                     l4290:
  9390   004834  0E00               	movlw	0
  9391   004836  1405               	andwf	___flge@ff2^0,w,c
  9392   004838  6E09               	movwf	??___flge^0,c
  9393   00483A  0E00               	movlw	0
  9394   00483C  1406               	andwf	(___flge@ff2+1)^0,w,c
  9395   00483E  6E0A               	movwf	(??___flge+1)^0,c
  9396   004840  0E80               	movlw	128
  9397   004842  1407               	andwf	(___flge@ff2+2)^0,w,c
  9398   004844  6E0B               	movwf	(??___flge+2)^0,c
  9399   004846  0E7F               	movlw	127
  9400   004848  1408               	andwf	(___flge@ff2+3)^0,w,c
  9401   00484A  6E0C               	movwf	(??___flge+3)^0,c
  9402   00484C  5009               	movf	??___flge^0,w,c
  9403   00484E  100A               	iorwf	(??___flge+1)^0,w,c
  9404   004850  100B               	iorwf	(??___flge+2)^0,w,c
  9405   004852  100C               	iorwf	(??___flge+3)^0,w,c
  9406   004854  A4D8               	btfss	status,2,c
  9407   004856  EF2F  F024         	goto	u4851
  9408   00485A  EF31  F024         	goto	u4850
  9409   00485E                     u4851:
  9410   00485E  EF39  F024         	goto	l4294
  9411   004862                     u4850:
  9412   004862  0E00               	movlw	0
  9413   004864  6E05               	movwf	___flge@ff2^0,c
  9414   004866  0E00               	movlw	0
  9415   004868  6E06               	movwf	(___flge@ff2+1)^0,c
  9416   00486A  0E00               	movlw	0
  9417   00486C  6E07               	movwf	(___flge@ff2+2)^0,c
  9418   00486E  0E00               	movlw	0
  9419   004870  6E08               	movwf	(___flge@ff2+3)^0,c
  9420   004872                     l4294:
  9421   004872  AE04               	btfss	(___flge@ff1+3)^0,7,c
  9422   004874  EF3E  F024         	goto	u4861
  9423   004878  EF40  F024         	goto	u4860
  9424   00487C                     u4861:
  9425   00487C  EF49  F024         	goto	l4298
  9426   004880                     u4860:
  9427   004880  6C01               	negf	___flge@ff1^0,c
  9428   004882  1E02               	comf	(___flge@ff1+1)^0,f,c
  9429   004884  B0D8               	btfsc	status,0,c
  9430   004886  2A02               	incf	(___flge@ff1+1)^0,f,c
  9431   004888  1E03               	comf	(___flge@ff1+2)^0,f,c
  9432   00488A  B0D8               	btfsc	status,0,c
  9433   00488C  2A03               	incf	(___flge@ff1+2)^0,f,c
  9434   00488E  0E80               	movlw	128
  9435   004890  5604               	subfwb	(___flge@ff1+3)^0,f,c
  9436   004892                     l4298:
  9437   004892  AE08               	btfss	(___flge@ff2+3)^0,7,c
  9438   004894  EF4E  F024         	goto	u4871
  9439   004898  EF50  F024         	goto	u4870
  9440   00489C                     u4871:
  9441   00489C  EF59  F024         	goto	l1132
  9442   0048A0                     u4870:
  9443   0048A0  6C05               	negf	___flge@ff2^0,c
  9444   0048A2  1E06               	comf	(___flge@ff2+1)^0,f,c
  9445   0048A4  B0D8               	btfsc	status,0,c
  9446   0048A6  2A06               	incf	(___flge@ff2+1)^0,f,c
  9447   0048A8  1E07               	comf	(___flge@ff2+2)^0,f,c
  9448   0048AA  B0D8               	btfsc	status,0,c
  9449   0048AC  2A07               	incf	(___flge@ff2+2)^0,f,c
  9450   0048AE  0E80               	movlw	128
  9451   0048B0  5608               	subfwb	(___flge@ff2+3)^0,f,c
  9452   0048B2                     l1132:
  9453   0048B2  0E00               	movlw	0
  9454   0048B4  1A01               	xorwf	___flge@ff1^0,f,c
  9455   0048B6  0E00               	movlw	0
  9456   0048B8  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  9457   0048BA  0E00               	movlw	0
  9458   0048BC  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  9459   0048BE  0E80               	movlw	128
  9460   0048C0  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  9461   0048C2  0E00               	movlw	0
  9462   0048C4  1A05               	xorwf	___flge@ff2^0,f,c
  9463   0048C6  0E00               	movlw	0
  9464   0048C8  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  9465   0048CA  0E00               	movlw	0
  9466   0048CC  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  9467   0048CE  0E80               	movlw	128
  9468   0048D0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  9469   0048D2  5005               	movf	___flge@ff2^0,w,c
  9470   0048D4  5C01               	subwf	___flge@ff1^0,w,c
  9471   0048D6  5006               	movf	(___flge@ff2+1)^0,w,c
  9472   0048D8  5802               	subwfb	(___flge@ff1+1)^0,w,c
  9473   0048DA  5007               	movf	(___flge@ff2+2)^0,w,c
  9474   0048DC  5803               	subwfb	(___flge@ff1+2)^0,w,c
  9475   0048DE  5008               	movf	(___flge@ff2+3)^0,w,c
  9476   0048E0  5804               	subwfb	(___flge@ff1+3)^0,w,c
  9477   0048E2  B0D8               	btfsc	status,0,c
  9478   0048E4  EF76  F024         	goto	u4881
  9479   0048E8  EF78  F024         	goto	u4880
  9480   0048EC                     u4881:
  9481   0048EC  EF7B  F024         	goto	l4304
  9482   0048F0                     u4880:
  9483   0048F0  90D8               	bcf	status,0,c
  9484   0048F2  EF7C  F024         	goto	l1137
  9485   0048F6                     l4304:
  9486   0048F6  80D8               	bsf	status,0,c
  9487   0048F8                     l1137:
  9488   0048F8  0012               	return		;funcret
  9489   0048FA                     __end_of___flge:
  9490                           	callstack 0
  9491                           
  9492 ;; *************** function ___fladd *****************
  9493 ;; Defined at:
  9494 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  b               4   39[COMRAM] void 
  9497 ;;  a               4   43[COMRAM] void 
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;  grs             1   54[COMRAM] unsigned char 
  9500 ;;  bexp            1   53[COMRAM] unsigned char 
  9501 ;;  aexp            1   52[COMRAM] unsigned char 
  9502 ;;  signs           1   51[COMRAM] unsigned char 
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  4   39[COMRAM] unsigned char 
  9505 ;; Registers used:
  9506 ;;		wreg, status,2, status,0
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9512 ;;      Params:         8       0       0       0       0       0       0       0       0
  9513 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9514 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9515 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9516 ;;Total ram usage:       16 bytes
  9517 ;; Hardware stack levels used: 1
  9518 ;; This function calls:
  9519 ;;		Nothing
  9520 ;; This function is called by:
  9521 ;;		_adcRead
  9522 ;;		_dsWriteData
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           	psect	text34
  9527   005F2C                     __ptext34:
  9528                           	callstack 0
  9529   005F2C                     ___fladd:
  9530                           	callstack 27
  9531   005F2C  502B               	movf	(___fladd@b+3)^0,w,c
  9532   005F2E  0B80               	andlw	128
  9533   005F30  6E34               	movwf	___fladd@signs^0,c
  9534   005F32  502B               	movf	(___fladd@b+3)^0,w,c
  9535   005F34  242B               	addwf	(___fladd@b+3)^0,w,c
  9536   005F36  6E36               	movwf	___fladd@bexp^0,c
  9537   005F38  AE2A               	btfss	(___fladd@b+2)^0,7,c
  9538   005F3A  EFA1  F02F         	goto	u4221
  9539   005F3E  EFA3  F02F         	goto	u4220
  9540   005F42                     u4221:
  9541   005F42  EFA4  F02F         	goto	l3952
  9542   005F46                     u4220:
  9543   005F46  8036               	bsf	___fladd@bexp^0,0,c
  9544   005F48                     l3952:
  9545   005F48  5036               	movf	___fladd@bexp^0,w,c
  9546   005F4A  B4D8               	btfsc	status,2,c
  9547   005F4C  EFAA  F02F         	goto	u4231
  9548   005F50  EFAC  F02F         	goto	u4230
  9549   005F54                     u4231:
  9550   005F54  EFC1  F02F         	goto	l3962
  9551   005F58                     u4230:
  9552   005F58  2836               	incf	___fladd@bexp^0,w,c
  9553   005F5A  A4D8               	btfss	status,2,c
  9554   005F5C  EFB2  F02F         	goto	u4241
  9555   005F60  EFB4  F02F         	goto	u4240
  9556   005F64                     u4241:
  9557   005F64  EFBC  F02F         	goto	l3958
  9558   005F68                     u4240:
  9559   005F68  0E00               	movlw	0
  9560   005F6A  6E28               	movwf	___fladd@b^0,c
  9561   005F6C  0E00               	movlw	0
  9562   005F6E  6E29               	movwf	(___fladd@b+1)^0,c
  9563   005F70  0E00               	movlw	0
  9564   005F72  6E2A               	movwf	(___fladd@b+2)^0,c
  9565   005F74  0E00               	movlw	0
  9566   005F76  6E2B               	movwf	(___fladd@b+3)^0,c
  9567   005F78                     l3958:
  9568   005F78  8E2A               	bsf	(___fladd@b+2)^0,7,c
  9569   005F7A  0E00               	movlw	0
  9570   005F7C  6E2B               	movwf	(___fladd@b+3)^0,c
  9571   005F7E  EFC9  F02F         	goto	l3964
  9572   005F82                     l3962:
  9573   005F82  0E00               	movlw	0
  9574   005F84  6E28               	movwf	___fladd@b^0,c
  9575   005F86  0E00               	movlw	0
  9576   005F88  6E29               	movwf	(___fladd@b+1)^0,c
  9577   005F8A  0E00               	movlw	0
  9578   005F8C  6E2A               	movwf	(___fladd@b+2)^0,c
  9579   005F8E  0E00               	movlw	0
  9580   005F90  6E2B               	movwf	(___fladd@b+3)^0,c
  9581   005F92                     l3964:
  9582   005F92  502F               	movf	(___fladd@a+3)^0,w,c
  9583   005F94  0B80               	andlw	128
  9584   005F96  6E35               	movwf	___fladd@aexp^0,c
  9585   005F98  5034               	movf	___fladd@signs^0,w,c
  9586   005F9A  1835               	xorwf	___fladd@aexp^0,w,c
  9587   005F9C  B4D8               	btfsc	status,2,c
  9588   005F9E  EFD3  F02F         	goto	u4251
  9589   005FA2  EFD5  F02F         	goto	u4250
  9590   005FA6                     u4251:
  9591   005FA6  EFD6  F02F         	goto	l3970
  9592   005FAA                     u4250:
  9593   005FAA  8C34               	bsf	___fladd@signs^0,6,c
  9594   005FAC                     l3970:
  9595   005FAC  502F               	movf	(___fladd@a+3)^0,w,c
  9596   005FAE  242F               	addwf	(___fladd@a+3)^0,w,c
  9597   005FB0  6E35               	movwf	___fladd@aexp^0,c
  9598   005FB2  AE2E               	btfss	(___fladd@a+2)^0,7,c
  9599   005FB4  EFDE  F02F         	goto	u4261
  9600   005FB8  EFE0  F02F         	goto	u4260
  9601   005FBC                     u4261:
  9602   005FBC  EFE1  F02F         	goto	l3976
  9603   005FC0                     u4260:
  9604   005FC0  8035               	bsf	___fladd@aexp^0,0,c
  9605   005FC2                     l3976:
  9606   005FC2  5035               	movf	___fladd@aexp^0,w,c
  9607   005FC4  B4D8               	btfsc	status,2,c
  9608   005FC6  EFE7  F02F         	goto	u4271
  9609   005FCA  EFE9  F02F         	goto	u4270
  9610   005FCE                     u4271:
  9611   005FCE  EFFE  F02F         	goto	l3986
  9612   005FD2                     u4270:
  9613   005FD2  2835               	incf	___fladd@aexp^0,w,c
  9614   005FD4  A4D8               	btfss	status,2,c
  9615   005FD6  EFEF  F02F         	goto	u4281
  9616   005FDA  EFF1  F02F         	goto	u4280
  9617   005FDE                     u4281:
  9618   005FDE  EFF9  F02F         	goto	l3982
  9619   005FE2                     u4280:
  9620   005FE2  0E00               	movlw	0
  9621   005FE4  6E2C               	movwf	___fladd@a^0,c
  9622   005FE6  0E00               	movlw	0
  9623   005FE8  6E2D               	movwf	(___fladd@a+1)^0,c
  9624   005FEA  0E00               	movlw	0
  9625   005FEC  6E2E               	movwf	(___fladd@a+2)^0,c
  9626   005FEE  0E00               	movlw	0
  9627   005FF0  6E2F               	movwf	(___fladd@a+3)^0,c
  9628   005FF2                     l3982:
  9629   005FF2  8E2E               	bsf	(___fladd@a+2)^0,7,c
  9630   005FF4  0E00               	movlw	0
  9631   005FF6  6E2F               	movwf	(___fladd@a+3)^0,c
  9632   005FF8  EF06  F030         	goto	l3988
  9633   005FFC                     l3986:
  9634   005FFC  0E00               	movlw	0
  9635   005FFE  6E2C               	movwf	___fladd@a^0,c
  9636   006000  0E00               	movlw	0
  9637   006002  6E2D               	movwf	(___fladd@a+1)^0,c
  9638   006004  0E00               	movlw	0
  9639   006006  6E2E               	movwf	(___fladd@a+2)^0,c
  9640   006008  0E00               	movlw	0
  9641   00600A  6E2F               	movwf	(___fladd@a+3)^0,c
  9642   00600C                     l3988:
  9643   00600C  5036               	movf	___fladd@bexp^0,w,c
  9644   00600E  5C35               	subwf	___fladd@aexp^0,w,c
  9645   006010  B0D8               	btfsc	status,0,c
  9646   006012  EF0D  F030         	goto	u4291
  9647   006016  EF0F  F030         	goto	u4290
  9648   00601A                     u4291:
  9649   00601A  EF36  F030         	goto	l4024
  9650   00601E                     u4290:
  9651   00601E  AC34               	btfss	___fladd@signs^0,6,c
  9652   006020  EF14  F030         	goto	u4301
  9653   006024  EF16  F030         	goto	u4300
  9654   006028                     u4301:
  9655   006028  EF18  F030         	goto	l3994
  9656   00602C                     u4300:
  9657   00602C  0E80               	movlw	128
  9658   00602E  1A34               	xorwf	___fladd@signs^0,f,c
  9659   006030                     l3994:
  9660   006030  C036  F037         	movff	___fladd@bexp,___fladd@grs
  9661   006034  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  9662   006038  C037  F035         	movff	___fladd@grs,___fladd@aexp
  9663   00603C  C028  F037         	movff	___fladd@b,___fladd@grs
  9664   006040  C02C  F028         	movff	___fladd@a,___fladd@b
  9665   006044  C037  F02C         	movff	___fladd@grs,___fladd@a
  9666   006048  C029  F037         	movff	___fladd@b+1,___fladd@grs
  9667   00604C  C02D  F029         	movff	___fladd@a+1,___fladd@b+1
  9668   006050  C037  F02D         	movff	___fladd@grs,___fladd@a+1
  9669   006054  C02A  F037         	movff	___fladd@b+2,___fladd@grs
  9670   006058  C02E  F02A         	movff	___fladd@a+2,___fladd@b+2
  9671   00605C  C037  F02E         	movff	___fladd@grs,___fladd@a+2
  9672   006060  C02B  F037         	movff	___fladd@b+3,___fladd@grs
  9673   006064  C02F  F02B         	movff	___fladd@a+3,___fladd@b+3
  9674   006068  C037  F02F         	movff	___fladd@grs,___fladd@a+3
  9675   00606C                     l4024:
  9676   00606C  0E00               	movlw	0
  9677   00606E  6E37               	movwf	___fladd@grs^0,c
  9678   006070  5036               	movf	___fladd@bexp^0,w,c
  9679   006072  C035  F030         	movff	___fladd@aexp,??___fladd
  9680   006076  6A31               	clrf	(??___fladd+1)^0,c
  9681   006078  5E30               	subwf	??___fladd^0,f,c
  9682   00607A  0E00               	movlw	0
  9683   00607C  5A31               	subwfb	(??___fladd+1)^0,f,c
  9684   00607E  BE31               	btfsc	(??___fladd+1)^0,7,c
  9685   006080  EF4B  F030         	goto	u4311
  9686   006084  5031               	movf	(??___fladd+1)^0,w,c
  9687   006086  E109               	bnz	u4310
  9688   006088  0E1A               	movlw	26
  9689   00608A  5C30               	subwf	??___fladd^0,w,c
  9690   00608C  A0D8               	btfss	status,0,c
  9691   00608E  EF4B  F030         	goto	u4311
  9692   006092  EF4D  F030         	goto	u4310
  9693   006096                     u4311:
  9694   006096  EF84  F030         	goto	l1396
  9695   00609A                     u4310:
  9696   00609A  5028               	movf	___fladd@b^0,w,c
  9697   00609C  1029               	iorwf	(___fladd@b+1)^0,w,c
  9698   00609E  102A               	iorwf	(___fladd@b+2)^0,w,c
  9699   0060A0  102B               	iorwf	(___fladd@b+3)^0,w,c
  9700   0060A2  A4D8               	btfss	status,2,c
  9701   0060A4  EF56  F030         	goto	u4321
  9702   0060A8  EF59  F030         	goto	u4320
  9703   0060AC                     u4321:
  9704   0060AC  0E01               	movlw	1
  9705   0060AE  EF5A  F030         	goto	u4330
  9706   0060B2                     u4320:
  9707   0060B2  0E00               	movlw	0
  9708   0060B4                     u4330:
  9709   0060B4  6E37               	movwf	___fladd@grs^0,c
  9710   0060B6  0E00               	movlw	0
  9711   0060B8  6E28               	movwf	___fladd@b^0,c
  9712   0060BA  0E00               	movlw	0
  9713   0060BC  6E29               	movwf	(___fladd@b+1)^0,c
  9714   0060BE  0E00               	movlw	0
  9715   0060C0  6E2A               	movwf	(___fladd@b+2)^0,c
  9716   0060C2  0E00               	movlw	0
  9717   0060C4  6E2B               	movwf	(___fladd@b+3)^0,c
  9718   0060C6  C035  F036         	movff	___fladd@aexp,___fladd@bexp
  9719   0060CA  EF8D  F030         	goto	l1395
  9720   0060CE                     l1397:
  9721   0060CE  A037               	btfss	___fladd@grs^0,0,c
  9722   0060D0  EF6C  F030         	goto	u4341
  9723   0060D4  EF6E  F030         	goto	u4340
  9724   0060D8                     u4341:
  9725   0060D8  EF74  F030         	goto	l4036
  9726   0060DC                     u4340:
  9727   0060DC  90D8               	bcf	status,0,c
  9728   0060DE  3037               	rrcf	___fladd@grs^0,w,c
  9729   0060E0  0901               	iorlw	1
  9730   0060E2  6E37               	movwf	___fladd@grs^0,c
  9731   0060E4  EF76  F030         	goto	l4038
  9732   0060E8                     l4036:
  9733   0060E8  90D8               	bcf	status,0,c
  9734   0060EA  3237               	rrcf	___fladd@grs^0,f,c
  9735   0060EC                     l4038:
  9736   0060EC  A028               	btfss	___fladd@b^0,0,c
  9737   0060EE  EF7B  F030         	goto	u4351
  9738   0060F2  EF7D  F030         	goto	u4350
  9739   0060F6                     u4351:
  9740   0060F6  EF7E  F030         	goto	l4042
  9741   0060FA                     u4350:
  9742   0060FA  8E37               	bsf	___fladd@grs^0,7,c
  9743   0060FC                     l4042:
  9744   0060FC  342B               	rlcf	(___fladd@b+3)^0,w,c
  9745   0060FE  322B               	rrcf	(___fladd@b+3)^0,f,c
  9746   006100  322A               	rrcf	(___fladd@b+2)^0,f,c
  9747   006102  3229               	rrcf	(___fladd@b+1)^0,f,c
  9748   006104  3228               	rrcf	___fladd@b^0,f,c
  9749   006106  2A36               	incf	___fladd@bexp^0,f,c
  9750   006108                     l1396:
  9751   006108  5035               	movf	___fladd@aexp^0,w,c
  9752   00610A  5C36               	subwf	___fladd@bexp^0,w,c
  9753   00610C  A0D8               	btfss	status,0,c
  9754   00610E  EF8B  F030         	goto	u4361
  9755   006112  EF8D  F030         	goto	u4360
  9756   006116                     u4361:
  9757   006116  EF67  F030         	goto	l1397
  9758   00611A                     u4360:
  9759   00611A                     l1395:
  9760   00611A  BC34               	btfsc	___fladd@signs^0,6,c
  9761   00611C  EF92  F030         	goto	u4371
  9762   006120  EF94  F030         	goto	u4370
  9763   006124                     u4371:
  9764   006124  EFD4  F030         	goto	l4070
  9765   006128                     u4370:
  9766   006128  5036               	movf	___fladd@bexp^0,w,c
  9767   00612A  A4D8               	btfss	status,2,c
  9768   00612C  EF9A  F030         	goto	u4381
  9769   006130  EF9C  F030         	goto	u4380
  9770   006134                     u4381:
  9771   006134  EFA6  F030         	goto	l4052
  9772   006138                     u4380:
  9773   006138  0E00               	movlw	0
  9774   00613A  6E28               	movwf	?___fladd^0,c
  9775   00613C  0E00               	movlw	0
  9776   00613E  6E29               	movwf	(?___fladd+1)^0,c
  9777   006140  0E00               	movlw	0
  9778   006142  6E2A               	movwf	(?___fladd+2)^0,c
  9779   006144  0E00               	movlw	0
  9780   006146  6E2B               	movwf	(?___fladd+3)^0,c
  9781   006148  EFF5  F031         	goto	l1404
  9782   00614C                     l4052:
  9783   00614C  502C               	movf	___fladd@a^0,w,c
  9784   00614E  2628               	addwf	___fladd@b^0,f,c
  9785   006150  502D               	movf	(___fladd@a+1)^0,w,c
  9786   006152  2229               	addwfc	(___fladd@b+1)^0,f,c
  9787   006154  502E               	movf	(___fladd@a+2)^0,w,c
  9788   006156  222A               	addwfc	(___fladd@b+2)^0,f,c
  9789   006158  502F               	movf	(___fladd@a+3)^0,w,c
  9790   00615A  222B               	addwfc	(___fladd@b+3)^0,f,c
  9791   00615C  A02B               	btfss	(___fladd@b+3)^0,0,c
  9792   00615E  EFB3  F030         	goto	u4391
  9793   006162  EFB5  F030         	goto	u4390
  9794   006166                     u4391:
  9795   006166  EF61  F031         	goto	l4106
  9796   00616A                     u4390:
  9797   00616A  A037               	btfss	___fladd@grs^0,0,c
  9798   00616C  EFBA  F030         	goto	u4401
  9799   006170  EFBC  F030         	goto	u4400
  9800   006174                     u4401:
  9801   006174  EFC2  F030         	goto	l4060
  9802   006178                     u4400:
  9803   006178  90D8               	bcf	status,0,c
  9804   00617A  3037               	rrcf	___fladd@grs^0,w,c
  9805   00617C  0901               	iorlw	1
  9806   00617E  6E37               	movwf	___fladd@grs^0,c
  9807   006180  EFC4  F030         	goto	l4062
  9808   006184                     l4060:
  9809   006184  90D8               	bcf	status,0,c
  9810   006186  3237               	rrcf	___fladd@grs^0,f,c
  9811   006188                     l4062:
  9812   006188  A028               	btfss	___fladd@b^0,0,c
  9813   00618A  EFC9  F030         	goto	u4411
  9814   00618E  EFCB  F030         	goto	u4410
  9815   006192                     u4411:
  9816   006192  EFCC  F030         	goto	l4066
  9817   006196                     u4410:
  9818   006196  8E37               	bsf	___fladd@grs^0,7,c
  9819   006198                     l4066:
  9820   006198  342B               	rlcf	(___fladd@b+3)^0,w,c
  9821   00619A  322B               	rrcf	(___fladd@b+3)^0,f,c
  9822   00619C  322A               	rrcf	(___fladd@b+2)^0,f,c
  9823   00619E  3229               	rrcf	(___fladd@b+1)^0,f,c
  9824   0061A0  3228               	rrcf	___fladd@b^0,f,c
  9825   0061A2  2A36               	incf	___fladd@bexp^0,f,c
  9826   0061A4  EF61  F031         	goto	l4106
  9827   0061A8                     l4070:
  9828   0061A8  502C               	movf	___fladd@a^0,w,c
  9829   0061AA  5C28               	subwf	___fladd@b^0,w,c
  9830   0061AC  502D               	movf	(___fladd@a+1)^0,w,c
  9831   0061AE  5829               	subwfb	(___fladd@b+1)^0,w,c
  9832   0061B0  502E               	movf	(___fladd@a+2)^0,w,c
  9833   0061B2  582A               	subwfb	(___fladd@b+2)^0,w,c
  9834   0061B4  502B               	movf	(___fladd@b+3)^0,w,c
  9835   0061B6  0A80               	xorlw	128
  9836   0061B8  6E30               	movwf	??___fladd^0,c
  9837   0061BA  502F               	movf	(___fladd@a+3)^0,w,c
  9838   0061BC  0A80               	xorlw	128
  9839   0061BE  5830               	subwfb	??___fladd^0,w,c
  9840   0061C0  B0D8               	btfsc	status,0,c
  9841   0061C2  EFE5  F030         	goto	u4421
  9842   0061C6  EFE7  F030         	goto	u4420
  9843   0061CA                     u4421:
  9844   0061CA  EF12  F031         	goto	l4080
  9845   0061CE                     u4420:
  9846   0061CE  5028               	movf	___fladd@b^0,w,c
  9847   0061D0  5C2C               	subwf	___fladd@a^0,w,c
  9848   0061D2  6E30               	movwf	??___fladd^0,c
  9849   0061D4  5029               	movf	(___fladd@b+1)^0,w,c
  9850   0061D6  582D               	subwfb	(___fladd@a+1)^0,w,c
  9851   0061D8  6E31               	movwf	(??___fladd+1)^0,c
  9852   0061DA  502A               	movf	(___fladd@b+2)^0,w,c
  9853   0061DC  582E               	subwfb	(___fladd@a+2)^0,w,c
  9854   0061DE  6E32               	movwf	(??___fladd+2)^0,c
  9855   0061E0  502B               	movf	(___fladd@b+3)^0,w,c
  9856   0061E2  582F               	subwfb	(___fladd@a+3)^0,w,c
  9857   0061E4  6E33               	movwf	(??___fladd+3)^0,c
  9858   0061E6  0EFF               	movlw	255
  9859   0061E8  2430               	addwf	??___fladd^0,w,c
  9860   0061EA  6E28               	movwf	___fladd@b^0,c
  9861   0061EC  0EFF               	movlw	255
  9862   0061EE  2031               	addwfc	(??___fladd+1)^0,w,c
  9863   0061F0  6E29               	movwf	(___fladd@b+1)^0,c
  9864   0061F2  0EFF               	movlw	255
  9865   0061F4  2032               	addwfc	(??___fladd+2)^0,w,c
  9866   0061F6  6E2A               	movwf	(___fladd@b+2)^0,c
  9867   0061F8  0EFF               	movlw	255
  9868   0061FA  2033               	addwfc	(??___fladd+3)^0,w,c
  9869   0061FC  6E2B               	movwf	(___fladd@b+3)^0,c
  9870   0061FE  0E80               	movlw	128
  9871   006200  1A34               	xorwf	___fladd@signs^0,f,c
  9872   006202  6C37               	negf	___fladd@grs^0,c
  9873   006204  5037               	movf	___fladd@grs^0,w,c
  9874   006206  A4D8               	btfss	status,2,c
  9875   006208  EF08  F031         	goto	u4431
  9876   00620C  EF0A  F031         	goto	u4430
  9877   006210                     u4431:
  9878   006210  EF1A  F031         	goto	l1412
  9879   006214                     u4430:
  9880   006214  0E01               	movlw	1
  9881   006216  2628               	addwf	___fladd@b^0,f,c
  9882   006218  0E00               	movlw	0
  9883   00621A  2229               	addwfc	(___fladd@b+1)^0,f,c
  9884   00621C  222A               	addwfc	(___fladd@b+2)^0,f,c
  9885   00621E  222B               	addwfc	(___fladd@b+3)^0,f,c
  9886   006220  EF1A  F031         	goto	l1412
  9887   006224                     l4080:
  9888   006224  502C               	movf	___fladd@a^0,w,c
  9889   006226  5E28               	subwf	___fladd@b^0,f,c
  9890   006228  502D               	movf	(___fladd@a+1)^0,w,c
  9891   00622A  5A29               	subwfb	(___fladd@b+1)^0,f,c
  9892   00622C  502E               	movf	(___fladd@a+2)^0,w,c
  9893   00622E  5A2A               	subwfb	(___fladd@b+2)^0,f,c
  9894   006230  502F               	movf	(___fladd@a+3)^0,w,c
  9895   006232  5A2B               	subwfb	(___fladd@b+3)^0,f,c
  9896   006234                     l1412:
  9897   006234  5028               	movf	___fladd@b^0,w,c
  9898   006236  1029               	iorwf	(___fladd@b+1)^0,w,c
  9899   006238  102A               	iorwf	(___fladd@b+2)^0,w,c
  9900   00623A  102B               	iorwf	(___fladd@b+3)^0,w,c
  9901   00623C  A4D8               	btfss	status,2,c
  9902   00623E  EF23  F031         	goto	u4441
  9903   006242  EF25  F031         	goto	u4440
  9904   006246                     u4441:
  9905   006246  EF5A  F031         	goto	l4104
  9906   00624A                     u4440:
  9907   00624A  5037               	movf	___fladd@grs^0,w,c
  9908   00624C  A4D8               	btfss	status,2,c
  9909   00624E  EF2B  F031         	goto	u4451
  9910   006252  EF2D  F031         	goto	u4450
  9911   006256                     u4451:
  9912   006256  EF5A  F031         	goto	l4104
  9913   00625A                     u4450:
  9914   00625A  0E00               	movlw	0
  9915   00625C  6E28               	movwf	?___fladd^0,c
  9916   00625E  0E00               	movlw	0
  9917   006260  6E29               	movwf	(?___fladd+1)^0,c
  9918   006262  0E00               	movlw	0
  9919   006264  6E2A               	movwf	(?___fladd+2)^0,c
  9920   006266  0E00               	movlw	0
  9921   006268  6E2B               	movwf	(?___fladd+3)^0,c
  9922   00626A  EFF5  F031         	goto	l1404
  9923   00626E                     l4088:
  9924   00626E  90D8               	bcf	status,0,c
  9925   006270  3628               	rlcf	___fladd@b^0,f,c
  9926   006272  3629               	rlcf	(___fladd@b+1)^0,f,c
  9927   006274  362A               	rlcf	(___fladd@b+2)^0,f,c
  9928   006276  362B               	rlcf	(___fladd@b+3)^0,f,c
  9929   006278  AE37               	btfss	___fladd@grs^0,7,c
  9930   00627A  EF41  F031         	goto	u4461
  9931   00627E  EF43  F031         	goto	u4460
  9932   006282                     u4461:
  9933   006282  EF44  F031         	goto	l4094
  9934   006286                     u4460:
  9935   006286  8028               	bsf	___fladd@b^0,0,c
  9936   006288                     l4094:
  9937   006288  A037               	btfss	___fladd@grs^0,0,c
  9938   00628A  EF49  F031         	goto	u4471
  9939   00628E  EF4B  F031         	goto	u4470
  9940   006292                     u4471:
  9941   006292  EF4F  F031         	goto	l4098
  9942   006296                     u4470:
  9943   006296  80D8               	bsf	status,0,c
  9944   006298  3637               	rlcf	___fladd@grs^0,f,c
  9945   00629A  EF51  F031         	goto	l4100
  9946   00629E                     l4098:
  9947   00629E  90D8               	bcf	status,0,c
  9948   0062A0  3637               	rlcf	___fladd@grs^0,f,c
  9949   0062A2                     l4100:
  9950   0062A2  5036               	movf	___fladd@bexp^0,w,c
  9951   0062A4  B4D8               	btfsc	status,2,c
  9952   0062A6  EF57  F031         	goto	u4481
  9953   0062AA  EF59  F031         	goto	u4480
  9954   0062AE                     u4481:
  9955   0062AE  EF5A  F031         	goto	l4104
  9956   0062B2                     u4480:
  9957   0062B2  0636               	decf	___fladd@bexp^0,f,c
  9958   0062B4                     l4104:
  9959   0062B4  AE2A               	btfss	(___fladd@b+2)^0,7,c
  9960   0062B6  EF5F  F031         	goto	u4491
  9961   0062BA  EF61  F031         	goto	u4490
  9962   0062BE                     u4491:
  9963   0062BE  EF37  F031         	goto	l4088
  9964   0062C2                     u4490:
  9965   0062C2                     l4106:
  9966   0062C2  0E00               	movlw	0
  9967   0062C4  6E35               	movwf	___fladd@aexp^0,c
  9968   0062C6  AE37               	btfss	___fladd@grs^0,7,c
  9969   0062C8  EF68  F031         	goto	u4501
  9970   0062CC  EF6A  F031         	goto	u4500
  9971   0062D0                     u4501:
  9972   0062D0  EF82  F031         	goto	l1421
  9973   0062D4                     u4500:
  9974   0062D4  C037  F030         	movff	___fladd@grs,??___fladd
  9975   0062D8  0E7F               	movlw	127
  9976   0062DA  1630               	andwf	??___fladd^0,f,c
  9977   0062DC  B4D8               	btfsc	status,2,c
  9978   0062DE  EF73  F031         	goto	u4511
  9979   0062E2  EF75  F031         	goto	u4510
  9980   0062E6                     u4511:
  9981   0062E6  EF79  F031         	goto	l1422
  9982   0062EA                     u4510:
  9983   0062EA                     l4112:
  9984   0062EA  0E01               	movlw	1
  9985   0062EC  6E35               	movwf	___fladd@aexp^0,c
  9986   0062EE  EF82  F031         	goto	l1421
  9987   0062F2                     l1422:
  9988   0062F2  A028               	btfss	___fladd@b^0,0,c
  9989   0062F4  EF7E  F031         	goto	u4521
  9990   0062F8  EF80  F031         	goto	u4520
  9991   0062FC                     u4521:
  9992   0062FC  EF82  F031         	goto	l1421
  9993   006300                     u4520:
  9994   006300  EF75  F031         	goto	l4112
  9995   006304                     l1421:
  9996   006304  5035               	movf	___fladd@aexp^0,w,c
  9997   006306  B4D8               	btfsc	status,2,c
  9998   006308  EF88  F031         	goto	u4531
  9999   00630C  EF8A  F031         	goto	u4530
 10000   006310                     u4531:
 10001   006310  EFB5  F031         	goto	l4124
 10002   006314                     u4530:
 10003   006314  0E01               	movlw	1
 10004   006316  2628               	addwf	___fladd@b^0,f,c
 10005   006318  0E00               	movlw	0
 10006   00631A  2229               	addwfc	(___fladd@b+1)^0,f,c
 10007   00631C  222A               	addwfc	(___fladd@b+2)^0,f,c
 10008   00631E  222B               	addwfc	(___fladd@b+3)^0,f,c
 10009   006320  A02B               	btfss	(___fladd@b+3)^0,0,c
 10010   006322  EF95  F031         	goto	u4541
 10011   006326  EF97  F031         	goto	u4540
 10012   00632A                     u4541:
 10013   00632A  EFB5  F031         	goto	l4124
 10014   00632E                     u4540:
 10015   00632E  C028  F030         	movff	___fladd@b,??___fladd
 10016   006332  C029  F031         	movff	___fladd@b+1,??___fladd+1
 10017   006336  C02A  F032         	movff	___fladd@b+2,??___fladd+2
 10018   00633A  C02B  F033         	movff	___fladd@b+3,??___fladd+3
 10019   00633E  3433               	rlcf	(??___fladd+3)^0,w,c
 10020   006340  3233               	rrcf	(??___fladd+3)^0,f,c
 10021   006342  3232               	rrcf	(??___fladd+2)^0,f,c
 10022   006344  3231               	rrcf	(??___fladd+1)^0,f,c
 10023   006346  3230               	rrcf	??___fladd^0,f,c
 10024   006348  C030  F028         	movff	??___fladd,___fladd@b
 10025   00634C  C031  F029         	movff	??___fladd+1,___fladd@b+1
 10026   006350  C032  F02A         	movff	??___fladd+2,___fladd@b+2
 10027   006354  C033  F02B         	movff	??___fladd+3,___fladd@b+3
 10028   006358  2836               	incf	___fladd@bexp^0,w,c
 10029   00635A  B4D8               	btfsc	status,2,c
 10030   00635C  EFB2  F031         	goto	u4551
 10031   006360  EFB4  F031         	goto	u4550
 10032   006364                     u4551:
 10033   006364  EFB5  F031         	goto	l4124
 10034   006368                     u4550:
 10035   006368  2A36               	incf	___fladd@bexp^0,f,c
 10036   00636A                     l4124:
 10037   00636A  2836               	incf	___fladd@bexp^0,w,c
 10038   00636C  B4D8               	btfsc	status,2,c
 10039   00636E  EFBB  F031         	goto	u4561
 10040   006372  EFBD  F031         	goto	u4560
 10041   006376                     u4561:
 10042   006376  EFC5  F031         	goto	l4128
 10043   00637A                     u4560:
 10044   00637A  5036               	movf	___fladd@bexp^0,w,c
 10045   00637C  A4D8               	btfss	status,2,c
 10046   00637E  EFC3  F031         	goto	u4571
 10047   006382  EFC5  F031         	goto	u4570
 10048   006386                     u4571:
 10049   006386  EFD7  F031         	goto	l4132
 10050   00638A                     u4570:
 10051   00638A                     l4128:
 10052   00638A  0E00               	movlw	0
 10053   00638C  6E28               	movwf	___fladd@b^0,c
 10054   00638E  0E00               	movlw	0
 10055   006390  6E29               	movwf	(___fladd@b+1)^0,c
 10056   006392  0E00               	movlw	0
 10057   006394  6E2A               	movwf	(___fladd@b+2)^0,c
 10058   006396  0E00               	movlw	0
 10059   006398  6E2B               	movwf	(___fladd@b+3)^0,c
 10060   00639A  5036               	movf	___fladd@bexp^0,w,c
 10061   00639C  A4D8               	btfss	status,2,c
 10062   00639E  EFD3  F031         	goto	u4581
 10063   0063A2  EFD5  F031         	goto	u4580
 10064   0063A6                     u4581:
 10065   0063A6  EFD7  F031         	goto	l4132
 10066   0063AA                     u4580:
 10067   0063AA  0E00               	movlw	0
 10068   0063AC  6E34               	movwf	___fladd@signs^0,c
 10069   0063AE                     l4132:
 10070   0063AE  A036               	btfss	___fladd@bexp^0,0,c
 10071   0063B0  EFDC  F031         	goto	u4591
 10072   0063B4  EFDE  F031         	goto	u4590
 10073   0063B8                     u4591:
 10074   0063B8  EFE1  F031         	goto	l4136
 10075   0063BC                     u4590:
 10076   0063BC  8E2A               	bsf	(___fladd@b+2)^0,7,c
 10077   0063BE  EFE2  F031         	goto	l4138
 10078   0063C2                     l4136:
 10079   0063C2  9E2A               	bcf	(___fladd@b+2)^0,7,c
 10080   0063C4                     l4138:
 10081   0063C4  90D8               	bcf	status,0,c
 10082   0063C6  3036               	rrcf	___fladd@bexp^0,w,c
 10083   0063C8  6E2B               	movwf	(___fladd@b+3)^0,c
 10084   0063CA  AE34               	btfss	___fladd@signs^0,7,c
 10085   0063CC  EFEA  F031         	goto	u4601
 10086   0063D0  EFEC  F031         	goto	u4600
 10087   0063D4                     u4601:
 10088   0063D4  EFED  F031         	goto	l4144
 10089   0063D8                     u4600:
 10090   0063D8  8E2B               	bsf	(___fladd@b+3)^0,7,c
 10091   0063DA                     l4144:
 10092   0063DA  C028  F028         	movff	___fladd@b,?___fladd
 10093   0063DE  C029  F029         	movff	___fladd@b+1,?___fladd+1
 10094   0063E2  C02A  F02A         	movff	___fladd@b+2,?___fladd+2
 10095   0063E6  C02B  F02B         	movff	___fladd@b+3,?___fladd+3
 10096   0063EA                     l1404:
 10097   0063EA  0012               	return		;funcret
 10098   0063EC                     __end_of___fladd:
 10099                           	callstack 0
 10100                           
 10101 ;; *************** function _dsReadData *****************
 10102 ;; Defined at:
 10103 ;;		line 30 in file "rtc.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  address         2   13[COMRAM] int 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  result          2   16[COMRAM] int 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  2   13[COMRAM] int 
 10110 ;; Registers used:
 10111 ;;		wreg, status,2, status,0, cstack
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10117 ;;      Params:         2       0       0       0       0       0       0       0       0
 10118 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10119 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10120 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10121 ;;Total ram usage:        5 bytes
 10122 ;; Hardware stack levels used: 1
 10123 ;; Hardware stack levels required when called: 4
 10124 ;; This function calls:
 10125 ;;		_i2cReadByte
 10126 ;;		_i2cWriteByte
 10127 ;; This function is called by:
 10128 ;;		_getAlarmLevel
 10129 ;;		_setAlarmLevel
 10130 ;;		_getLanguage
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text35
 10135   003C90                     __ptext35:
 10136                           	callstack 0
 10137   003C90                     _dsReadData:
 10138                           	callstack 24
 10139   003C90                     
 10140                           ;rtc.c: 31:  int result;;rtc.c: 32:  i2cWriteByte(1,0,0xde);
 10141   003C90  0E00               	movlw	0
 10142   003C92  6E08               	movwf	i2cWriteByte@send_stop^0,c
 10143   003C94  0EDE               	movlw	222
 10144   003C96  6E09               	movwf	i2cWriteByte@byte^0,c
 10145   003C98  0E01               	movlw	1
 10146   003C9A  EC88  F01F         	call	_i2cWriteByte
 10147                           
 10148                           ;rtc.c: 33:  i2cWriteByte(0,0,address);
 10149   003C9E  0E00               	movlw	0
 10150   003CA0  6E08               	movwf	i2cWriteByte@send_stop^0,c
 10151   003CA2  C00E  F009         	movff	dsReadData@address,i2cWriteByte@byte
 10152   003CA6  0E00               	movlw	0
 10153   003CA8  EC88  F01F         	call	_i2cWriteByte
 10154                           
 10155                           ;rtc.c: 34:  i2cWriteByte(1,0, 0xdf);
 10156   003CAC  0E00               	movlw	0
 10157   003CAE  6E08               	movwf	i2cWriteByte@send_stop^0,c
 10158   003CB0  0EDF               	movlw	223
 10159   003CB2  6E09               	movwf	i2cWriteByte@byte^0,c
 10160   003CB4  0E01               	movlw	1
 10161   003CB6  EC88  F01F         	call	_i2cWriteByte
 10162                           
 10163                           ;rtc.c: 35:  result = i2cReadByte(1,1 );
 10164   003CBA  0E01               	movlw	1
 10165   003CBC  6E08               	movwf	i2cReadByte@send_stop^0,c
 10166   003CBE  0E01               	movlw	1
 10167   003CC0  ECDC  F01E         	call	_i2cReadByte
 10168   003CC4  6E10               	movwf	??_dsReadData^0,c
 10169   003CC6  5010               	movf	??_dsReadData^0,w,c
 10170   003CC8  6E11               	movwf	dsReadData@result^0,c
 10171   003CCA  6A12               	clrf	(dsReadData@result+1)^0,c
 10172   003CCC                     
 10173                           ;rtc.c: 36:  return result;
 10174   003CCC  C011  F00E         	movff	dsReadData@result,?_dsReadData
 10175   003CD0  C012  F00F         	movff	dsReadData@result+1,?_dsReadData+1
 10176   003CD4  0012               	return		;funcret
 10177   003CD6                     __end_of_dsReadData:
 10178                           	callstack 0
 10179                           
 10180 ;; *************** function _i2cWriteByte *****************
 10181 ;; Defined at:
 10182 ;;		line 113 in file "i2c.c"
 10183 ;; Parameters:    Size  Location     Type
 10184 ;;  send_start      1    wreg     unsigned char 
 10185 ;;  send_stop       1    7[COMRAM] unsigned char 
 10186 ;;  byte            1    8[COMRAM] unsigned char 
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;  send_start      1    9[COMRAM] unsigned char 
 10189 ;;  bit             1   10[COMRAM] unsigned char 
 10190 ;;  nack            1    0        unsigned char 
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      unsigned char 
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0, cstack
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10200 ;;      Params:         2       0       0       0       0       0       0       0       0
 10201 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10203 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10204 ;;Total ram usage:        4 bytes
 10205 ;; Hardware stack levels used: 1
 10206 ;; Hardware stack levels required when called: 3
 10207 ;; This function calls:
 10208 ;;		_i2c_read_bit
 10209 ;;		_i2c_start
 10210 ;;		_i2c_stop
 10211 ;;		_i2c_write_bit
 10212 ;; This function is called by:
 10213 ;;		_dsWriteData
 10214 ;;		_dsReadData
 10215 ;;		_setHours
 10216 ;;		_setMinutes
 10217 ;;		_setSeconds
 10218 ;;		_getHours
 10219 ;;		_getMinutes
 10220 ;;		_getSeconds
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           	psect	text36
 10225   003F10                     __ptext36:
 10226                           	callstack 0
 10227   003F10                     _i2cWriteByte:
 10228                           	callstack 24
 10229                           
 10230                           ;incstack = 0
 10231                           ;i2cWriteByte@send_start stored from wreg
 10232   003F10  6E0A               	movwf	i2cWriteByte@send_start^0,c
 10233   003F12                     
 10234                           ;i2c.c: 114:  unsigned char bit;;i2c.c: 115:  unsigned char nack;;i2c.c: 116:  if (send_
      +                          start) {
 10235   003F12  500A               	movf	i2cWriteByte@send_start^0,w,c
 10236   003F14  B4D8               	btfsc	status,2,c
 10237   003F16  EF8F  F01F         	goto	u4151
 10238   003F1A  EF91  F01F         	goto	u4150
 10239   003F1E                     u4151:
 10240   003F1E  EF93  F01F         	goto	l3900
 10241   003F22                     u4150:
 10242   003F22                     
 10243                           ;i2c.c: 117:   i2c_start();
 10244   003F22  EC8F  F01E         	call	_i2c_start	;wreg free
 10245   003F26                     l3900:
 10246                           
 10247                           ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
 10248   003F26  0E00               	movlw	0
 10249   003F28  6E0B               	movwf	i2cWriteByte@bit^0,c
 10250   003F2A                     l3906:
 10251                           
 10252                           ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
 10253   003F2A  BE09               	btfsc	i2cWriteByte@byte^0,7,c
 10254   003F2C  EF9A  F01F         	goto	u4161
 10255   003F30  EF9D  F01F         	goto	u4160
 10256   003F34                     u4161:
 10257   003F34  0E01               	movlw	1
 10258   003F36  EF9E  F01F         	goto	u4170
 10259   003F3A                     u4160:
 10260   003F3A  0E00               	movlw	0
 10261   003F3C                     u4170:
 10262   003F3C  EC5C  F01F         	call	_i2c_write_bit
 10263   003F40                     
 10264                           ;i2c.c: 121:   byte <<= 1;
 10265   003F40  90D8               	bcf	status,0,c
 10266   003F42  3609               	rlcf	i2cWriteByte@byte^0,f,c
 10267   003F44                     
 10268                           ;i2c.c: 122:  }
 10269   003F44  2A0B               	incf	i2cWriteByte@bit^0,f,c
 10270   003F46  0E07               	movlw	7
 10271   003F48  640B               	cpfsgt	i2cWriteByte@bit^0,c
 10272   003F4A  EFA9  F01F         	goto	u4181
 10273   003F4E  EFAB  F01F         	goto	u4180
 10274   003F52                     u4181:
 10275   003F52  EF95  F01F         	goto	l3906
 10276   003F56                     u4180:
 10277   003F56  EC9C  F01D         	call	_i2c_read_bit	;wreg free
 10278   003F5A                     
 10279                           ;i2c.c: 124:  if (send_stop) {
 10280   003F5A  5008               	movf	i2cWriteByte@send_stop^0,w,c
 10281   003F5C  B4D8               	btfsc	status,2,c
 10282   003F5E  EFB3  F01F         	goto	u4191
 10283   003F62  EFB5  F01F         	goto	u4190
 10284   003F66                     u4191:
 10285   003F66  EFB7  F01F         	goto	l255
 10286   003F6A                     u4190:
 10287   003F6A                     
 10288                           ;i2c.c: 125:   i2c_stop();
 10289   003F6A  EC84  F01D         	call	_i2c_stop	;wreg free
 10290   003F6E                     l255:
 10291   003F6E  0012               	return		;funcret
 10292   003F70                     __end_of_i2cWriteByte:
 10293                           	callstack 0
 10294                           
 10295 ;; *************** function _i2c_start *****************
 10296 ;; Defined at:
 10297 ;;		line 52 in file "i2c.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;		None
 10300 ;; Auto vars:     Size  Location     Type
 10301 ;;		None
 10302 ;; Return value:  Size  Location     Type
 10303 ;;                  1    wreg      void 
 10304 ;; Registers used:
 10305 ;;		wreg, status,2, status,0, cstack
 10306 ;; Tracked objects:
 10307 ;;		On entry : 0/0
 10308 ;;		On exit  : 0/0
 10309 ;;		Unchanged: 0/0
 10310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10311 ;;      Params:         0       0       0       0       0       0       0       0       0
 10312 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10313 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10314 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10315 ;;Total ram usage:        0 bytes
 10316 ;; Hardware stack levels used: 1
 10317 ;; Hardware stack levels required when called: 2
 10318 ;; This function calls:
 10319 ;;		_I2C_delay
 10320 ;;		_clear_SCL
 10321 ;;		_clear_SDA
 10322 ;;		_read_SCL
 10323 ;;		_read_SDA
 10324 ;; This function is called by:
 10325 ;;		_i2cWriteByte
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text37
 10330   003D1E                     __ptext37:
 10331                           	callstack 0
 10332   003D1E                     _i2c_start:
 10333                           	callstack 24
 10334   003D1E                     
 10335                           ;i2c.c: 54:  if (started) {
 10336   003D1E  0100               	movlb	0	; () banked
 10337   003D20  51BC               	movf	_started& (0+255),w,b
 10338   003D22  B4D8               	btfsc	status,2,c
 10339   003D24  EF96  F01E         	goto	u4081
 10340   003D28  EF98  F01E         	goto	u4080
 10341   003D2C                     u4081:
 10342   003D2C  EFA8  F01E         	goto	l3836
 10343   003D30                     u4080:
 10344   003D30                     
 10345                           ; BSR set to: 0
 10346                           ;i2c.c: 55:   read_SDA();
 10347   003D30  ECEC  F01D         	call	_read_SDA	;wreg free
 10348   003D34                     
 10349                           ;i2c.c: 56:   I2C_delay();
 10350   003D34  EC68  F01C         	call	_I2C_delay	;wreg free
 10351   003D38                     l3832:
 10352   003D38  ECD0  F01D         	call	_read_SCL	;wreg free
 10353   003D3C  0900               	iorlw	0
 10354   003D3E  B4D8               	btfsc	status,2,c
 10355   003D40  EFA4  F01E         	goto	u4091
 10356   003D44  EFA6  F01E         	goto	u4090
 10357   003D48                     u4091:
 10358   003D48  EF9C  F01E         	goto	l3832
 10359   003D4C                     u4090:
 10360   003D4C                     
 10361                           ;i2c.c: 59:   I2C_delay();
 10362   003D4C  EC68  F01C         	call	_I2C_delay	;wreg free
 10363   003D50                     l3836:
 10364                           
 10365                           ;i2c.c: 61:  if (read_SDA() == 0) {
 10366   003D50  ECEC  F01D         	call	_read_SDA	;wreg free
 10367   003D54                     
 10368                           ;i2c.c: 65:  clear_SDA();
 10369   003D54  EC2B  F01D         	call	_clear_SDA	;wreg free
 10370   003D58                     
 10371                           ;i2c.c: 66:  I2C_delay();
 10372   003D58  EC68  F01C         	call	_I2C_delay	;wreg free
 10373   003D5C                     
 10374                           ;i2c.c: 67:  clear_SCL();
 10375   003D5C  EC16  F01D         	call	_clear_SCL	;wreg free
 10376   003D60                     
 10377                           ;i2c.c: 68:  started = 1;
 10378   003D60  0E01               	movlw	1
 10379   003D62  0100               	movlb	0	; () banked
 10380   003D64  6FBC               	movwf	_started& (0+255),b
 10381   003D66                     
 10382                           ; BSR set to: 0
 10383   003D66  0012               	return		;funcret
 10384   003D68                     __end_of_i2c_start:
 10385                           	callstack 0
 10386                           
 10387 ;; *************** function _i2cReadByte *****************
 10388 ;; Defined at:
 10389 ;;		line 131 in file "i2c.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  nack            1    wreg     unsigned char 
 10392 ;;  send_stop       1    7[COMRAM] unsigned char 
 10393 ;; Auto vars:     Size  Location     Type
 10394 ;;  nack            1    9[COMRAM] unsigned char 
 10395 ;;  bit             2   10[COMRAM] unsigned int 
 10396 ;;  byte            1   12[COMRAM] unsigned char 
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  1    wreg      unsigned char 
 10399 ;; Registers used:
 10400 ;;		wreg, status,2, status,0, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10406 ;;      Params:         1       0       0       0       0       0       0       0       0
 10407 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10408 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10409 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10410 ;;Total ram usage:        6 bytes
 10411 ;; Hardware stack levels used: 1
 10412 ;; Hardware stack levels required when called: 3
 10413 ;; This function calls:
 10414 ;;		_i2c_read_bit
 10415 ;;		_i2c_stop
 10416 ;;		_i2c_write_bit
 10417 ;; This function is called by:
 10418 ;;		_dsReadData
 10419 ;;		_getHours
 10420 ;;		_getMinutes
 10421 ;;		_getSeconds
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           	psect	text38
 10426   003DB8                     __ptext38:
 10427                           	callstack 0
 10428   003DB8                     _i2cReadByte:
 10429                           	callstack 24
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;incstack = 0
 10433                           ;i2cReadByte@nack stored from wreg
 10434   003DB8  6E0A               	movwf	i2cReadByte@nack^0,c
 10435   003DBA                     
 10436                           ;i2c.c: 132:  unsigned char byte = 0;
 10437   003DBA  0E00               	movlw	0
 10438   003DBC  6E0D               	movwf	i2cReadByte@byte^0,c
 10439                           
 10440                           ;i2c.c: 133:  unsigned bit;;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
 10441   003DBE  0E00               	movlw	0
 10442   003DC0  6E0C               	movwf	(i2cReadByte@bit+1)^0,c
 10443   003DC2  0E00               	movlw	0
 10444   003DC4  6E0B               	movwf	i2cReadByte@bit^0,c
 10445   003DC6                     l3928:
 10446                           
 10447                           ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
 10448   003DC6  EC9C  F01D         	call	_i2c_read_bit	;wreg free
 10449   003DCA  6E09               	movwf	??_i2cReadByte^0,c
 10450   003DCC  500D               	movf	i2cReadByte@byte^0,w,c
 10451   003DCE  240D               	addwf	i2cReadByte@byte^0,w,c
 10452   003DD0  1009               	iorwf	??_i2cReadByte^0,w,c
 10453   003DD2  6E0D               	movwf	i2cReadByte@byte^0,c
 10454   003DD4                     
 10455                           ;i2c.c: 136:  }
 10456   003DD4  4A0B               	infsnz	i2cReadByte@bit^0,f,c
 10457   003DD6  2A0C               	incf	(i2cReadByte@bit+1)^0,f,c
 10458   003DD8  500C               	movf	(i2cReadByte@bit+1)^0,w,c
 10459   003DDA  E109               	bnz	u4200
 10460   003DDC  0E08               	movlw	8
 10461   003DDE  5C0B               	subwf	i2cReadByte@bit^0,w,c
 10462   003DE0  A0D8               	btfss	status,0,c
 10463   003DE2  EFF5  F01E         	goto	u4201
 10464   003DE6  EFF7  F01E         	goto	u4200
 10465   003DEA                     u4201:
 10466   003DEA  EFE3  F01E         	goto	l3928
 10467   003DEE                     u4200:
 10468   003DEE                     
 10469                           ;i2c.c: 137:  i2c_write_bit(nack);
 10470   003DEE  500A               	movf	i2cReadByte@nack^0,w,c
 10471   003DF0  EC5C  F01F         	call	_i2c_write_bit
 10472   003DF4                     
 10473                           ;i2c.c: 138:  if (send_stop) {
 10474   003DF4  5008               	movf	i2cReadByte@send_stop^0,w,c
 10475   003DF6  B4D8               	btfsc	status,2,c
 10476   003DF8  EF00  F01F         	goto	u4211
 10477   003DFC  EF02  F01F         	goto	u4210
 10478   003E00                     u4211:
 10479   003E00  EF04  F01F         	goto	l3940
 10480   003E04                     u4210:
 10481   003E04                     
 10482                           ;i2c.c: 139:   i2c_stop();
 10483   003E04  EC84  F01D         	call	_i2c_stop	;wreg free
 10484   003E08                     l3940:
 10485                           
 10486                           ;i2c.c: 141:  return byte;
 10487   003E08  500D               	movf	i2cReadByte@byte^0,w,c
 10488   003E0A  0012               	return		;funcret
 10489   003E0C                     __end_of_i2cReadByte:
 10490                           	callstack 0
 10491                           
 10492 ;; *************** function _i2c_write_bit *****************
 10493 ;; Defined at:
 10494 ;;		line 84 in file "i2c.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;  bit             1    wreg     unsigned char 
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;  bit             1    6[COMRAM] unsigned char 
 10499 ;; Return value:  Size  Location     Type
 10500 ;;                  1    wreg      void 
 10501 ;; Registers used:
 10502 ;;		wreg, status,2, status,0, cstack
 10503 ;; Tracked objects:
 10504 ;;		On entry : 0/0
 10505 ;;		On exit  : 0/0
 10506 ;;		Unchanged: 0/0
 10507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10508 ;;      Params:         0       0       0       0       0       0       0       0       0
 10509 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10510 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10511 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10512 ;;Total ram usage:        1 bytes
 10513 ;; Hardware stack levels used: 1
 10514 ;; Hardware stack levels required when called: 2
 10515 ;; This function calls:
 10516 ;;		_I2C_delay
 10517 ;;		_clear_SCL
 10518 ;;		_clear_SDA
 10519 ;;		_read_SCL
 10520 ;;		_read_SDA
 10521 ;; This function is called by:
 10522 ;;		_i2cWriteByte
 10523 ;;		_i2cReadByte
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text39
 10528   003EB8                     __ptext39:
 10529                           	callstack 0
 10530   003EB8                     _i2c_write_bit:
 10531                           	callstack 24
 10532                           
 10533                           ;incstack = 0
 10534                           ;i2c_write_bit@bit stored from wreg
 10535   003EB8  6E07               	movwf	i2c_write_bit@bit^0,c
 10536   003EBA                     
 10537                           ;i2c.c: 85:  if (bit) {
 10538   003EBA  5007               	movf	i2c_write_bit@bit^0,w,c
 10539   003EBC  B4D8               	btfsc	status,2,c
 10540   003EBE  EF63  F01F         	goto	u4111
 10541   003EC2  EF65  F01F         	goto	u4110
 10542   003EC6                     u4111:
 10543   003EC6  EF69  F01F         	goto	l3864
 10544   003ECA                     u4110:
 10545   003ECA                     
 10546                           ;i2c.c: 86:   read_SDA();
 10547   003ECA  ECEC  F01D         	call	_read_SDA	;wreg free
 10548                           
 10549                           ;i2c.c: 87:  } else {
 10550   003ECE  EF6B  F01F         	goto	l3866
 10551   003ED2                     l3864:
 10552                           
 10553                           ;i2c.c: 88:   clear_SDA();
 10554   003ED2  EC2B  F01D         	call	_clear_SDA	;wreg free
 10555   003ED6                     l3866:
 10556                           
 10557                           ;i2c.c: 90:  I2C_delay();
 10558   003ED6  EC68  F01C         	call	_I2C_delay	;wreg free
 10559   003EDA                     l3868:
 10560   003EDA  ECD0  F01D         	call	_read_SCL	;wreg free
 10561   003EDE  0900               	iorlw	0
 10562   003EE0  B4D8               	btfsc	status,2,c
 10563   003EE2  EF75  F01F         	goto	u4121
 10564   003EE6  EF77  F01F         	goto	u4120
 10565   003EEA                     u4121:
 10566   003EEA  EF6D  F01F         	goto	l3868
 10567   003EEE                     u4120:
 10568   003EEE                     
 10569                           ;i2c.c: 92:  if (bit && read_SDA() == 0) {
 10570   003EEE  5007               	movf	i2c_write_bit@bit^0,w,c
 10571   003EF0  B4D8               	btfsc	status,2,c
 10572   003EF2  EF7D  F01F         	goto	u4131
 10573   003EF6  EF7F  F01F         	goto	u4130
 10574   003EFA                     u4131:
 10575   003EFA  EF81  F01F         	goto	l3874
 10576   003EFE                     u4130:
 10577   003EFE  ECEC  F01D         	call	_read_SDA	;wreg free
 10578   003F02                     l3874:
 10579                           
 10580                           ;i2c.c: 95:  I2C_delay();
 10581   003F02  EC68  F01C         	call	_I2C_delay	;wreg free
 10582   003F06                     
 10583                           ;i2c.c: 96:  clear_SCL();
 10584   003F06  EC16  F01D         	call	_clear_SCL	;wreg free
 10585   003F0A                     
 10586                           ;i2c.c: 97:  I2C_delay();
 10587   003F0A  EC68  F01C         	call	_I2C_delay	;wreg free
 10588   003F0E  0012               	return		;funcret
 10589   003F10                     __end_of_i2c_write_bit:
 10590                           	callstack 0
 10591                           
 10592 ;; *************** function _i2c_stop *****************
 10593 ;; Defined at:
 10594 ;;		line 71 in file "i2c.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;		None
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;		None
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      void 
 10601 ;; Registers used:
 10602 ;;		wreg, status,2, status,0, cstack
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10608 ;;      Params:         0       0       0       0       0       0       0       0       0
 10609 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10610 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10611 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10612 ;;Total ram usage:        0 bytes
 10613 ;; Hardware stack levels used: 1
 10614 ;; Hardware stack levels required when called: 2
 10615 ;; This function calls:
 10616 ;;		_I2C_delay
 10617 ;;		_clear_SDA
 10618 ;;		_read_SCL
 10619 ;;		_read_SDA
 10620 ;; This function is called by:
 10621 ;;		_i2cWriteByte
 10622 ;;		_i2cReadByte
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           	psect	text40
 10627   003B08                     __ptext40:
 10628                           	callstack 0
 10629   003B08                     _i2c_stop:
 10630                           	callstack 24
 10631   003B08                     
 10632                           ;i2c.c: 73:  clear_SDA();
 10633   003B08  EC2B  F01D         	call	_clear_SDA	;wreg free
 10634   003B0C                     
 10635                           ;i2c.c: 74:  I2C_delay();
 10636   003B0C  EC68  F01C         	call	_I2C_delay	;wreg free
 10637   003B10                     l3850:
 10638   003B10  ECD0  F01D         	call	_read_SCL	;wreg free
 10639   003B14  0900               	iorlw	0
 10640   003B16  B4D8               	btfsc	status,2,c
 10641   003B18  EF90  F01D         	goto	u4101
 10642   003B1C  EF92  F01D         	goto	u4100
 10643   003B20                     u4101:
 10644   003B20  EF88  F01D         	goto	l3850
 10645   003B24                     u4100:
 10646   003B24                     
 10647                           ;i2c.c: 76:  I2C_delay();
 10648   003B24  EC68  F01C         	call	_I2C_delay	;wreg free
 10649   003B28                     
 10650                           ;i2c.c: 77:  if (read_SDA() == 0) {
 10651   003B28  ECEC  F01D         	call	_read_SDA	;wreg free
 10652   003B2C                     
 10653                           ;i2c.c: 80:  I2C_delay();
 10654   003B2C  EC68  F01C         	call	_I2C_delay	;wreg free
 10655   003B30                     
 10656                           ;i2c.c: 81:  started = 0;
 10657   003B30  0E00               	movlw	0
 10658   003B32  0100               	movlb	0	; () banked
 10659   003B34  6FBC               	movwf	_started& (0+255),b
 10660   003B36                     
 10661                           ; BSR set to: 0
 10662   003B36  0012               	return		;funcret
 10663   003B38                     __end_of_i2c_stop:
 10664                           	callstack 0
 10665                           
 10666 ;; *************** function _clear_SDA *****************
 10667 ;; Defined at:
 10668 ;;		line 45 in file "i2c.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;		None
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;		None
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  1    wreg      void 
 10675 ;; Registers used:
 10676 ;;		wreg, status,2, status,0, cstack
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10682 ;;      Params:         0       0       0       0       0       0       0       0       0
 10683 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10684 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10685 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10686 ;;Total ram usage:        0 bytes
 10687 ;; Hardware stack levels used: 1
 10688 ;; Hardware stack levels required when called: 1
 10689 ;; This function calls:
 10690 ;;		_digitalWrite
 10691 ;;		_pinMode
 10692 ;; This function is called by:
 10693 ;;		_i2c_start
 10694 ;;		_i2c_stop
 10695 ;;		_i2c_write_bit
 10696 ;; This function uses a non-reentrant model
 10697 ;;
 10698                           
 10699                           	psect	text41
 10700   003A56                     __ptext41:
 10701                           	callstack 0
 10702   003A56                     _clear_SDA:
 10703                           	callstack 24
 10704   003A56                     
 10705                           ;i2c.c: 47:  pinMode(PIN_B0,0);
 10706   003A56  0E00               	movlw	0
 10707   003A58  6E02               	movwf	(pinMode@pin+1)^0,c
 10708   003A5A  0E08               	movlw	8
 10709   003A5C  6E01               	movwf	pinMode@pin^0,c
 10710   003A5E  0E00               	movlw	0
 10711   003A60  6E04               	movwf	(pinMode@type+1)^0,c
 10712   003A62  0E00               	movlw	0
 10713   003A64  6E03               	movwf	pinMode@type^0,c
 10714   003A66  ECC4  F028         	call	_pinMode	;wreg free
 10715                           
 10716                           ;i2c.c: 48:  digitalWrite(PIN_B0,0);
 10717   003A6A  0E00               	movlw	0
 10718   003A6C  6E02               	movwf	(digitalWrite@pin+1)^0,c
 10719   003A6E  0E08               	movlw	8
 10720   003A70  6E01               	movwf	digitalWrite@pin^0,c
 10721   003A72  0E00               	movlw	0
 10722   003A74  6E04               	movwf	(digitalWrite@value+1)^0,c
 10723   003A76  0E00               	movlw	0
 10724   003A78  6E03               	movwf	digitalWrite@value^0,c
 10725   003A7A  ECEB  F029         	call	_digitalWrite	;wreg free
 10726   003A7E  0012               	return		;funcret
 10727   003A80                     __end_of_clear_SDA:
 10728                           	callstack 0
 10729                           
 10730 ;; *************** function _i2c_read_bit *****************
 10731 ;; Defined at:
 10732 ;;		line 100 in file "i2c.c"
 10733 ;; Parameters:    Size  Location     Type
 10734 ;;		None
 10735 ;; Auto vars:     Size  Location     Type
 10736 ;;  bit             1    6[COMRAM] unsigned char 
 10737 ;; Return value:  Size  Location     Type
 10738 ;;                  1    wreg      unsigned char 
 10739 ;; Registers used:
 10740 ;;		wreg, status,2, status,0, cstack
 10741 ;; Tracked objects:
 10742 ;;		On entry : 0/0
 10743 ;;		On exit  : 0/0
 10744 ;;		Unchanged: 0/0
 10745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10746 ;;      Params:         0       0       0       0       0       0       0       0       0
 10747 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10749 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10750 ;;Total ram usage:        1 bytes
 10751 ;; Hardware stack levels used: 1
 10752 ;; Hardware stack levels required when called: 2
 10753 ;; This function calls:
 10754 ;;		_I2C_delay
 10755 ;;		_clear_SCL
 10756 ;;		_read_SCL
 10757 ;;		_read_SDA
 10758 ;; This function is called by:
 10759 ;;		_i2cWriteByte
 10760 ;;		_i2cReadByte
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           	psect	text42
 10765   003B38                     __ptext42:
 10766                           	callstack 0
 10767   003B38                     _i2c_read_bit:
 10768                           	callstack 24
 10769   003B38                     
 10770                           ;i2c.c: 101:  unsigned char bit;;i2c.c: 102:  read_SDA();
 10771   003B38  ECEC  F01D         	call	_read_SDA	;wreg free
 10772   003B3C                     
 10773                           ;i2c.c: 103:  I2C_delay();
 10774   003B3C  EC68  F01C         	call	_I2C_delay	;wreg free
 10775   003B40                     l3884:
 10776   003B40  ECD0  F01D         	call	_read_SCL	;wreg free
 10777   003B44  0900               	iorlw	0
 10778   003B46  B4D8               	btfsc	status,2,c
 10779   003B48  EFA8  F01D         	goto	u4141
 10780   003B4C  EFAA  F01D         	goto	u4140
 10781   003B50                     u4141:
 10782   003B50  EFA0  F01D         	goto	l3884
 10783   003B54                     u4140:
 10784   003B54                     
 10785                           ;i2c.c: 105:  bit = read_SDA();
 10786   003B54  ECEC  F01D         	call	_read_SDA	;wreg free
 10787   003B58  6E07               	movwf	i2c_read_bit@bit^0,c
 10788   003B5A                     
 10789                           ;i2c.c: 106:  I2C_delay();
 10790   003B5A  EC68  F01C         	call	_I2C_delay	;wreg free
 10791   003B5E                     
 10792                           ;i2c.c: 107:  clear_SCL();
 10793   003B5E  EC16  F01D         	call	_clear_SCL	;wreg free
 10794                           
 10795                           ;i2c.c: 108:  I2C_delay();
 10796   003B62  EC68  F01C         	call	_I2C_delay	;wreg free
 10797   003B66                     
 10798                           ;i2c.c: 109:  return bit;
 10799   003B66  5007               	movf	i2c_read_bit@bit^0,w,c
 10800   003B68  0012               	return		;funcret
 10801   003B6A                     __end_of_i2c_read_bit:
 10802                           	callstack 0
 10803                           
 10804 ;; *************** function _read_SDA *****************
 10805 ;; Defined at:
 10806 ;;		line 34 in file "i2c.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;		None
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      unsigned char 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0
 10821 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10823 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10824 ;;Total ram usage:        0 bytes
 10825 ;; Hardware stack levels used: 1
 10826 ;; Hardware stack levels required when called: 1
 10827 ;; This function calls:
 10828 ;;		_digitalRead
 10829 ;;		_pinMode
 10830 ;; This function is called by:
 10831 ;;		_i2c_start
 10832 ;;		_i2c_stop
 10833 ;;		_i2c_write_bit
 10834 ;;		_i2c_read_bit
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           	psect	text43
 10839   003BD8                     __ptext43:
 10840                           	callstack 0
 10841   003BD8                     _read_SDA:
 10842                           	callstack 24
 10843   003BD8                     
 10844                           ;i2c.c: 36:  pinMode(PIN_B0,1);
 10845   003BD8  0E00               	movlw	0
 10846   003BDA  6E02               	movwf	(pinMode@pin+1)^0,c
 10847   003BDC  0E08               	movlw	8
 10848   003BDE  6E01               	movwf	pinMode@pin^0,c
 10849   003BE0  0E00               	movlw	0
 10850   003BE2  6E04               	movwf	(pinMode@type+1)^0,c
 10851   003BE4  0E01               	movlw	1
 10852   003BE6  6E03               	movwf	pinMode@type^0,c
 10853   003BE8  ECC4  F028         	call	_pinMode	;wreg free
 10854                           
 10855                           ;i2c.c: 37:  return !!digitalRead(PIN_B0);
 10856   003BEC  0E00               	movlw	0
 10857   003BEE  6E02               	movwf	(digitalRead@pin+1)^0,c
 10858   003BF0  0E08               	movlw	8
 10859   003BF2  6E01               	movwf	digitalRead@pin^0,c
 10860   003BF4  ECA0  F025         	call	_digitalRead	;wreg free
 10861   003BF8  5001               	movf	?_digitalRead^0,w,c
 10862   003BFA  1002               	iorwf	(?_digitalRead+1)^0,w,c
 10863   003BFC  A4D8               	btfss	status,2,c
 10864   003BFE  EF03  F01E         	goto	u4061
 10865   003C02  EF06  F01E         	goto	u4060
 10866   003C06                     u4061:
 10867   003C06  0E01               	movlw	1
 10868   003C08  EF07  F01E         	goto	u4070
 10869   003C0C                     u4060:
 10870   003C0C  0E00               	movlw	0
 10871   003C0E                     u4070:
 10872   003C0E  0012               	return		;funcret
 10873   003C10                     __end_of_read_SDA:
 10874                           	callstack 0
 10875                           
 10876 ;; *************** function _read_SCL *****************
 10877 ;; Defined at:
 10878 ;;		line 29 in file "i2c.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;		None
 10881 ;; Auto vars:     Size  Location     Type
 10882 ;;		None
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  1    wreg      unsigned char 
 10885 ;; Registers used:
 10886 ;;		wreg, status,2, status,0, cstack
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/0
 10889 ;;		On exit  : 0/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10892 ;;      Params:         0       0       0       0       0       0       0       0       0
 10893 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10894 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10895 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10896 ;;Total ram usage:        0 bytes
 10897 ;; Hardware stack levels used: 1
 10898 ;; Hardware stack levels required when called: 1
 10899 ;; This function calls:
 10900 ;;		_digitalRead
 10901 ;;		_pinMode
 10902 ;; This function is called by:
 10903 ;;		_i2c_start
 10904 ;;		_i2c_stop
 10905 ;;		_i2c_write_bit
 10906 ;;		_i2c_read_bit
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           	psect	text44
 10911   003BA0                     __ptext44:
 10912                           	callstack 0
 10913   003BA0                     _read_SCL:
 10914                           	callstack 24
 10915   003BA0                     
 10916                           ;i2c.c: 31:  pinMode(PIN_B1,1);
 10917   003BA0  0E00               	movlw	0
 10918   003BA2  6E02               	movwf	(pinMode@pin+1)^0,c
 10919   003BA4  0E09               	movlw	9
 10920   003BA6  6E01               	movwf	pinMode@pin^0,c
 10921   003BA8  0E00               	movlw	0
 10922   003BAA  6E04               	movwf	(pinMode@type+1)^0,c
 10923   003BAC  0E01               	movlw	1
 10924   003BAE  6E03               	movwf	pinMode@type^0,c
 10925   003BB0  ECC4  F028         	call	_pinMode	;wreg free
 10926                           
 10927                           ;i2c.c: 32:  return !!digitalRead(PIN_B1);
 10928   003BB4  0E00               	movlw	0
 10929   003BB6  6E02               	movwf	(digitalRead@pin+1)^0,c
 10930   003BB8  0E09               	movlw	9
 10931   003BBA  6E01               	movwf	digitalRead@pin^0,c
 10932   003BBC  ECA0  F025         	call	_digitalRead	;wreg free
 10933   003BC0  5001               	movf	?_digitalRead^0,w,c
 10934   003BC2  1002               	iorwf	(?_digitalRead+1)^0,w,c
 10935   003BC4  A4D8               	btfss	status,2,c
 10936   003BC6  EFE7  F01D         	goto	u4041
 10937   003BCA  EFEA  F01D         	goto	u4040
 10938   003BCE                     u4041:
 10939   003BCE  0E01               	movlw	1
 10940   003BD0  EFEB  F01D         	goto	u4050
 10941   003BD4                     u4040:
 10942   003BD4  0E00               	movlw	0
 10943   003BD6                     u4050:
 10944   003BD6  0012               	return		;funcret
 10945   003BD8                     __end_of_read_SCL:
 10946                           	callstack 0
 10947                           
 10948 ;; *************** function _digitalRead *****************
 10949 ;; Defined at:
 10950 ;;		line 39 in file "io.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  pin             2    0[COMRAM] int 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;		None
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  2    0[COMRAM] int 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10964 ;;      Params:         2       0       0       0       0       0       0       0       0
 10965 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10966 ;;      Temps:          3       0       0       0       0       0       0       0       0
 10967 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10968 ;;Total ram usage:        5 bytes
 10969 ;; Hardware stack levels used: 1
 10970 ;; This function calls:
 10971 ;;		Nothing
 10972 ;; This function is called by:
 10973 ;;		_read_SCL
 10974 ;;		_read_SDA
 10975 ;;		_ledBlink
 10976 ;; This function uses a non-reentrant model
 10977 ;;
 10978                           
 10979                           	psect	text45
 10980   004B40                     __ptext45:
 10981                           	callstack 0
 10982   004B40                     _digitalRead:
 10983                           	callstack 24
 10984   004B40                     
 10985                           ;io.c: 40:     if(pin <8){
 10986   004B40  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
 10987   004B42  EFAE  F025         	goto	u3740
 10988   004B46  5002               	movf	(digitalRead@pin+1)^0,w,c
 10989   004B48  E107               	bnz	u3741
 10990   004B4A  0E08               	movlw	8
 10991   004B4C  5C01               	subwf	digitalRead@pin^0,w,c
 10992   004B4E  B0D8               	btfsc	status,0,c
 10993   004B50  EFAC  F025         	goto	u3741
 10994   004B54  EFAE  F025         	goto	u3740
 10995   004B58                     u3741:
 10996   004B58  EFC2  F025         	goto	l3744
 10997   004B5C                     u3740:
 10998   004B5C                     
 10999                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
 11000   004B5C  C001  F003         	movff	digitalRead@pin,??_digitalRead
 11001   004B60  0E01               	movlw	1
 11002   004B62  6E04               	movwf	(??_digitalRead+1)^0,c
 11003   004B64  2A03               	incf	??_digitalRead^0,f,c
 11004   004B66  EFB7  F025         	goto	u3754
 11005   004B6A                     u3755:
 11006   004B6A  90D8               	bcf	status,0,c
 11007   004B6C  3604               	rlcf	(??_digitalRead+1)^0,f,c
 11008   004B6E                     u3754:
 11009   004B6E  2E03               	decfsz	??_digitalRead^0,f,c
 11010   004B70  EFB5  F025         	goto	u3755
 11011   004B74  5004               	movf	(??_digitalRead+1)^0,w,c
 11012   004B76  1480               	andwf	128,w,c	;volatile
 11013   004B78  6E05               	movwf	(??_digitalRead+2)^0,c
 11014   004B7A  5005               	movf	(??_digitalRead+2)^0,w,c
 11015   004B7C  6E01               	movwf	?_digitalRead^0,c
 11016   004B7E  6A02               	clrf	(?_digitalRead+1)^0,c
 11017   004B80  EF54  F026         	goto	l307
 11018   004B84                     l3744:
 11019   004B84  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
 11020   004B86  EFD0  F025         	goto	u3760
 11021   004B8A  5002               	movf	(digitalRead@pin+1)^0,w,c
 11022   004B8C  E107               	bnz	u3761
 11023   004B8E  0E10               	movlw	16
 11024   004B90  5C01               	subwf	digitalRead@pin^0,w,c
 11025   004B92  B0D8               	btfsc	status,0,c
 11026   004B94  EFCE  F025         	goto	u3761
 11027   004B98  EFD0  F025         	goto	u3760
 11028   004B9C                     u3761:
 11029   004B9C  EFE6  F025         	goto	l3752
 11030   004BA0                     u3760:
 11031   004BA0                     
 11032                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
 11033   004BA0  C001  F003         	movff	digitalRead@pin,??_digitalRead
 11034   004BA4  0EF8               	movlw	-8
 11035   004BA6  2603               	addwf	??_digitalRead^0,f,c
 11036   004BA8  0E01               	movlw	1
 11037   004BAA  6E04               	movwf	(??_digitalRead+1)^0,c
 11038   004BAC  2A03               	incf	??_digitalRead^0,f,c
 11039   004BAE  EFDB  F025         	goto	u3774
 11040   004BB2                     u3775:
 11041   004BB2  90D8               	bcf	status,0,c
 11042   004BB4  3604               	rlcf	(??_digitalRead+1)^0,f,c
 11043   004BB6                     u3774:
 11044   004BB6  2E03               	decfsz	??_digitalRead^0,f,c
 11045   004BB8  EFD9  F025         	goto	u3775
 11046   004BBC  5004               	movf	(??_digitalRead+1)^0,w,c
 11047   004BBE  1481               	andwf	129,w,c	;volatile
 11048   004BC0  6E05               	movwf	(??_digitalRead+2)^0,c
 11049   004BC2  5005               	movf	(??_digitalRead+2)^0,w,c
 11050   004BC4  6E01               	movwf	?_digitalRead^0,c
 11051   004BC6  6A02               	clrf	(?_digitalRead+1)^0,c
 11052   004BC8  EF54  F026         	goto	l307
 11053   004BCC                     l3752:
 11054   004BCC  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
 11055   004BCE  EFF4  F025         	goto	u3780
 11056   004BD2  5002               	movf	(digitalRead@pin+1)^0,w,c
 11057   004BD4  E107               	bnz	u3781
 11058   004BD6  0E18               	movlw	24
 11059   004BD8  5C01               	subwf	digitalRead@pin^0,w,c
 11060   004BDA  B0D8               	btfsc	status,0,c
 11061   004BDC  EFF2  F025         	goto	u3781
 11062   004BE0  EFF4  F025         	goto	u3780
 11063   004BE4                     u3781:
 11064   004BE4  EF0A  F026         	goto	l3760
 11065   004BE8                     u3780:
 11066   004BE8                     
 11067                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
 11068   004BE8  C001  F003         	movff	digitalRead@pin,??_digitalRead
 11069   004BEC  0EF0               	movlw	-16
 11070   004BEE  2603               	addwf	??_digitalRead^0,f,c
 11071   004BF0  0E01               	movlw	1
 11072   004BF2  6E04               	movwf	(??_digitalRead+1)^0,c
 11073   004BF4  2A03               	incf	??_digitalRead^0,f,c
 11074   004BF6  EFFF  F025         	goto	u3794
 11075   004BFA                     u3795:
 11076   004BFA  90D8               	bcf	status,0,c
 11077   004BFC  3604               	rlcf	(??_digitalRead+1)^0,f,c
 11078   004BFE                     u3794:
 11079   004BFE  2E03               	decfsz	??_digitalRead^0,f,c
 11080   004C00  EFFD  F025         	goto	u3795
 11081   004C04  5004               	movf	(??_digitalRead+1)^0,w,c
 11082   004C06  1482               	andwf	130,w,c	;volatile
 11083   004C08  6E05               	movwf	(??_digitalRead+2)^0,c
 11084   004C0A  5005               	movf	(??_digitalRead+2)^0,w,c
 11085   004C0C  6E01               	movwf	?_digitalRead^0,c
 11086   004C0E  6A02               	clrf	(?_digitalRead+1)^0,c
 11087   004C10  EF54  F026         	goto	l307
 11088   004C14                     l3760:
 11089   004C14  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
 11090   004C16  EF18  F026         	goto	u3800
 11091   004C1A  5002               	movf	(digitalRead@pin+1)^0,w,c
 11092   004C1C  E107               	bnz	u3801
 11093   004C1E  0E20               	movlw	32
 11094   004C20  5C01               	subwf	digitalRead@pin^0,w,c
 11095   004C22  B0D8               	btfsc	status,0,c
 11096   004C24  EF16  F026         	goto	u3801
 11097   004C28  EF18  F026         	goto	u3800
 11098   004C2C                     u3801:
 11099   004C2C  EF2E  F026         	goto	l3768
 11100   004C30                     u3800:
 11101   004C30                     
 11102                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
 11103   004C30  C001  F003         	movff	digitalRead@pin,??_digitalRead
 11104   004C34  0EE8               	movlw	-24
 11105   004C36  2603               	addwf	??_digitalRead^0,f,c
 11106   004C38  0E01               	movlw	1
 11107   004C3A  6E04               	movwf	(??_digitalRead+1)^0,c
 11108   004C3C  2A03               	incf	??_digitalRead^0,f,c
 11109   004C3E  EF23  F026         	goto	u3814
 11110   004C42                     u3815:
 11111   004C42  90D8               	bcf	status,0,c
 11112   004C44  3604               	rlcf	(??_digitalRead+1)^0,f,c
 11113   004C46                     u3814:
 11114   004C46  2E03               	decfsz	??_digitalRead^0,f,c
 11115   004C48  EF21  F026         	goto	u3815
 11116   004C4C  5004               	movf	(??_digitalRead+1)^0,w,c
 11117   004C4E  1483               	andwf	131,w,c	;volatile
 11118   004C50  6E05               	movwf	(??_digitalRead+2)^0,c
 11119   004C52  5005               	movf	(??_digitalRead+2)^0,w,c
 11120   004C54  6E01               	movwf	?_digitalRead^0,c
 11121   004C56  6A02               	clrf	(?_digitalRead+1)^0,c
 11122   004C58  EF54  F026         	goto	l307
 11123   004C5C                     l3768:
 11124   004C5C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
 11125   004C5E  EF3C  F026         	goto	u3820
 11126   004C62  5002               	movf	(digitalRead@pin+1)^0,w,c
 11127   004C64  E107               	bnz	u3821
 11128   004C66  0E28               	movlw	40
 11129   004C68  5C01               	subwf	digitalRead@pin^0,w,c
 11130   004C6A  B0D8               	btfsc	status,0,c
 11131   004C6C  EF3A  F026         	goto	u3821
 11132   004C70  EF3C  F026         	goto	u3820
 11133   004C74                     u3821:
 11134   004C74  EF52  F026         	goto	l312
 11135   004C78                     u3820:
 11136   004C78                     
 11137                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
 11138   004C78  C001  F003         	movff	digitalRead@pin,??_digitalRead
 11139   004C7C  0EE0               	movlw	-32
 11140   004C7E  2603               	addwf	??_digitalRead^0,f,c
 11141   004C80  0E01               	movlw	1
 11142   004C82  6E04               	movwf	(??_digitalRead+1)^0,c
 11143   004C84  2A03               	incf	??_digitalRead^0,f,c
 11144   004C86  EF47  F026         	goto	u3834
 11145   004C8A                     u3835:
 11146   004C8A  90D8               	bcf	status,0,c
 11147   004C8C  3604               	rlcf	(??_digitalRead+1)^0,f,c
 11148   004C8E                     u3834:
 11149   004C8E  2E03               	decfsz	??_digitalRead^0,f,c
 11150   004C90  EF45  F026         	goto	u3835
 11151   004C94  5004               	movf	(??_digitalRead+1)^0,w,c
 11152   004C96  1484               	andwf	132,w,c	;volatile
 11153   004C98  6E05               	movwf	(??_digitalRead+2)^0,c
 11154   004C9A  5005               	movf	(??_digitalRead+2)^0,w,c
 11155   004C9C  6E01               	movwf	?_digitalRead^0,c
 11156   004C9E  6A02               	clrf	(?_digitalRead+1)^0,c
 11157   004CA0  EF54  F026         	goto	l307
 11158   004CA4                     l312:
 11159   004CA4                     
 11160                           ;io.c: 51:     return -1;
 11161   004CA4  6801               	setf	?_digitalRead^0,c
 11162   004CA6  6802               	setf	(?_digitalRead+1)^0,c
 11163   004CA8                     l307:
 11164   004CA8  0012               	return		;funcret
 11165   004CAA                     __end_of_digitalRead:
 11166                           	callstack 0
 11167                           
 11168 ;; *************** function _clear_SCL *****************
 11169 ;; Defined at:
 11170 ;;		line 39 in file "i2c.c"
 11171 ;; Parameters:    Size  Location     Type
 11172 ;;		None
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;		None
 11175 ;; Return value:  Size  Location     Type
 11176 ;;                  1    wreg      void 
 11177 ;; Registers used:
 11178 ;;		wreg, status,2, status,0, cstack
 11179 ;; Tracked objects:
 11180 ;;		On entry : 0/0
 11181 ;;		On exit  : 0/0
 11182 ;;		Unchanged: 0/0
 11183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11184 ;;      Params:         0       0       0       0       0       0       0       0       0
 11185 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11186 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11187 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11188 ;;Total ram usage:        0 bytes
 11189 ;; Hardware stack levels used: 1
 11190 ;; Hardware stack levels required when called: 1
 11191 ;; This function calls:
 11192 ;;		_digitalWrite
 11193 ;;		_pinMode
 11194 ;; This function is called by:
 11195 ;;		_i2c_start
 11196 ;;		_i2c_write_bit
 11197 ;;		_i2c_read_bit
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text46
 11202   003A2C                     __ptext46:
 11203                           	callstack 0
 11204   003A2C                     _clear_SCL:
 11205                           	callstack 24
 11206   003A2C                     
 11207                           ;i2c.c: 41:  pinMode(PIN_B1,0);
 11208   003A2C  0E00               	movlw	0
 11209   003A2E  6E02               	movwf	(pinMode@pin+1)^0,c
 11210   003A30  0E09               	movlw	9
 11211   003A32  6E01               	movwf	pinMode@pin^0,c
 11212   003A34  0E00               	movlw	0
 11213   003A36  6E04               	movwf	(pinMode@type+1)^0,c
 11214   003A38  0E00               	movlw	0
 11215   003A3A  6E03               	movwf	pinMode@type^0,c
 11216   003A3C  ECC4  F028         	call	_pinMode	;wreg free
 11217                           
 11218                           ;i2c.c: 42:  digitalWrite(PIN_B1,0);
 11219   003A40  0E00               	movlw	0
 11220   003A42  6E02               	movwf	(digitalWrite@pin+1)^0,c
 11221   003A44  0E09               	movlw	9
 11222   003A46  6E01               	movwf	digitalWrite@pin^0,c
 11223   003A48  0E00               	movlw	0
 11224   003A4A  6E04               	movwf	(digitalWrite@value+1)^0,c
 11225   003A4C  0E00               	movlw	0
 11226   003A4E  6E03               	movwf	digitalWrite@value^0,c
 11227   003A50  ECEB  F029         	call	_digitalWrite	;wreg free
 11228   003A54  0012               	return		;funcret
 11229   003A56                     __end_of_clear_SCL:
 11230                           	callstack 0
 11231                           
 11232 ;; *************** function _I2C_delay *****************
 11233 ;; Defined at:
 11234 ;;		line 22 in file "i2c.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;  i               2    0        int 
 11239 ;;  v               2    0        volatile int 
 11240 ;; Return value:  Size  Location     Type
 11241 ;;                  1    wreg      void 
 11242 ;; Registers used:
 11243 ;;		None
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0
 11250 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11251 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11252 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11253 ;;Total ram usage:        0 bytes
 11254 ;; Hardware stack levels used: 1
 11255 ;; This function calls:
 11256 ;;		Nothing
 11257 ;; This function is called by:
 11258 ;;		_i2c_start
 11259 ;;		_i2c_stop
 11260 ;;		_i2c_write_bit
 11261 ;;		_i2c_read_bit
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text47
 11266   0038D0                     __ptext47:
 11267                           	callstack 0
 11268   0038D0                     _I2C_delay:
 11269                           	callstack 25
 11270   0038D0  0012               	return		;funcret
 11271   0038D2                     __end_of_I2C_delay:
 11272                           	callstack 0
 11273                           
 11274 ;; *************** function _serialString *****************
 11275 ;; Defined at:
 11276 ;;		line 33 in file "serial.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;  msg             2    1[COMRAM] PTR unsigned char 
 11279 ;;		 -> STR_49(31), STR_48(30), STR_47(32), STR_46(29), 
 11280 ;;		 -> STR_41(9), STR_40(9), STR_39(9), STR_38(9), 
 11281 ;;		 -> STR_37(9), STR_36(9), STR_35(9), STR_34(9), 
 11282 ;;		 -> STR_33(16), STR_32(16), STR_31(16), STR_30(16), 
 11283 ;;		 -> STR_29(16), STR_28(16), STR_27(10), STR_26(10), 
 11284 ;;		 -> STR_25(17), STR_24(16), STR_23(17), STR_22(16), 
 11285 ;;		 -> STR_21(17), STR_20(16), STR_19(17), STR_18(16), 
 11286 ;;		 -> STR_17(17), STR_16(16), STR_15(17), STR_14(16), 
 11287 ;;		 -> STR_13(16), STR_12(16), STR_11(10), STR_10(10), 
 11288 ;;		 -> STR_9(38), STR_8(28), STR_7(28), STR_6(28), 
 11289 ;;		 -> STR_5(28), STR_4(28), STR_3(28), STR_2(28), 
 11290 ;;		 -> STR_1(28), protocolo(32), 
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  i               2    5[COMRAM] int 
 11293 ;; Return value:  Size  Location     Type
 11294 ;;                  1    wreg      void 
 11295 ;; Registers used:
 11296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11297 ;; Tracked objects:
 11298 ;;		On entry : 0/0
 11299 ;;		On exit  : 0/0
 11300 ;;		Unchanged: 0/0
 11301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11302 ;;      Params:         2       0       0       0       0       0       0       0       0
 11303 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11304 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11305 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11306 ;;Total ram usage:        6 bytes
 11307 ;; Hardware stack levels used: 1
 11308 ;; Hardware stack levels required when called: 1
 11309 ;; This function calls:
 11310 ;;		_serialSend
 11311 ;; This function is called by:
 11312 ;;		_eventRead
 11313 ;;		_processarProtocolo
 11314 ;;		_outputPrint
 11315 ;; This function uses a non-reentrant model
 11316 ;;
 11317                           
 11318                           	psect	text48
 11319   004130                     __ptext48:
 11320                           	callstack 0
 11321   004130                     _serialString:
 11322                           	callstack 27
 11323   004130                     
 11324                           ;serial.c: 34:     int i = 0;
 11325   004130  0E00               	movlw	0
 11326   004132  6E07               	movwf	(serialString@i+1)^0,c
 11327   004134  0E00               	movlw	0
 11328   004136  6E06               	movwf	serialString@i^0,c
 11329                           
 11330                           ;serial.c: 35:  while (msg[i] != 0) {
 11331   004138  EFB8  F020         	goto	l4476
 11332   00413C                     l4472:
 11333                           
 11334                           ;serial.c: 36:   serialSend(msg[i]);
 11335   00413C  5006               	movf	serialString@i^0,w,c
 11336   00413E  2402               	addwf	serialString@msg^0,w,c
 11337   004140  6E04               	movwf	??_serialString^0,c
 11338   004142  5007               	movf	(serialString@i+1)^0,w,c
 11339   004144  2003               	addwfc	(serialString@msg+1)^0,w,c
 11340   004146  6E05               	movwf	(??_serialString+1)^0,c
 11341   004148  C004  FFF6         	movff	??_serialString,tblptrl
 11342   00414C  C005  FFF7         	movff	??_serialString+1,tblptrh
 11343   004150  6AF8               	clrf	tblptru,c
 11344   004152  0E07               	movlw	(high __ramtop+-1)
 11345   004154  64F7               	cpfsgt	tblptrh,c
 11346   004156  D003               	bra	u5207
 11347   004158  0008               	tblrd		*
 11348   00415A  50F5               	movf	tablat,w,c
 11349   00415C  D005               	bra	u5200
 11350   00415E                     u5207:
 11351   00415E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11352   004162  CFF7 FFEA          	movff	tblptrh,fsr0h
 11353   004166  50EF               	movf	indf0,w,c
 11354   004168                     u5200:
 11355   004168  EC9F  F01C         	call	_serialSend
 11356   00416C                     
 11357                           ;serial.c: 37:   i++;
 11358   00416C  4A06               	infsnz	serialString@i^0,f,c
 11359   00416E  2A07               	incf	(serialString@i+1)^0,f,c
 11360   004170                     l4476:
 11361                           
 11362                           ;serial.c: 35:  while (msg[i] != 0) {
 11363   004170  5006               	movf	serialString@i^0,w,c
 11364   004172  2402               	addwf	serialString@msg^0,w,c
 11365   004174  6E04               	movwf	??_serialString^0,c
 11366   004176  5007               	movf	(serialString@i+1)^0,w,c
 11367   004178  2003               	addwfc	(serialString@msg+1)^0,w,c
 11368   00417A  6E05               	movwf	(??_serialString+1)^0,c
 11369   00417C  C004  FFF6         	movff	??_serialString,tblptrl
 11370   004180  C005  FFF7         	movff	??_serialString+1,tblptrh
 11371   004184  6AF8               	clrf	tblptru,c
 11372   004186  0E07               	movlw	(high __ramtop+-1)
 11373   004188  64F7               	cpfsgt	tblptrh,c
 11374   00418A  D003               	bra	u5217
 11375   00418C  0008               	tblrd		*
 11376   00418E  50F5               	movf	tablat,w,c
 11377   004190  D005               	bra	u5210
 11378   004192                     u5217:
 11379   004192  CFF6 FFE9          	movff	tblptrl,fsr0l
 11380   004196  CFF7 FFEA          	movff	tblptrh,fsr0h
 11381   00419A  50EF               	movf	indf0,w,c
 11382   00419C                     u5210:
 11383   00419C  0900               	iorlw	0
 11384   00419E  A4D8               	btfss	status,2,c
 11385   0041A0  EFD4  F020         	goto	u5221
 11386   0041A4  EFD6  F020         	goto	u5220
 11387   0041A8                     u5221:
 11388   0041A8  EF9E  F020         	goto	l4472
 11389   0041AC                     u5220:
 11390   0041AC  0012               	return		;funcret
 11391   0041AE                     __end_of_serialString:
 11392                           	callstack 0
 11393                           
 11394 ;; *************** function _serialSend *****************
 11395 ;; Defined at:
 11396 ;;		line 41 in file "serial.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;  c               1    wreg     unsigned char 
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;  c               1    0[COMRAM] unsigned char 
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      void 
 11403 ;; Registers used:
 11404 ;;		wreg
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11410 ;;      Params:         0       0       0       0       0       0       0       0       0
 11411 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11413 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11414 ;;Total ram usage:        1 bytes
 11415 ;; Hardware stack levels used: 1
 11416 ;; This function calls:
 11417 ;;		Nothing
 11418 ;; This function is called by:
 11419 ;;		_serialInt
 11420 ;;		_serialString
 11421 ;;		_outputPrint
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text49
 11426   00393E                     __ptext49:
 11427                           	callstack 0
 11428   00393E                     _serialSend:
 11429                           	callstack 27
 11430                           
 11431                           ;incstack = 0
 11432                           ;serialSend@c stored from wreg
 11433   00393E  6E01               	movwf	serialSend@c^0,c
 11434   003940                     l507:
 11435   003940  A89E               	btfss	158,4,c	;volatile
 11436   003942  EFA5  F01C         	goto	u5171
 11437   003946  EFA7  F01C         	goto	u5170
 11438   00394A                     u5171:
 11439   00394A  EFA0  F01C         	goto	l507
 11440   00394E                     u5170:
 11441   00394E                     
 11442                           ;serial.c: 43:     TXREG = c;
 11443   00394E  C001  FFAD         	movff	serialSend@c,4013	;volatile
 11444   003952  0012               	return		;funcret
 11445   003954                     __end_of_serialSend:
 11446                           	callstack 0
 11447                           
 11448 ;; *************** function ___wmul *****************
 11449 ;; Defined at:
 11450 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;  multiplier      2    0[COMRAM] unsigned int 
 11453 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11454 ;; Auto vars:     Size  Location     Type
 11455 ;;  product         2    4[COMRAM] unsigned int 
 11456 ;; Return value:  Size  Location     Type
 11457 ;;                  2    0[COMRAM] unsigned int 
 11458 ;; Registers used:
 11459 ;;		wreg, status,2, status,0, prodl, prodh
 11460 ;; Tracked objects:
 11461 ;;		On entry : 0/0
 11462 ;;		On exit  : 0/0
 11463 ;;		Unchanged: 0/0
 11464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11465 ;;      Params:         4       0       0       0       0       0       0       0       0
 11466 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11467 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11468 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11469 ;;Total ram usage:        6 bytes
 11470 ;; Hardware stack levels used: 1
 11471 ;; This function calls:
 11472 ;;		Nothing
 11473 ;; This function is called by:
 11474 ;;		_processarProtocolo
 11475 ;;		_pwmSet
 11476 ;;		_bcd2dec
 11477 ;; This function uses a non-reentrant model
 11478 ;;
 11479                           
 11480                           	psect	text50
 11481   0039DC                     __ptext50:
 11482                           	callstack 0
 11483   0039DC                     ___wmul:
 11484                           	callstack 27
 11485   0039DC  5001               	movf	___wmul@multiplier^0,w,c
 11486   0039DE  0203               	mulwf	___wmul@multiplicand^0,c
 11487   0039E0  CFF3 F005          	movff	prodl,___wmul@product
 11488   0039E4  CFF4 F006          	movff	prodh,___wmul@product+1
 11489   0039E8  5001               	movf	___wmul@multiplier^0,w,c
 11490   0039EA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11491   0039EC  50F3               	movf	243,w,c
 11492   0039EE  2606               	addwf	(___wmul@product+1)^0,f,c
 11493   0039F0  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11494   0039F2  0203               	mulwf	___wmul@multiplicand^0,c
 11495   0039F4  50F3               	movf	243,w,c
 11496   0039F6  2606               	addwf	(___wmul@product+1)^0,f,c
 11497   0039F8  C005  F001         	movff	___wmul@product,?___wmul
 11498   0039FC  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11499   003A00  0012               	return		;funcret
 11500   003A02                     __end_of___wmul:
 11501                           	callstack 0
 11502                           
 11503 ;; *************** function _memset *****************
 11504 ;; Defined at:
 11505 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memset.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;  dest            2    0[COMRAM] PTR void 
 11508 ;;		 -> protocolo(32), 
 11509 ;;  c               2    2[COMRAM] int 
 11510 ;;  n               2    4[COMRAM] unsigned int 
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;  s               2   10[COMRAM] PTR unsigned char 
 11513 ;;		 -> protocolo(32), 
 11514 ;;  k               2    8[COMRAM] unsigned int 
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  2    0[COMRAM] PTR void 
 11517 ;; Registers used:
 11518 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11524 ;;      Params:         6       0       0       0       0       0       0       0       0
 11525 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11526 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11527 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11528 ;;Total ram usage:       12 bytes
 11529 ;; Hardware stack levels used: 1
 11530 ;; This function calls:
 11531 ;;		Nothing
 11532 ;; This function is called by:
 11533 ;;		_eventRead
 11534 ;; This function uses a non-reentrant model
 11535 ;;
 11536                           
 11537                           	psect	text51
 11538   004CAA                     __ptext51:
 11539                           	callstack 0
 11540   004CAA                     _memset:
 11541                           	callstack 28
 11542   004CAA  C001  F00B         	movff	memset@dest,memset@s
 11543   004CAE  C002  F00C         	movff	memset@dest+1,memset@s+1
 11544   004CB2  5005               	movf	memset@n^0,w,c
 11545   004CB4  1006               	iorwf	(memset@n+1)^0,w,c
 11546   004CB6  A4D8               	btfss	status,2,c
 11547   004CB8  EF60  F026         	goto	u5551
 11548   004CBC  EF62  F026         	goto	u5550
 11549   004CC0                     u5551:
 11550   004CC0  EF64  F026         	goto	l4778
 11551   004CC4                     u5550:
 11552   004CC4  EF0F  F027         	goto	l1542
 11553   004CC8                     l4778:
 11554   004CC8  C00B  FFD9         	movff	memset@s,fsr2l
 11555   004CCC  C00C  FFDA         	movff	memset@s+1,fsr2h
 11556   004CD0  C003  FFDF         	movff	memset@c,indf2
 11557   004CD4  5005               	movf	memset@n^0,w,c
 11558   004CD6  240B               	addwf	memset@s^0,w,c
 11559   004CD8  6E07               	movwf	??_memset^0,c
 11560   004CDA  5006               	movf	(memset@n+1)^0,w,c
 11561   004CDC  200C               	addwfc	(memset@s+1)^0,w,c
 11562   004CDE  6E08               	movwf	(??_memset+1)^0,c
 11563   004CE0  0EFF               	movlw	255
 11564   004CE2  2407               	addwf	??_memset^0,w,c
 11565   004CE4  6ED9               	movwf	fsr2l,c
 11566   004CE6  0EFF               	movlw	255
 11567   004CE8  2008               	addwfc	(??_memset+1)^0,w,c
 11568   004CEA  6EDA               	movwf	fsr2h,c
 11569   004CEC  C003  FFDF         	movff	memset@c,indf2
 11570   004CF0  5006               	movf	(memset@n+1)^0,w,c
 11571   004CF2  E107               	bnz	u5561
 11572   004CF4  0E03               	movlw	3
 11573   004CF6  5C05               	subwf	memset@n^0,w,c
 11574   004CF8  B0D8               	btfsc	status,0,c
 11575   004CFA  EF81  F026         	goto	u5561
 11576   004CFE  EF83  F026         	goto	u5560
 11577   004D02                     u5561:
 11578   004D02  EF85  F026         	goto	l4784
 11579   004D06                     u5560:
 11580   004D06  EF0F  F027         	goto	l1542
 11581   004D0A                     l4784:
 11582   004D0A  EE20 F001          	lfsr	2,1
 11583   004D0E  500B               	movf	memset@s^0,w,c
 11584   004D10  26D9               	addwf	fsr2l,f,c
 11585   004D12  500C               	movf	(memset@s+1)^0,w,c
 11586   004D14  22DA               	addwfc	fsr2h,f,c
 11587   004D16  C003  FFDF         	movff	memset@c,indf2
 11588   004D1A  EE20 F002          	lfsr	2,2
 11589   004D1E  500B               	movf	memset@s^0,w,c
 11590   004D20  26D9               	addwf	fsr2l,f,c
 11591   004D22  500C               	movf	(memset@s+1)^0,w,c
 11592   004D24  22DA               	addwfc	fsr2h,f,c
 11593   004D26  C003  FFDF         	movff	memset@c,indf2
 11594   004D2A  5005               	movf	memset@n^0,w,c
 11595   004D2C  240B               	addwf	memset@s^0,w,c
 11596   004D2E  6E07               	movwf	??_memset^0,c
 11597   004D30  5006               	movf	(memset@n+1)^0,w,c
 11598   004D32  200C               	addwfc	(memset@s+1)^0,w,c
 11599   004D34  6E08               	movwf	(??_memset+1)^0,c
 11600   004D36  0EFE               	movlw	254
 11601   004D38  2407               	addwf	??_memset^0,w,c
 11602   004D3A  6ED9               	movwf	fsr2l,c
 11603   004D3C  0EFF               	movlw	255
 11604   004D3E  2008               	addwfc	(??_memset+1)^0,w,c
 11605   004D40  6EDA               	movwf	fsr2h,c
 11606   004D42  C003  FFDF         	movff	memset@c,indf2
 11607   004D46  5005               	movf	memset@n^0,w,c
 11608   004D48  240B               	addwf	memset@s^0,w,c
 11609   004D4A  6E07               	movwf	??_memset^0,c
 11610   004D4C  5006               	movf	(memset@n+1)^0,w,c
 11611   004D4E  200C               	addwfc	(memset@s+1)^0,w,c
 11612   004D50  6E08               	movwf	(??_memset+1)^0,c
 11613   004D52  0EFD               	movlw	253
 11614   004D54  2407               	addwf	??_memset^0,w,c
 11615   004D56  6ED9               	movwf	fsr2l,c
 11616   004D58  0EFF               	movlw	255
 11617   004D5A  2008               	addwfc	(??_memset+1)^0,w,c
 11618   004D5C  6EDA               	movwf	fsr2h,c
 11619   004D5E  C003  FFDF         	movff	memset@c,indf2
 11620   004D62  5006               	movf	(memset@n+1)^0,w,c
 11621   004D64  E107               	bnz	u5571
 11622   004D66  0E07               	movlw	7
 11623   004D68  5C05               	subwf	memset@n^0,w,c
 11624   004D6A  B0D8               	btfsc	status,0,c
 11625   004D6C  EFBA  F026         	goto	u5571
 11626   004D70  EFBC  F026         	goto	u5570
 11627   004D74                     u5571:
 11628   004D74  EFBE  F026         	goto	l4790
 11629   004D78                     u5570:
 11630   004D78  EF0F  F027         	goto	l1542
 11631   004D7C                     l4790:
 11632   004D7C  EE20 F003          	lfsr	2,3
 11633   004D80  500B               	movf	memset@s^0,w,c
 11634   004D82  26D9               	addwf	fsr2l,f,c
 11635   004D84  500C               	movf	(memset@s+1)^0,w,c
 11636   004D86  22DA               	addwfc	fsr2h,f,c
 11637   004D88  C003  FFDF         	movff	memset@c,indf2
 11638   004D8C  5005               	movf	memset@n^0,w,c
 11639   004D8E  240B               	addwf	memset@s^0,w,c
 11640   004D90  6E07               	movwf	??_memset^0,c
 11641   004D92  5006               	movf	(memset@n+1)^0,w,c
 11642   004D94  200C               	addwfc	(memset@s+1)^0,w,c
 11643   004D96  6E08               	movwf	(??_memset+1)^0,c
 11644   004D98  0EFC               	movlw	252
 11645   004D9A  2407               	addwf	??_memset^0,w,c
 11646   004D9C  6ED9               	movwf	fsr2l,c
 11647   004D9E  0EFF               	movlw	255
 11648   004DA0  2008               	addwfc	(??_memset+1)^0,w,c
 11649   004DA2  6EDA               	movwf	fsr2h,c
 11650   004DA4  C003  FFDF         	movff	memset@c,indf2
 11651   004DA8  5006               	movf	(memset@n+1)^0,w,c
 11652   004DAA  E107               	bnz	u5581
 11653   004DAC  0E09               	movlw	9
 11654   004DAE  5C05               	subwf	memset@n^0,w,c
 11655   004DB0  B0D8               	btfsc	status,0,c
 11656   004DB2  EFDD  F026         	goto	u5581
 11657   004DB6  EFDF  F026         	goto	u5580
 11658   004DBA                     u5581:
 11659   004DBA  EFE1  F026         	goto	l4796
 11660   004DBE                     u5580:
 11661   004DBE  EF0F  F027         	goto	l1542
 11662   004DC2                     l4796:
 11663   004DC2  C00B  F007         	movff	memset@s,??_memset
 11664   004DC6  C00C  F008         	movff	memset@s+1,??_memset+1
 11665   004DCA  1E07               	comf	??_memset^0,f,c
 11666   004DCC  1E08               	comf	(??_memset+1)^0,f,c
 11667   004DCE  4A07               	infsnz	??_memset^0,f,c
 11668   004DD0  2A08               	incf	(??_memset+1)^0,f,c
 11669   004DD2  0E03               	movlw	3
 11670   004DD4  1407               	andwf	??_memset^0,w,c
 11671   004DD6  6E09               	movwf	memset@k^0,c
 11672   004DD8  6A0A               	clrf	(memset@k+1)^0,c
 11673   004DDA  5009               	movf	memset@k^0,w,c
 11674   004DDC  260B               	addwf	memset@s^0,f,c
 11675   004DDE  500A               	movf	(memset@k+1)^0,w,c
 11676   004DE0  220C               	addwfc	(memset@s+1)^0,f,c
 11677   004DE2  5009               	movf	memset@k^0,w,c
 11678   004DE4  5E05               	subwf	memset@n^0,f,c
 11679   004DE6  500A               	movf	(memset@k+1)^0,w,c
 11680   004DE8  5A06               	subwfb	(memset@n+1)^0,f,c
 11681   004DEA  0EFC               	movlw	252
 11682   004DEC  1605               	andwf	memset@n^0,f,c
 11683   004DEE  0EFF               	movlw	255
 11684   004DF0  1606               	andwf	(memset@n+1)^0,f,c
 11685   004DF2  EF06  F027         	goto	l4804
 11686   004DF6                     l4798:
 11687   004DF6  C00B  FFD9         	movff	memset@s,fsr2l
 11688   004DFA  C00C  FFDA         	movff	memset@s+1,fsr2h
 11689   004DFE  C003  FFDF         	movff	memset@c,indf2
 11690   004E02  0605               	decf	memset@n^0,f,c
 11691   004E04  A0D8               	btfss	status,0,c
 11692   004E06  0606               	decf	(memset@n+1)^0,f,c
 11693   004E08  4A0B               	infsnz	memset@s^0,f,c
 11694   004E0A  2A0C               	incf	(memset@s+1)^0,f,c
 11695   004E0C                     l4804:
 11696   004E0C  5005               	movf	memset@n^0,w,c
 11697   004E0E  1006               	iorwf	(memset@n+1)^0,w,c
 11698   004E10  A4D8               	btfss	status,2,c
 11699   004E12  EF0D  F027         	goto	u5591
 11700   004E16  EF0F  F027         	goto	u5590
 11701   004E1A                     u5591:
 11702   004E1A  EFFB  F026         	goto	l4798
 11703   004E1E                     u5590:
 11704   004E1E                     l1542:
 11705   004E1E  0012               	return		;funcret
 11706   004E20                     __end_of_memset:
 11707                           	callstack 0
 11708                           
 11709 ;; *************** function _kpRead *****************
 11710 ;; Defined at:
 11711 ;;		line 19 in file "keypad.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;		None
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;		None
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      unsigned char 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2, status,0
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11725 ;;      Params:         0       0       0       0       0       0       0       0       0
 11726 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11727 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11728 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11729 ;;Total ram usage:        2 bytes
 11730 ;; Hardware stack levels used: 1
 11731 ;; This function calls:
 11732 ;;		Nothing
 11733 ;; This function is called by:
 11734 ;;		_eventRead
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           	psect	text52
 11739   003FD2                     __ptext52:
 11740                           	callstack 0
 11741   003FD2                     _kpRead:
 11742                           	callstack 28
 11743   003FD2                     
 11744                           ;keypad.c: 21:     for (j = 0; j < 5; j++)
 11745   003FD2  0E00               	movlw	0
 11746   003FD4  0100               	movlb	0	; () banked
 11747   003FD6  6FB9               	movwf	_j& (0+255),b
 11748   003FD8                     l4744:
 11749                           
 11750                           ; BSR set to: 0
 11751                           ;keypad.c: 22:     {;keypad.c: 23:         if (!((PORTD) & (1<<(j))))
 11752   003FD8  C0B9  F001         	movff	_j,??_kpRead
 11753   003FDC  0E01               	movlw	1
 11754   003FDE  6E02               	movwf	(??_kpRead+1)^0,c
 11755   003FE0  2A01               	incf	??_kpRead^0,f,c
 11756   003FE2  EFF5  F01F         	goto	u5494
 11757   003FE6                     u5495:
 11758   003FE6  90D8               	bcf	status,0,c
 11759   003FE8  3602               	rlcf	(??_kpRead+1)^0,f,c
 11760   003FEA                     u5494:
 11761   003FEA  2E01               	decfsz	??_kpRead^0,f,c
 11762   003FEC  EFF3  F01F         	goto	u5495
 11763   003FF0  5002               	movf	(??_kpRead+1)^0,w,c
 11764   003FF2  1483               	andwf	131,w,c	;volatile
 11765   003FF4  0900               	iorlw	0
 11766   003FF6  A4D8               	btfss	status,2,c
 11767   003FF8  EF00  F020         	goto	u5501
 11768   003FFC  EF02  F020         	goto	u5500
 11769   004000                     u5501:
 11770   004000  EF05  F020         	goto	l4748
 11771   004004                     u5500:
 11772   004004                     
 11773                           ;keypad.c: 24:         {;keypad.c: 25:             valor = j + 1;
 11774   004004  0100               	movlb	0	; () banked
 11775   004006  29B9               	incf	_j& (0+255),w,b
 11776   004008  6FBB               	movwf	_valor& (0+255),b
 11777   00400A                     l4748:
 11778                           
 11779                           ;keypad.c: 27:     }
 11780   00400A  0100               	movlb	0	; () banked
 11781   00400C  2BB9               	incf	_j& (0+255),f,b
 11782   00400E                     
 11783                           ; BSR set to: 0
 11784   00400E  0E04               	movlw	4
 11785   004010  65B9               	cpfsgt	_j& (0+255),b
 11786   004012  EF0D  F020         	goto	u5511
 11787   004016  EF0F  F020         	goto	u5510
 11788   00401A                     u5511:
 11789   00401A  EFEC  F01F         	goto	l4744
 11790   00401E                     u5510:
 11791   00401E                     
 11792                           ; BSR set to: 0
 11793                           ;keypad.c: 28:     if(valor == valorAntigo){
 11794   00401E  51BA               	movf	_valorAntigo& (0+255),w,b
 11795   004020  19BB               	xorwf	_valor& (0+255),w,b
 11796   004022  A4D8               	btfss	status,2,c
 11797   004024  EF16  F020         	goto	u5521
 11798   004028  EF18  F020         	goto	u5520
 11799   00402C                     u5521:
 11800   00402C  EF1C  F020         	goto	l357
 11801   004030                     u5520:
 11802   004030                     
 11803                           ; BSR set to: 0
 11804                           ;keypad.c: 29:         valor = 0;
 11805   004030  0E00               	movlw	0
 11806   004032  6FBB               	movwf	_valor& (0+255),b
 11807                           
 11808                           ;keypad.c: 30:     }else{
 11809   004034  EF1E  F020         	goto	l4756
 11810   004038                     l357:
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;keypad.c: 31:         valorAntigo = valor;
 11814   004038  C0BB  F0BA         	movff	_valor,_valorAntigo
 11815   00403C                     l4756:
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;keypad.c: 34:     return valor;
 11819   00403C  51BB               	movf	_valor& (0+255),w,b
 11820   00403E                     
 11821                           ; BSR set to: 0
 11822   00403E  0012               	return		;funcret
 11823   004040                     __end_of_kpRead:
 11824                           	callstack 0
 11825                           
 11826 ;; *************** function _ledInit *****************
 11827 ;; Defined at:
 11828 ;;		line 5 in file "led.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;		None
 11831 ;; Auto vars:     Size  Location     Type
 11832 ;;		None
 11833 ;; Return value:  Size  Location     Type
 11834 ;;                  1    wreg      void 
 11835 ;; Registers used:
 11836 ;;		wreg, status,2, status,0, cstack
 11837 ;; Tracked objects:
 11838 ;;		On entry : 0/0
 11839 ;;		On exit  : 0/0
 11840 ;;		Unchanged: 0/0
 11841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11842 ;;      Params:         0       0       0       0       0       0       0       0       0
 11843 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11844 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11845 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11846 ;;Total ram usage:        0 bytes
 11847 ;; Hardware stack levels used: 1
 11848 ;; Hardware stack levels required when called: 1
 11849 ;; This function calls:
 11850 ;;		_digitalWrite
 11851 ;; This function is called by:
 11852 ;;		_main
 11853 ;; This function uses a non-reentrant model
 11854 ;;
 11855                           
 11856                           	psect	text53
 11857   003ADA                     __ptext53:
 11858                           	callstack 0
 11859   003ADA                     _ledInit:
 11860                           	callstack 29
 11861   003ADA                     
 11862                           ;led.c: 6:     (*(volatile __near unsigned char*)0xF94) = 0x00;
 11863   003ADA  0E00               	movlw	0
 11864   003ADC  6E94               	movwf	148,c	;volatile
 11865   003ADE                     
 11866                           ;led.c: 7:     digitalWrite(PIN_C1, 0);
 11867   003ADE  0E00               	movlw	0
 11868   003AE0  6E02               	movwf	(digitalWrite@pin+1)^0,c
 11869   003AE2  0E11               	movlw	17
 11870   003AE4  6E01               	movwf	digitalWrite@pin^0,c
 11871   003AE6  0E00               	movlw	0
 11872   003AE8  6E04               	movwf	(digitalWrite@value+1)^0,c
 11873   003AEA  0E00               	movlw	0
 11874   003AEC  6E03               	movwf	digitalWrite@value^0,c
 11875   003AEE  ECEB  F029         	call	_digitalWrite	;wreg free
 11876   003AF2                     
 11877                           ;led.c: 8:     digitalWrite(PIN_C2, 0);
 11878   003AF2  0E00               	movlw	0
 11879   003AF4  6E02               	movwf	(digitalWrite@pin+1)^0,c
 11880   003AF6  0E12               	movlw	18
 11881   003AF8  6E01               	movwf	digitalWrite@pin^0,c
 11882   003AFA  0E00               	movlw	0
 11883   003AFC  6E04               	movwf	(digitalWrite@value+1)^0,c
 11884   003AFE  0E00               	movlw	0
 11885   003B00  6E03               	movwf	digitalWrite@value^0,c
 11886   003B02  ECEB  F029         	call	_digitalWrite	;wreg free
 11887   003B06  0012               	return		;funcret
 11888   003B08                     __end_of_ledInit:
 11889                           	callstack 0
 11890                           
 11891 ;; *************** function _digitalWrite *****************
 11892 ;; Defined at:
 11893 ;;		line 14 in file "io.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;  pin             2    0[COMRAM] int 
 11896 ;;  value           2    2[COMRAM] int 
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;		None
 11899 ;; Return value:  Size  Location     Type
 11900 ;;                  1    wreg      void 
 11901 ;; Registers used:
 11902 ;;		wreg, status,2, status,0
 11903 ;; Tracked objects:
 11904 ;;		On entry : 0/0
 11905 ;;		On exit  : 0/0
 11906 ;;		Unchanged: 0/0
 11907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11908 ;;      Params:         4       0       0       0       0       0       0       0       0
 11909 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11910 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11911 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11912 ;;Total ram usage:        6 bytes
 11913 ;; Hardware stack levels used: 1
 11914 ;; This function calls:
 11915 ;;		Nothing
 11916 ;; This function is called by:
 11917 ;;		_clear_SCL
 11918 ;;		_clear_SDA
 11919 ;;		_ledInit
 11920 ;;		_ledOff
 11921 ;;		_ledBlink
 11922 ;;		_ledOn
 11923 ;; This function uses a non-reentrant model
 11924 ;;
 11925                           
 11926                           	psect	text54
 11927   0053D6                     __ptext54:
 11928                           	callstack 0
 11929   0053D6                     _digitalWrite:
 11930                           	callstack 24
 11931   0053D6                     
 11932                           ;io.c: 16:     if(pin <8){
 11933   0053D6  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
 11934   0053D8  EFF9  F029         	goto	u3840
 11935   0053DC  5002               	movf	(digitalWrite@pin+1)^0,w,c
 11936   0053DE  E107               	bnz	u3841
 11937   0053E0  0E08               	movlw	8
 11938   0053E2  5C01               	subwf	digitalWrite@pin^0,w,c
 11939   0053E4  B0D8               	btfsc	status,0,c
 11940   0053E6  EFF7  F029         	goto	u3841
 11941   0053EA  EFF9  F029         	goto	u3840
 11942   0053EE                     u3841:
 11943   0053EE  EF23  F02A         	goto	l3782
 11944   0053F2                     u3840:
 11945   0053F2                     
 11946                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
 11947   0053F2  5003               	movf	digitalWrite@value^0,w,c
 11948   0053F4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
 11949   0053F6  B4D8               	btfsc	status,2,c
 11950   0053F8  EF00  F02A         	goto	u3851
 11951   0053FC  EF02  F02A         	goto	u3850
 11952   005400                     u3851:
 11953   005400  EF12  F02A         	goto	l3780
 11954   005404                     u3850:
 11955   005404  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 11956   005408  0E01               	movlw	1
 11957   00540A  6E06               	movwf	(??_digitalWrite+1)^0,c
 11958   00540C  2A05               	incf	??_digitalWrite^0,f,c
 11959   00540E  EF0B  F02A         	goto	u3864
 11960   005412                     u3865:
 11961   005412  90D8               	bcf	status,0,c
 11962   005414  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 11963   005416                     u3864:
 11964   005416  2E05               	decfsz	??_digitalWrite^0,f,c
 11965   005418  EF09  F02A         	goto	u3865
 11966   00541C  5006               	movf	(??_digitalWrite+1)^0,w,c
 11967   00541E  1280               	iorwf	128,f,c	;volatile
 11968   005420  EF11  F02B         	goto	l303
 11969   005424                     l3780:
 11970   005424  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 11971   005428  0E01               	movlw	1
 11972   00542A  6E06               	movwf	(??_digitalWrite+1)^0,c
 11973   00542C  2A05               	incf	??_digitalWrite^0,f,c
 11974   00542E  EF1B  F02A         	goto	u3874
 11975   005432                     u3875:
 11976   005432  90D8               	bcf	status,0,c
 11977   005434  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 11978   005436                     u3874:
 11979   005436  2E05               	decfsz	??_digitalWrite^0,f,c
 11980   005438  EF19  F02A         	goto	u3875
 11981   00543C  5006               	movf	(??_digitalWrite+1)^0,w,c
 11982   00543E  0AFF               	xorlw	255
 11983   005440  1680               	andwf	128,f,c	;volatile
 11984   005442  EF11  F02B         	goto	l303
 11985   005446                     l3782:
 11986   005446  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
 11987   005448  EF31  F02A         	goto	u3880
 11988   00544C  5002               	movf	(digitalWrite@pin+1)^0,w,c
 11989   00544E  E107               	bnz	u3881
 11990   005450  0E10               	movlw	16
 11991   005452  5C01               	subwf	digitalWrite@pin^0,w,c
 11992   005454  B0D8               	btfsc	status,0,c
 11993   005456  EF2F  F02A         	goto	u3881
 11994   00545A  EF31  F02A         	goto	u3880
 11995   00545E                     u3881:
 11996   00545E  EF5F  F02A         	goto	l3790
 11997   005462                     u3880:
 11998   005462                     
 11999                           ;io.c: 20:         pin -=8;
 12000   005462  0EF8               	movlw	248
 12001   005464  2601               	addwf	digitalWrite@pin^0,f,c
 12002   005466  0EFF               	movlw	255
 12003   005468  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
 12004                           
 12005                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
 12006   00546A  5003               	movf	digitalWrite@value^0,w,c
 12007   00546C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
 12008   00546E  B4D8               	btfsc	status,2,c
 12009   005470  EF3C  F02A         	goto	u3891
 12010   005474  EF3E  F02A         	goto	u3890
 12011   005478                     u3891:
 12012   005478  EF4E  F02A         	goto	l3788
 12013   00547C                     u3890:
 12014   00547C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 12015   005480  0E01               	movlw	1
 12016   005482  6E06               	movwf	(??_digitalWrite+1)^0,c
 12017   005484  2A05               	incf	??_digitalWrite^0,f,c
 12018   005486  EF47  F02A         	goto	u3904
 12019   00548A                     u3905:
 12020   00548A  90D8               	bcf	status,0,c
 12021   00548C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 12022   00548E                     u3904:
 12023   00548E  2E05               	decfsz	??_digitalWrite^0,f,c
 12024   005490  EF45  F02A         	goto	u3905
 12025   005494  5006               	movf	(??_digitalWrite+1)^0,w,c
 12026   005496  1281               	iorwf	129,f,c	;volatile
 12027   005498  EF11  F02B         	goto	l303
 12028   00549C                     l3788:
 12029   00549C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 12030   0054A0  0E01               	movlw	1
 12031   0054A2  6E06               	movwf	(??_digitalWrite+1)^0,c
 12032   0054A4  2A05               	incf	??_digitalWrite^0,f,c
 12033   0054A6  EF57  F02A         	goto	u3914
 12034   0054AA                     u3915:
 12035   0054AA  90D8               	bcf	status,0,c
 12036   0054AC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 12037   0054AE                     u3914:
 12038   0054AE  2E05               	decfsz	??_digitalWrite^0,f,c
 12039   0054B0  EF55  F02A         	goto	u3915
 12040   0054B4  5006               	movf	(??_digitalWrite+1)^0,w,c
 12041   0054B6  0AFF               	xorlw	255
 12042   0054B8  1681               	andwf	129,f,c	;volatile
 12043   0054BA  EF11  F02B         	goto	l303
 12044   0054BE                     l3790:
 12045   0054BE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
 12046   0054C0  EF6D  F02A         	goto	u3920
 12047   0054C4  5002               	movf	(digitalWrite@pin+1)^0,w,c
 12048   0054C6  E107               	bnz	u3921
 12049   0054C8  0E18               	movlw	24
 12050   0054CA  5C01               	subwf	digitalWrite@pin^0,w,c
 12051   0054CC  B0D8               	btfsc	status,0,c
 12052   0054CE  EF6B  F02A         	goto	u3921
 12053   0054D2  EF6D  F02A         	goto	u3920
 12054   0054D6                     u3921:
 12055   0054D6  EF9B  F02A         	goto	l3798
 12056   0054DA                     u3920:
 12057   0054DA                     
 12058                           ;io.c: 24:         pin -=16;
 12059   0054DA  0EF0               	movlw	240
 12060   0054DC  2601               	addwf	digitalWrite@pin^0,f,c
 12061   0054DE  0EFF               	movlw	255
 12062   0054E0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
 12063                           
 12064                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
 12065   0054E2  5003               	movf	digitalWrite@value^0,w,c
 12066   0054E4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
 12067   0054E6  B4D8               	btfsc	status,2,c
 12068   0054E8  EF78  F02A         	goto	u3931
 12069   0054EC  EF7A  F02A         	goto	u3930
 12070   0054F0                     u3931:
 12071   0054F0  EF8A  F02A         	goto	l3796
 12072   0054F4                     u3930:
 12073   0054F4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 12074   0054F8  0E01               	movlw	1
 12075   0054FA  6E06               	movwf	(??_digitalWrite+1)^0,c
 12076   0054FC  2A05               	incf	??_digitalWrite^0,f,c
 12077   0054FE  EF83  F02A         	goto	u3944
 12078   005502                     u3945:
 12079   005502  90D8               	bcf	status,0,c
 12080   005504  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 12081   005506                     u3944:
 12082   005506  2E05               	decfsz	??_digitalWrite^0,f,c
 12083   005508  EF81  F02A         	goto	u3945
 12084   00550C  5006               	movf	(??_digitalWrite+1)^0,w,c
 12085   00550E  1282               	iorwf	130,f,c	;volatile
 12086   005510  EF11  F02B         	goto	l303
 12087   005514                     l3796:
 12088   005514  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 12089   005518  0E01               	movlw	1
 12090   00551A  6E06               	movwf	(??_digitalWrite+1)^0,c
 12091   00551C  2A05               	incf	??_digitalWrite^0,f,c
 12092   00551E  EF93  F02A         	goto	u3954
 12093   005522                     u3955:
 12094   005522  90D8               	bcf	status,0,c
 12095   005524  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 12096   005526                     u3954:
 12097   005526  2E05               	decfsz	??_digitalWrite^0,f,c
 12098   005528  EF91  F02A         	goto	u3955
 12099   00552C  5006               	movf	(??_digitalWrite+1)^0,w,c
 12100   00552E  0AFF               	xorlw	255
 12101   005530  1682               	andwf	130,f,c	;volatile
 12102   005532  EF11  F02B         	goto	l303
 12103   005536                     l3798:
 12104   005536  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
 12105   005538  EFA9  F02A         	goto	u3960
 12106   00553C  5002               	movf	(digitalWrite@pin+1)^0,w,c
 12107   00553E  E107               	bnz	u3961
 12108   005540  0E20               	movlw	32
 12109   005542  5C01               	subwf	digitalWrite@pin^0,w,c
 12110   005544  B0D8               	btfsc	status,0,c
 12111   005546  EFA7  F02A         	goto	u3961
 12112   00554A  EFA9  F02A         	goto	u3960
 12113   00554E                     u3961:
 12114   00554E  EFD7  F02A         	goto	l3806
 12115   005552                     u3960:
 12116   005552                     
 12117                           ;io.c: 28:         pin -=24;
 12118   005552  0EE8               	movlw	232
 12119   005554  2601               	addwf	digitalWrite@pin^0,f,c
 12120   005556  0EFF               	movlw	255
 12121   005558  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
 12122                           
 12123                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
 12124   00555A  5003               	movf	digitalWrite@value^0,w,c
 12125   00555C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
 12126   00555E  B4D8               	btfsc	status,2,c
 12127   005560  EFB4  F02A         	goto	u3971
 12128   005564  EFB6  F02A         	goto	u3970
 12129   005568                     u3971:
 12130   005568  EFC6  F02A         	goto	l3804
 12131   00556C                     u3970:
 12132   00556C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 12133   005570  0E01               	movlw	1
 12134   005572  6E06               	movwf	(??_digitalWrite+1)^0,c
 12135   005574  2A05               	incf	??_digitalWrite^0,f,c
 12136   005576  EFBF  F02A         	goto	u3984
 12137   00557A                     u3985:
 12138   00557A  90D8               	bcf	status,0,c
 12139   00557C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 12140   00557E                     u3984:
 12141   00557E  2E05               	decfsz	??_digitalWrite^0,f,c
 12142   005580  EFBD  F02A         	goto	u3985
 12143   005584  5006               	movf	(??_digitalWrite+1)^0,w,c
 12144   005586  1283               	iorwf	131,f,c	;volatile
 12145   005588  EF11  F02B         	goto	l303
 12146   00558C                     l3804:
 12147   00558C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 12148   005590  0E01               	movlw	1
 12149   005592  6E06               	movwf	(??_digitalWrite+1)^0,c
 12150   005594  2A05               	incf	??_digitalWrite^0,f,c
 12151   005596  EFCF  F02A         	goto	u3994
 12152   00559A                     u3995:
 12153   00559A  90D8               	bcf	status,0,c
 12154   00559C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 12155   00559E                     u3994:
 12156   00559E  2E05               	decfsz	??_digitalWrite^0,f,c
 12157   0055A0  EFCD  F02A         	goto	u3995
 12158   0055A4  5006               	movf	(??_digitalWrite+1)^0,w,c
 12159   0055A6  0AFF               	xorlw	255
 12160   0055A8  1683               	andwf	131,f,c	;volatile
 12161   0055AA  EF11  F02B         	goto	l303
 12162   0055AE                     l3806:
 12163   0055AE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
 12164   0055B0  EFE5  F02A         	goto	u4000
 12165   0055B4  5002               	movf	(digitalWrite@pin+1)^0,w,c
 12166   0055B6  E107               	bnz	u4001
 12167   0055B8  0E28               	movlw	40
 12168   0055BA  5C01               	subwf	digitalWrite@pin^0,w,c
 12169   0055BC  B0D8               	btfsc	status,0,c
 12170   0055BE  EFE3  F02A         	goto	u4001
 12171   0055C2  EFE5  F02A         	goto	u4000
 12172   0055C6                     u4001:
 12173   0055C6  EF11  F02B         	goto	l303
 12174   0055CA                     u4000:
 12175   0055CA                     
 12176                           ;io.c: 32:         pin -=32;
 12177   0055CA  0EE0               	movlw	224
 12178   0055CC  2601               	addwf	digitalWrite@pin^0,f,c
 12179   0055CE  0EFF               	movlw	255
 12180   0055D0  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
 12181                           
 12182                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
 12183   0055D2  5003               	movf	digitalWrite@value^0,w,c
 12184   0055D4  1004               	iorwf	(digitalWrite@value+1)^0,w,c
 12185   0055D6  B4D8               	btfsc	status,2,c
 12186   0055D8  EFF0  F02A         	goto	u4011
 12187   0055DC  EFF2  F02A         	goto	u4010
 12188   0055E0                     u4011:
 12189   0055E0  EF02  F02B         	goto	l3812
 12190   0055E4                     u4010:
 12191   0055E4  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 12192   0055E8  0E01               	movlw	1
 12193   0055EA  6E06               	movwf	(??_digitalWrite+1)^0,c
 12194   0055EC  2A05               	incf	??_digitalWrite^0,f,c
 12195   0055EE  EFFB  F02A         	goto	u4024
 12196   0055F2                     u4025:
 12197   0055F2  90D8               	bcf	status,0,c
 12198   0055F4  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 12199   0055F6                     u4024:
 12200   0055F6  2E05               	decfsz	??_digitalWrite^0,f,c
 12201   0055F8  EFF9  F02A         	goto	u4025
 12202   0055FC  5006               	movf	(??_digitalWrite+1)^0,w,c
 12203   0055FE  1284               	iorwf	132,f,c	;volatile
 12204   005600  EF11  F02B         	goto	l303
 12205   005604                     l3812:
 12206   005604  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
 12207   005608  0E01               	movlw	1
 12208   00560A  6E06               	movwf	(??_digitalWrite+1)^0,c
 12209   00560C  2A05               	incf	??_digitalWrite^0,f,c
 12210   00560E  EF0B  F02B         	goto	u4034
 12211   005612                     u4035:
 12212   005612  90D8               	bcf	status,0,c
 12213   005614  3606               	rlcf	(??_digitalWrite+1)^0,f,c
 12214   005616                     u4034:
 12215   005616  2E05               	decfsz	??_digitalWrite^0,f,c
 12216   005618  EF09  F02B         	goto	u4035
 12217   00561C  5006               	movf	(??_digitalWrite+1)^0,w,c
 12218   00561E  0AFF               	xorlw	255
 12219   005620  1684               	andwf	132,f,c	;volatile
 12220   005622                     l303:
 12221   005622  0012               	return		;funcret
 12222   005624                     __end_of_digitalWrite:
 12223                           	callstack 0
 12224                           
 12225 ;; *************** function _lcdInit *****************
 12226 ;; Defined at:
 12227 ;;		line 133 in file "lcd.c"
 12228 ;; Parameters:    Size  Location     Type
 12229 ;;		None
 12230 ;; Auto vars:     Size  Location     Type
 12231 ;;  i               1    3[COMRAM] unsigned char 
 12232 ;; Return value:  Size  Location     Type
 12233 ;;                  1    wreg      void 
 12234 ;; Registers used:
 12235 ;;		wreg, status,2, status,0, cstack
 12236 ;; Tracked objects:
 12237 ;;		On entry : 0/0
 12238 ;;		On exit  : 0/0
 12239 ;;		Unchanged: 0/0
 12240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12241 ;;      Params:         0       0       0       0       0       0       0       0       0
 12242 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12244 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12245 ;;Total ram usage:        1 bytes
 12246 ;; Hardware stack levels used: 1
 12247 ;; Hardware stack levels required when called: 3
 12248 ;; This function calls:
 12249 ;;		_Delay2ms
 12250 ;;		_lcdCommand
 12251 ;;		_lcdCommand4bits
 12252 ;; This function is called by:
 12253 ;;		_main
 12254 ;;		_outputInit
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           	psect	text55
 12259   0040B8                     __ptext55:
 12260                           	callstack 0
 12261   0040B8                     _lcdInit:
 12262                           	callstack 27
 12263   0040B8                     
 12264                           ;lcd.c: 134:     unsigned char i;;lcd.c: 136:     TRISA = 0x00;
 12265   0040B8  0E00               	movlw	0
 12266   0040BA  6E92               	movwf	146,c	;volatile
 12267   0040BC                     
 12268                           ;lcd.c: 137:     ((SPPCFG) &= ~(1<<(5)));
 12269   0040BC  9A63               	bcf	99,5,c	;volatile
 12270   0040BE                     
 12271                           ;lcd.c: 138:     ADCON1 = 0b00001111;
 12272   0040BE  0E0F               	movlw	15
 12273   0040C0  6EC1               	movwf	193,c	;volatile
 12274   0040C2                     
 12275                           ;lcd.c: 141:     PORTAbits.RA0 = 0;
 12276   0040C2  9080               	bcf	128,0,c	;volatile
 12277   0040C4                     
 12278                           ;lcd.c: 143:     for (i = 0; i < 7; i++)
 12279   0040C4  0E00               	movlw	0
 12280   0040C6  6E04               	movwf	lcdInit@i^0,c
 12281   0040C8                     l5484:
 12282                           
 12283                           ;lcd.c: 144:         Delay2ms();
 12284   0040C8  EC56  F01D         	call	_Delay2ms	;wreg free
 12285   0040CC  2A04               	incf	lcdInit@i^0,f,c
 12286   0040CE  0E06               	movlw	6
 12287   0040D0  6404               	cpfsgt	lcdInit@i^0,c
 12288   0040D2  EF6D  F020         	goto	u6651
 12289   0040D6  EF6F  F020         	goto	u6650
 12290   0040DA                     u6651:
 12291   0040DA  EF64  F020         	goto	l5484
 12292   0040DE                     u6650:
 12293   0040DE                     
 12294                           ;lcd.c: 147:     lcdCommand4bits(0x30, 0);
 12295   0040DE  0E00               	movlw	0
 12296   0040E0  6E01               	movwf	lcdCommand4bits@data^0,c
 12297   0040E2  0E30               	movlw	48
 12298   0040E4  EC20  F020         	call	_lcdCommand4bits
 12299   0040E8                     
 12300                           ;lcd.c: 148:     Delay2ms();
 12301   0040E8  EC56  F01D         	call	_Delay2ms	;wreg free
 12302   0040EC                     
 12303                           ;lcd.c: 150:     lcdCommand4bits(0x30, 0);
 12304   0040EC  0E00               	movlw	0
 12305   0040EE  6E01               	movwf	lcdCommand4bits@data^0,c
 12306   0040F0  0E30               	movlw	48
 12307   0040F2  EC20  F020         	call	_lcdCommand4bits
 12308                           
 12309                           ;lcd.c: 151:     Delay2ms();
 12310   0040F6  EC56  F01D         	call	_Delay2ms	;wreg free
 12311   0040FA                     
 12312                           ;lcd.c: 153:     lcdCommand4bits(0x30, 0);
 12313   0040FA  0E00               	movlw	0
 12314   0040FC  6E01               	movwf	lcdCommand4bits@data^0,c
 12315   0040FE  0E30               	movlw	48
 12316   004100  EC20  F020         	call	_lcdCommand4bits
 12317   004104                     
 12318                           ;lcd.c: 154:     Delay2ms();
 12319   004104  EC56  F01D         	call	_Delay2ms	;wreg free
 12320                           
 12321                           ;lcd.c: 156:     lcdCommand4bits(0x20, 0);
 12322   004108  0E00               	movlw	0
 12323   00410A  6E01               	movwf	lcdCommand4bits@data^0,c
 12324   00410C  0E20               	movlw	32
 12325   00410E  EC20  F020         	call	_lcdCommand4bits
 12326   004112                     
 12327                           ;lcd.c: 157:     Delay2ms();
 12328   004112  EC56  F01D         	call	_Delay2ms	;wreg free
 12329   004116                     
 12330                           ;lcd.c: 159:     lcdCommand(0x28);
 12331   004116  0E28               	movlw	40
 12332   004118  EC6B  F01E         	call	_lcdCommand
 12333   00411C                     
 12334                           ;lcd.c: 160:     lcdCommand(0x06);
 12335   00411C  0E06               	movlw	6
 12336   00411E  EC6B  F01E         	call	_lcdCommand
 12337   004122                     
 12338                           ;lcd.c: 161:     lcdCommand(0x0F);
 12339   004122  0E0F               	movlw	15
 12340   004124  EC6B  F01E         	call	_lcdCommand
 12341   004128                     
 12342                           ;lcd.c: 162:     lcdCommand(0x01);
 12343   004128  0E01               	movlw	1
 12344   00412A  EC6B  F01E         	call	_lcdCommand
 12345   00412E  0012               	return		;funcret
 12346   004130                     __end_of_lcdInit:
 12347                           	callstack 0
 12348                           
 12349 ;; *************** function _lcdCommand *****************
 12350 ;; Defined at:
 12351 ;;		line 89 in file "lcd.c"
 12352 ;; Parameters:    Size  Location     Type
 12353 ;;  cmd             1    wreg     unsigned char 
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;  cmd             1    2[COMRAM] unsigned char 
 12356 ;; Return value:  Size  Location     Type
 12357 ;;                  1    wreg      void 
 12358 ;; Registers used:
 12359 ;;		wreg, status,2, status,0, cstack
 12360 ;; Tracked objects:
 12361 ;;		On entry : 0/0
 12362 ;;		On exit  : 0/0
 12363 ;;		Unchanged: 0/0
 12364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12365 ;;      Params:         0       0       0       0       0       0       0       0       0
 12366 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12367 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12368 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12369 ;;Total ram usage:        1 bytes
 12370 ;; Hardware stack levels used: 1
 12371 ;; Hardware stack levels required when called: 2
 12372 ;; This function calls:
 12373 ;;		_Delay2ms
 12374 ;;		_Delay40us
 12375 ;;		_lcdCommand4bits
 12376 ;; This function is called by:
 12377 ;;		_lcdInit
 12378 ;;		_outputPrint
 12379 ;;		_lcdPosition
 12380 ;; This function uses a non-reentrant model
 12381 ;;
 12382                           
 12383                           	psect	text56
 12384   003CD6                     __ptext56:
 12385                           	callstack 0
 12386   003CD6                     _lcdCommand:
 12387                           	callstack 26
 12388                           
 12389                           ;incstack = 0
 12390                           ;lcdCommand@cmd stored from wreg
 12391   003CD6  6E03               	movwf	lcdCommand@cmd^0,c
 12392   003CD8                     
 12393                           ;lcd.c: 90:     lcdCommand4bits(cmd, 0);
 12394   003CD8  0E00               	movlw	0
 12395   003CDA  6E01               	movwf	lcdCommand4bits@data^0,c
 12396   003CDC  5003               	movf	lcdCommand@cmd^0,w,c
 12397   003CDE  EC20  F020         	call	_lcdCommand4bits
 12398   003CE2                     
 12399                           ;lcd.c: 91:     lcdCommand4bits(cmd << 4, 0);
 12400   003CE2  0E00               	movlw	0
 12401   003CE4  6E01               	movwf	lcdCommand4bits@data^0,c
 12402   003CE6  3803               	swapf	lcdCommand@cmd^0,w,c
 12403   003CE8  0BF0               	andlw	240
 12404   003CEA  EC20  F020         	call	_lcdCommand4bits
 12405   003CEE                     
 12406                           ;lcd.c: 94:     if ((cmd == 0x02) || (cmd == 0x01)) {
 12407   003CEE  0E02               	movlw	2
 12408   003CF0  1803               	xorwf	lcdCommand@cmd^0,w,c
 12409   003CF2  B4D8               	btfsc	status,2,c
 12410   003CF4  EF7E  F01E         	goto	u6231
 12411   003CF8  EF80  F01E         	goto	u6230
 12412   003CFC                     u6231:
 12413   003CFC  EF88  F01E         	goto	l5032
 12414   003D00                     u6230:
 12415   003D00  0403               	decf	lcdCommand@cmd^0,w,c
 12416   003D02  A4D8               	btfss	status,2,c
 12417   003D04  EF86  F01E         	goto	u6241
 12418   003D08  EF88  F01E         	goto	u6240
 12419   003D0C                     u6241:
 12420   003D0C  EF8C  F01E         	goto	l5034
 12421   003D10                     u6240:
 12422   003D10                     l5032:
 12423                           
 12424                           ;lcd.c: 95:         Delay2ms();
 12425   003D10  EC56  F01D         	call	_Delay2ms	;wreg free
 12426                           
 12427                           ;lcd.c: 96:     } else {
 12428   003D14  EF8E  F01E         	goto	l405
 12429   003D18                     l5034:
 12430                           
 12431                           ;lcd.c: 97:         Delay40us();
 12432   003D18  ECB5  F01C         	call	_Delay40us	;wreg free
 12433   003D1C                     l405:
 12434   003D1C  0012               	return		;funcret
 12435   003D1E                     __end_of_lcdCommand:
 12436                           	callstack 0
 12437                           
 12438 ;; *************** function _lcdCommand4bits *****************
 12439 ;; Defined at:
 12440 ;;		line 50 in file "lcd.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;  cmd             1    wreg     unsigned char 
 12443 ;;  data            1    0[COMRAM] unsigned char 
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;  cmd             1    1[COMRAM] unsigned char 
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  1    wreg      void 
 12448 ;; Registers used:
 12449 ;;		wreg, status,2, cstack
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12455 ;;      Params:         1       0       0       0       0       0       0       0       0
 12456 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12458 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12459 ;;Total ram usage:        2 bytes
 12460 ;; Hardware stack levels used: 1
 12461 ;; Hardware stack levels required when called: 1
 12462 ;; This function calls:
 12463 ;;		_pulseEnable
 12464 ;; This function is called by:
 12465 ;;		_lcdCommand
 12466 ;;		_lcdData
 12467 ;;		_lcdInit
 12468 ;; This function uses a non-reentrant model
 12469 ;;
 12470                           
 12471                           	psect	text57
 12472   004040                     __ptext57:
 12473                           	callstack 0
 12474   004040                     _lcdCommand4bits:
 12475                           	callstack 25
 12476                           
 12477                           ;incstack = 0
 12478                           ;lcdCommand4bits@cmd stored from wreg
 12479   004040  6E02               	movwf	lcdCommand4bits@cmd^0,c
 12480   004042                     
 12481                           ;lcd.c: 52:     if(data){
 12482   004042  5001               	movf	lcdCommand4bits@data^0,w,c
 12483   004044  B4D8               	btfsc	status,2,c
 12484   004046  EF27  F020         	goto	u5121
 12485   00404A  EF29  F020         	goto	u5120
 12486   00404E                     u5121:
 12487   00404E  EF2C  F020         	goto	l388
 12488   004052                     u5120:
 12489   004052                     
 12490                           ;lcd.c: 53:         PORTAbits.RA0 = 1;
 12491   004052  8080               	bsf	128,0,c	;volatile
 12492                           
 12493                           ;lcd.c: 54:     }else{
 12494   004054  EF2D  F020         	goto	l389
 12495   004058                     l388:
 12496                           
 12497                           ;lcd.c: 55:         PORTAbits.RA0 = 0;
 12498   004058  9080               	bcf	128,0,c	;volatile
 12499   00405A                     l389:
 12500                           
 12501                           ;lcd.c: 59:     if (((cmd) & (1<<(7)))) {
 12502   00405A  AE02               	btfss	lcdCommand4bits@cmd^0,7,c
 12503   00405C  EF32  F020         	goto	u5131
 12504   004060  EF34  F020         	goto	u5130
 12505   004064                     u5131:
 12506   004064  EF37  F020         	goto	l390
 12507   004068                     u5130:
 12508   004068                     
 12509                           ;lcd.c: 60:         PORTAbits.RA5 = 1;
 12510   004068  8A80               	bsf	128,5,c	;volatile
 12511                           
 12512                           ;lcd.c: 61:     } else {
 12513   00406A  EF38  F020         	goto	l391
 12514   00406E                     l390:
 12515                           
 12516                           ;lcd.c: 62:         PORTAbits.RA5 = 0;
 12517   00406E  9A80               	bcf	128,5,c	;volatile
 12518   004070                     l391:
 12519                           
 12520                           ;lcd.c: 66:     if (((cmd) & (1<<(6)))) {
 12521   004070  AC02               	btfss	lcdCommand4bits@cmd^0,6,c
 12522   004072  EF3D  F020         	goto	u5141
 12523   004076  EF3F  F020         	goto	u5140
 12524   00407A                     u5141:
 12525   00407A  EF42  F020         	goto	l392
 12526   00407E                     u5140:
 12527   00407E                     
 12528                           ;lcd.c: 67:         PORTAbits.RA4 = 1;
 12529   00407E  8880               	bsf	128,4,c	;volatile
 12530                           
 12531                           ;lcd.c: 68:     } else {
 12532   004080  EF43  F020         	goto	l393
 12533   004084                     l392:
 12534                           
 12535                           ;lcd.c: 69:         PORTAbits.RA4 = 0;
 12536   004084  9880               	bcf	128,4,c	;volatile
 12537   004086                     l393:
 12538                           
 12539                           ;lcd.c: 73:     if (((cmd) & (1<<(5)))) {
 12540   004086  AA02               	btfss	lcdCommand4bits@cmd^0,5,c
 12541   004088  EF48  F020         	goto	u5151
 12542   00408C  EF4A  F020         	goto	u5150
 12543   004090                     u5151:
 12544   004090  EF4D  F020         	goto	l394
 12545   004094                     u5150:
 12546   004094                     
 12547                           ;lcd.c: 74:         PORTAbits.RA3 = 1;
 12548   004094  8680               	bsf	128,3,c	;volatile
 12549                           
 12550                           ;lcd.c: 75:     } else {
 12551   004096  EF4E  F020         	goto	l395
 12552   00409A                     l394:
 12553                           
 12554                           ;lcd.c: 76:         PORTAbits.RA3 = 0;
 12555   00409A  9680               	bcf	128,3,c	;volatile
 12556   00409C                     l395:
 12557                           
 12558                           ;lcd.c: 80:     if (((cmd) & (1<<(4)))) {
 12559   00409C  A802               	btfss	lcdCommand4bits@cmd^0,4,c
 12560   00409E  EF53  F020         	goto	u5161
 12561   0040A2  EF55  F020         	goto	u5160
 12562   0040A6                     u5161:
 12563   0040A6  EF58  F020         	goto	l396
 12564   0040AA                     u5160:
 12565   0040AA                     
 12566                           ;lcd.c: 81:         PORTAbits.RA2 = 1;
 12567   0040AA  8480               	bsf	128,2,c	;volatile
 12568                           
 12569                           ;lcd.c: 82:     } else {
 12570   0040AC  EF59  F020         	goto	l4452
 12571   0040B0                     l396:
 12572                           
 12573                           ;lcd.c: 83:         PORTAbits.RA2 = 0;
 12574   0040B0  9480               	bcf	128,2,c	;volatile
 12575   0040B2                     l4452:
 12576                           
 12577                           ;lcd.c: 86:     pulseEnable();
 12578   0040B2  EC6C  F01C         	call	_pulseEnable	;wreg free
 12579   0040B6  0012               	return		;funcret
 12580   0040B8                     __end_of_lcdCommand4bits:
 12581                           	callstack 0
 12582                           
 12583 ;; *************** function _pulseEnable *****************
 12584 ;; Defined at:
 12585 ;;		line 45 in file "lcd.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;		None
 12588 ;; Auto vars:     Size  Location     Type
 12589 ;;		None
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  1    wreg      void 
 12592 ;; Registers used:
 12593 ;;		None
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/0
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12599 ;;      Params:         0       0       0       0       0       0       0       0       0
 12600 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12601 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12602 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12603 ;;Total ram usage:        0 bytes
 12604 ;; Hardware stack levels used: 1
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_lcdCommand4bits
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           	psect	text58
 12613   0038D8                     __ptext58:
 12614                           	callstack 0
 12615   0038D8                     _pulseEnable:
 12616                           	callstack 25
 12617   0038D8                     
 12618                           ;lcd.c: 46:     PORTAbits.RA1 = 1;
 12619   0038D8  8280               	bsf	128,1,c	;volatile
 12620                           
 12621                           ;lcd.c: 47:     PORTAbits.RA1 = 0;
 12622   0038DA  9280               	bcf	128,1,c	;volatile
 12623   0038DC  0012               	return		;funcret
 12624   0038DE                     __end_of_pulseEnable:
 12625                           	callstack 0
 12626                           
 12627 ;; *************** function _Delay40us *****************
 12628 ;; Defined at:
 12629 ;;		line 34 in file "lcd.c"
 12630 ;; Parameters:    Size  Location     Type
 12631 ;;		None
 12632 ;; Auto vars:     Size  Location     Type
 12633 ;;  j               1    0[COMRAM] unsigned char 
 12634 ;; Return value:  Size  Location     Type
 12635 ;;                  1    wreg      void 
 12636 ;; Registers used:
 12637 ;;		wreg, status,2, status,0
 12638 ;; Tracked objects:
 12639 ;;		On entry : 0/0
 12640 ;;		On exit  : 0/0
 12641 ;;		Unchanged: 0/0
 12642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12643 ;;      Params:         0       0       0       0       0       0       0       0       0
 12644 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12645 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12646 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12647 ;;Total ram usage:        1 bytes
 12648 ;; Hardware stack levels used: 1
 12649 ;; This function calls:
 12650 ;;		Nothing
 12651 ;; This function is called by:
 12652 ;;		_lcdCommand
 12653 ;;		_lcdData
 12654 ;; This function uses a non-reentrant model
 12655 ;;
 12656                           
 12657                           	psect	text59
 12658   00396A                     __ptext59:
 12659                           	callstack 0
 12660   00396A                     _Delay40us:
 12661                           	callstack 26
 12662   00396A                     
 12663                           ;lcd.c: 35:     unsigned char j;;lcd.c: 36:     for (j = 0; j < 68; j++);
 12664   00396A  0E00               	movlw	0
 12665   00396C  6E01               	movwf	Delay40us@j^0,c
 12666   00396E                     l4436:
 12667   00396E  2A01               	incf	Delay40us@j^0,f,c
 12668   003970  0E43               	movlw	67
 12669   003972  6401               	cpfsgt	Delay40us@j^0,c
 12670   003974  EFBE  F01C         	goto	u5111
 12671   003978  EFC0  F01C         	goto	u5110
 12672   00397C                     u5111:
 12673   00397C  EFB7  F01C         	goto	l4436
 12674   003980                     u5110:
 12675   003980  0012               	return		;funcret
 12676   003982                     __end_of_Delay40us:
 12677                           	callstack 0
 12678                           
 12679 ;; *************** function _Delay2ms *****************
 12680 ;; Defined at:
 12681 ;;		line 39 in file "lcd.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;		None
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;  k               1    1[COMRAM] unsigned char 
 12686 ;;  j               1    0[COMRAM] unsigned char 
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  1    wreg      void 
 12689 ;; Registers used:
 12690 ;;		wreg, status,2, status,0
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12696 ;;      Params:         0       0       0       0       0       0       0       0       0
 12697 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12698 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12699 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12700 ;;Total ram usage:        2 bytes
 12701 ;; Hardware stack levels used: 1
 12702 ;; This function calls:
 12703 ;;		Nothing
 12704 ;; This function is called by:
 12705 ;;		_lcdCommand
 12706 ;;		_lcdInit
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text60
 12711   003AAC                     __ptext60:
 12712                           	callstack 0
 12713   003AAC                     _Delay2ms:
 12714                           	callstack 27
 12715   003AAC                     
 12716                           ;lcd.c: 40:     unsigned char j, k;;lcd.c: 41:     for (j = 0; j < 20; j++)
 12717   003AAC  0E00               	movlw	0
 12718   003AAE  6E01               	movwf	Delay2ms@j^0,c
 12719   003AB0                     l4560:
 12720                           
 12721                           ;lcd.c: 42:         for (k = 0; k < 178; k++);
 12722   003AB0  0E00               	movlw	0
 12723   003AB2  6E02               	movwf	Delay2ms@k^0,c
 12724   003AB4                     l4566:
 12725   003AB4  2A02               	incf	Delay2ms@k^0,f,c
 12726   003AB6  0EB1               	movlw	177
 12727   003AB8  6402               	cpfsgt	Delay2ms@k^0,c
 12728   003ABA  EF61  F01D         	goto	u5311
 12729   003ABE  EF63  F01D         	goto	u5310
 12730   003AC2                     u5311:
 12731   003AC2  EF5A  F01D         	goto	l4566
 12732   003AC6                     u5310:
 12733   003AC6  2A01               	incf	Delay2ms@j^0,f,c
 12734   003AC8  0E13               	movlw	19
 12735   003ACA  6401               	cpfsgt	Delay2ms@j^0,c
 12736   003ACC  EF6A  F01D         	goto	u5321
 12737   003AD0  EF6C  F01D         	goto	u5320
 12738   003AD4                     u5321:
 12739   003AD4  EF58  F01D         	goto	l4560
 12740   003AD8                     u5320:
 12741   003AD8  0012               	return		;funcret
 12742   003ADA                     __end_of_Delay2ms:
 12743                           	callstack 0
 12744                           
 12745 ;; *************** function _eventInit *****************
 12746 ;; Defined at:
 12747 ;;		line 14 in file "event.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;		None
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  1    wreg      void 
 12754 ;; Registers used:
 12755 ;;		wreg, status,2, status,0, cstack
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12761 ;;      Params:         0       0       0       0       0       0       0       0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12763 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12764 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12765 ;;Total ram usage:        0 bytes
 12766 ;; Hardware stack levels used: 1
 12767 ;; Hardware stack levels required when called: 2
 12768 ;; This function calls:
 12769 ;;		_kpInit
 12770 ;;		_serialInit
 12771 ;; This function is called by:
 12772 ;;		_main
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text61
 12777   00392A                     __ptext61:
 12778                           	callstack 0
 12779   00392A                     _eventInit:
 12780                           	callstack 28
 12781   00392A                     
 12782                           ;event.c: 15:     serialInit();
 12783   00392A  ECC1  F01C         	call	_serialInit	;wreg free
 12784                           
 12785                           ;event.c: 16:     kpInit();
 12786   00392E  EC55  F021         	call	_kpInit	;wreg free
 12787   003932                     
 12788                           ;event.c: 17:     key_ant = 0;
 12789   003932  0E00               	movlw	0
 12790   003934  0100               	movlb	0	; () banked
 12791   003936  6FB7               	movwf	(_key_ant+1)& (0+255),b
 12792   003938  0E00               	movlw	0
 12793   00393A  6FB6               	movwf	_key_ant& (0+255),b
 12794   00393C                     
 12795                           ; BSR set to: 0
 12796   00393C  0012               	return		;funcret
 12797   00393E                     __end_of_eventInit:
 12798                           	callstack 0
 12799                           
 12800 ;; *************** function _serialInit *****************
 12801 ;; Defined at:
 12802 ;;		line 64 in file "serial.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;		None
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;		None
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  1    wreg      void 
 12809 ;; Registers used:
 12810 ;;		wreg, status,2, status,0
 12811 ;; Tracked objects:
 12812 ;;		On entry : 0/0
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12816 ;;      Params:         0       0       0       0       0       0       0       0       0
 12817 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12818 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12819 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12820 ;;Total ram usage:        0 bytes
 12821 ;; Hardware stack levels used: 1
 12822 ;; This function calls:
 12823 ;;		Nothing
 12824 ;; This function is called by:
 12825 ;;		_eventInit
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           	psect	text62
 12830   003982                     __ptext62:
 12831                           	callstack 0
 12832   003982                     _serialInit:
 12833                           	callstack 29
 12834   003982                     
 12835                           ;serial.c: 65:     TXSTA = 0b00101100;
 12836   003982  0E2C               	movlw	44
 12837   003984  6EAC               	movwf	172,c	;volatile
 12838                           
 12839                           ;serial.c: 66:     RCSTA = 0b10010000;
 12840   003986  0E90               	movlw	144
 12841   003988  6EAB               	movwf	171,c	;volatile
 12842                           
 12843                           ;serial.c: 67:     BAUDCON = 0b00001000;
 12844   00398A  0E08               	movlw	8
 12845   00398C  6EB8               	movwf	184,c	;volatile
 12846                           
 12847                           ;serial.c: 68:     SPBRGH = 0;
 12848   00398E  0E00               	movlw	0
 12849   003990  6EB0               	movwf	176,c	;volatile
 12850                           
 12851                           ;serial.c: 69:     SPBRG = 34;
 12852   003992  0E22               	movlw	34
 12853   003994  6EAF               	movwf	175,c	;volatile
 12854   003996                     
 12855                           ;serial.c: 70:     ((TRISC) |= (1<<(6)));
 12856   003996  8C94               	bsf	148,6,c	;volatile
 12857   003998                     
 12858                           ;serial.c: 71:     ((TRISC) |= (1<<(7)));
 12859   003998  8E94               	bsf	148,7,c	;volatile
 12860   00399A  0012               	return		;funcret
 12861   00399C                     __end_of_serialInit:
 12862                           	callstack 0
 12863                           
 12864 ;; *************** function _kpInit *****************
 12865 ;; Defined at:
 12866 ;;		line 37 in file "keypad.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;		None
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;		None
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  1    wreg      void 
 12873 ;; Registers used:
 12874 ;;		wreg, status,2, status,0, cstack
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12880 ;;      Params:         0       0       0       0       0       0       0       0       0
 12881 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12883 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12884 ;;Total ram usage:        0 bytes
 12885 ;; Hardware stack levels used: 1
 12886 ;; Hardware stack levels required when called: 1
 12887 ;; This function calls:
 12888 ;;		_pinMode
 12889 ;; This function is called by:
 12890 ;;		_eventInit
 12891 ;;		_main
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895                           	psect	text63
 12896   0042AA                     __ptext63:
 12897                           	callstack 0
 12898   0042AA                     _kpInit:
 12899                           	callstack 29
 12900   0042AA                     
 12901                           ;keypad.c: 38:     TRISE = 0x00;
 12902   0042AA  0E00               	movlw	0
 12903   0042AC  6E96               	movwf	150,c	;volatile
 12904   0042AE                     
 12905                           ;keypad.c: 39:     ((PORTE) |= (1<<(7)));
 12906   0042AE  8E84               	bsf	132,7,c	;volatile
 12907   0042B0                     
 12908                           ;keypad.c: 40:     pinMode(PIN_E7, 0);
 12909   0042B0  0E00               	movlw	0
 12910   0042B2  6E02               	movwf	(pinMode@pin+1)^0,c
 12911   0042B4  0E27               	movlw	39
 12912   0042B6  6E01               	movwf	pinMode@pin^0,c
 12913   0042B8  0E00               	movlw	0
 12914   0042BA  6E04               	movwf	(pinMode@type+1)^0,c
 12915   0042BC  0E00               	movlw	0
 12916   0042BE  6E03               	movwf	pinMode@type^0,c
 12917   0042C0  ECC4  F028         	call	_pinMode	;wreg free
 12918   0042C4                     
 12919                           ;keypad.c: 41:     pinMode(PIN_D0, 1);
 12920   0042C4  0E00               	movlw	0
 12921   0042C6  6E02               	movwf	(pinMode@pin+1)^0,c
 12922   0042C8  0E18               	movlw	24
 12923   0042CA  6E01               	movwf	pinMode@pin^0,c
 12924   0042CC  0E00               	movlw	0
 12925   0042CE  6E04               	movwf	(pinMode@type+1)^0,c
 12926   0042D0  0E01               	movlw	1
 12927   0042D2  6E03               	movwf	pinMode@type^0,c
 12928   0042D4  ECC4  F028         	call	_pinMode	;wreg free
 12929   0042D8                     
 12930                           ;keypad.c: 42:     pinMode(PIN_D1, 1);
 12931   0042D8  0E00               	movlw	0
 12932   0042DA  6E02               	movwf	(pinMode@pin+1)^0,c
 12933   0042DC  0E19               	movlw	25
 12934   0042DE  6E01               	movwf	pinMode@pin^0,c
 12935   0042E0  0E00               	movlw	0
 12936   0042E2  6E04               	movwf	(pinMode@type+1)^0,c
 12937   0042E4  0E01               	movlw	1
 12938   0042E6  6E03               	movwf	pinMode@type^0,c
 12939   0042E8  ECC4  F028         	call	_pinMode	;wreg free
 12940   0042EC                     
 12941                           ;keypad.c: 43:     pinMode(PIN_D2, 1);
 12942   0042EC  0E00               	movlw	0
 12943   0042EE  6E02               	movwf	(pinMode@pin+1)^0,c
 12944   0042F0  0E1A               	movlw	26
 12945   0042F2  6E01               	movwf	pinMode@pin^0,c
 12946   0042F4  0E00               	movlw	0
 12947   0042F6  6E04               	movwf	(pinMode@type+1)^0,c
 12948   0042F8  0E01               	movlw	1
 12949   0042FA  6E03               	movwf	pinMode@type^0,c
 12950   0042FC  ECC4  F028         	call	_pinMode	;wreg free
 12951   004300                     
 12952                           ;keypad.c: 44:     pinMode(PIN_D3, 1);
 12953   004300  0E00               	movlw	0
 12954   004302  6E02               	movwf	(pinMode@pin+1)^0,c
 12955   004304  0E1B               	movlw	27
 12956   004306  6E01               	movwf	pinMode@pin^0,c
 12957   004308  0E00               	movlw	0
 12958   00430A  6E04               	movwf	(pinMode@type+1)^0,c
 12959   00430C  0E01               	movlw	1
 12960   00430E  6E03               	movwf	pinMode@type^0,c
 12961   004310  ECC4  F028         	call	_pinMode	;wreg free
 12962   004314                     
 12963                           ;keypad.c: 45:     pinMode(PIN_D4, 1);
 12964   004314  0E00               	movlw	0
 12965   004316  6E02               	movwf	(pinMode@pin+1)^0,c
 12966   004318  0E1C               	movlw	28
 12967   00431A  6E01               	movwf	pinMode@pin^0,c
 12968   00431C  0E00               	movlw	0
 12969   00431E  6E04               	movwf	(pinMode@type+1)^0,c
 12970   004320  0E01               	movlw	1
 12971   004322  6E03               	movwf	pinMode@type^0,c
 12972   004324  ECC4  F028         	call	_pinMode	;wreg free
 12973   004328  0012               	return		;funcret
 12974   00432A                     __end_of_kpInit:
 12975                           	callstack 0
 12976                           
 12977 ;; *************** function _dsInit *****************
 12978 ;; Defined at:
 12979 ;;		line 14 in file "rtc.c"
 12980 ;; Parameters:    Size  Location     Type
 12981 ;;		None
 12982 ;; Auto vars:     Size  Location     Type
 12983 ;;		None
 12984 ;; Return value:  Size  Location     Type
 12985 ;;                  1    wreg      void 
 12986 ;; Registers used:
 12987 ;;		wreg, status,2, status,0, cstack
 12988 ;; Tracked objects:
 12989 ;;		On entry : 0/0
 12990 ;;		On exit  : 0/0
 12991 ;;		Unchanged: 0/0
 12992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12993 ;;      Params:         0       0       0       0       0       0       0       0       0
 12994 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12995 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12996 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12997 ;;Total ram usage:        0 bytes
 12998 ;; Hardware stack levels used: 1
 12999 ;; Hardware stack levels required when called: 2
 13000 ;; This function calls:
 13001 ;;		_i2cInit
 13002 ;; This function is called by:
 13003 ;;		_main
 13004 ;; This function uses a non-reentrant model
 13005 ;;
 13006                           
 13007                           	psect	text64
 13008   0038D2                     __ptext64:
 13009                           	callstack 0
 13010   0038D2                     _dsInit:
 13011                           	callstack 28
 13012   0038D2                     
 13013                           ;rtc.c: 15:  i2cInit();
 13014   0038D2  EC01  F01D         	call	_i2cInit	;wreg free
 13015   0038D6  0012               	return		;funcret
 13016   0038D8                     __end_of_dsInit:
 13017                           	callstack 0
 13018                           
 13019 ;; *************** function _i2cInit *****************
 13020 ;; Defined at:
 13021 ;;		line 14 in file "i2c.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;		None
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;		None
 13026 ;; Return value:  Size  Location     Type
 13027 ;;                  1    wreg      void 
 13028 ;; Registers used:
 13029 ;;		wreg, status,2, status,0, cstack
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13035 ;;      Params:         0       0       0       0       0       0       0       0       0
 13036 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13038 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13039 ;;Total ram usage:        0 bytes
 13040 ;; Hardware stack levels used: 1
 13041 ;; Hardware stack levels required when called: 1
 13042 ;; This function calls:
 13043 ;;		_pinMode
 13044 ;; This function is called by:
 13045 ;;		_dsInit
 13046 ;; This function uses a non-reentrant model
 13047 ;;
 13048                           
 13049                           	psect	text65
 13050   003A02                     __ptext65:
 13051                           	callstack 0
 13052   003A02                     _i2cInit:
 13053                           	callstack 28
 13054   003A02                     
 13055                           ;i2c.c: 16:  pinMode(PIN_B0,1);
 13056   003A02  0E00               	movlw	0
 13057   003A04  6E02               	movwf	(pinMode@pin+1)^0,c
 13058   003A06  0E08               	movlw	8
 13059   003A08  6E01               	movwf	pinMode@pin^0,c
 13060   003A0A  0E00               	movlw	0
 13061   003A0C  6E04               	movwf	(pinMode@type+1)^0,c
 13062   003A0E  0E01               	movlw	1
 13063   003A10  6E03               	movwf	pinMode@type^0,c
 13064   003A12  ECC4  F028         	call	_pinMode	;wreg free
 13065                           
 13066                           ;i2c.c: 17:  pinMode(PIN_B1,1);
 13067   003A16  0E00               	movlw	0
 13068   003A18  6E02               	movwf	(pinMode@pin+1)^0,c
 13069   003A1A  0E09               	movlw	9
 13070   003A1C  6E01               	movwf	pinMode@pin^0,c
 13071   003A1E  0E00               	movlw	0
 13072   003A20  6E04               	movwf	(pinMode@type+1)^0,c
 13073   003A22  0E01               	movlw	1
 13074   003A24  6E03               	movwf	pinMode@type^0,c
 13075   003A26  ECC4  F028         	call	_pinMode	;wreg free
 13076   003A2A  0012               	return		;funcret
 13077   003A2C                     __end_of_i2cInit:
 13078                           	callstack 0
 13079                           
 13080 ;; *************** function _adcInit *****************
 13081 ;; Defined at:
 13082 ;;		line 28 in file "adc.c"
 13083 ;; Parameters:    Size  Location     Type
 13084 ;;		None
 13085 ;; Auto vars:     Size  Location     Type
 13086 ;;		None
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      void 
 13089 ;; Registers used:
 13090 ;;		wreg, status,2, status,0, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13096 ;;      Params:         0       0       0       0       0       0       0       0       0
 13097 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13098 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13099 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13100 ;;Total ram usage:        0 bytes
 13101 ;; Hardware stack levels used: 1
 13102 ;; Hardware stack levels required when called: 1
 13103 ;; This function calls:
 13104 ;;		_pinMode
 13105 ;; This function is called by:
 13106 ;;		_main
 13107 ;; This function uses a non-reentrant model
 13108 ;;
 13109                           
 13110                           	psect	text66
 13111   003C4C                     __ptext66:
 13112                           	callstack 0
 13113   003C4C                     _adcInit:
 13114                           	callstack 29
 13115   003C4C                     
 13116                           ;adc.c: 29:     pinMode(PIN_B2, 1);
 13117   003C4C  0E00               	movlw	0
 13118   003C4E  6E02               	movwf	(pinMode@pin+1)^0,c
 13119   003C50  0E0A               	movlw	10
 13120   003C52  6E01               	movwf	pinMode@pin^0,c
 13121   003C54  0E00               	movlw	0
 13122   003C56  6E04               	movwf	(pinMode@type+1)^0,c
 13123   003C58  0E01               	movlw	1
 13124   003C5A  6E03               	movwf	pinMode@type^0,c
 13125   003C5C  ECC4  F028         	call	_pinMode	;wreg free
 13126                           
 13127                           ;adc.c: 30:     pinMode(PIN_E2, 1);
 13128   003C60  0E00               	movlw	0
 13129   003C62  6E02               	movwf	(pinMode@pin+1)^0,c
 13130   003C64  0E22               	movlw	34
 13131   003C66  6E01               	movwf	pinMode@pin^0,c
 13132   003C68  0E00               	movlw	0
 13133   003C6A  6E04               	movwf	(pinMode@type+1)^0,c
 13134   003C6C  0E01               	movlw	1
 13135   003C6E  6E03               	movwf	pinMode@type^0,c
 13136   003C70  ECC4  F028         	call	_pinMode	;wreg free
 13137                           
 13138                           ;adc.c: 31:     pinMode(PIN_B4, 1);
 13139   003C74  0E00               	movlw	0
 13140   003C76  6E02               	movwf	(pinMode@pin+1)^0,c
 13141   003C78  0E0C               	movlw	12
 13142   003C7A  6E01               	movwf	pinMode@pin^0,c
 13143   003C7C  0E00               	movlw	0
 13144   003C7E  6E04               	movwf	(pinMode@type+1)^0,c
 13145   003C80  0E01               	movlw	1
 13146   003C82  6E03               	movwf	pinMode@type^0,c
 13147   003C84  ECC4  F028         	call	_pinMode	;wreg free
 13148   003C88                     
 13149                           ;adc.c: 33:     ((ADCON0) |= (1<<(0)));
 13150   003C88  80C2               	bsf	194,0,c	;volatile
 13151   003C8A                     
 13152                           ;adc.c: 35:     ADCON2 = 0b10101010;
 13153   003C8A  0EAA               	movlw	170
 13154   003C8C  6EC0               	movwf	192,c	;volatile
 13155   003C8E  0012               	return		;funcret
 13156   003C90                     __end_of_adcInit:
 13157                           	callstack 0
 13158                           
 13159 ;; *************** function _pinMode *****************
 13160 ;; Defined at:
 13161 ;;		line 54 in file "io.c"
 13162 ;; Parameters:    Size  Location     Type
 13163 ;;  pin             2    0[COMRAM] int 
 13164 ;;  type            2    2[COMRAM] int 
 13165 ;; Auto vars:     Size  Location     Type
 13166 ;;		None
 13167 ;; Return value:  Size  Location     Type
 13168 ;;                  1    wreg      void 
 13169 ;; Registers used:
 13170 ;;		wreg, status,2, status,0
 13171 ;; Tracked objects:
 13172 ;;		On entry : 0/0
 13173 ;;		On exit  : 0/0
 13174 ;;		Unchanged: 0/0
 13175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13176 ;;      Params:         4       0       0       0       0       0       0       0       0
 13177 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13178 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13179 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13180 ;;Total ram usage:        6 bytes
 13181 ;; Hardware stack levels used: 1
 13182 ;; This function calls:
 13183 ;;		Nothing
 13184 ;; This function is called by:
 13185 ;;		_adcInit
 13186 ;;		_i2cInit
 13187 ;;		_read_SCL
 13188 ;;		_read_SDA
 13189 ;;		_clear_SCL
 13190 ;;		_clear_SDA
 13191 ;;		_kpInit
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text67
 13196   005188                     __ptext67:
 13197                           	callstack 0
 13198   005188                     _pinMode:
 13199                           	callstack 24
 13200   005188                     
 13201                           ;io.c: 56:     if(pin <8){
 13202   005188  BE02               	btfsc	(pinMode@pin+1)^0,7,c
 13203   00518A  EFD2  F028         	goto	u3540
 13204   00518E  5002               	movf	(pinMode@pin+1)^0,w,c
 13205   005190  E107               	bnz	u3541
 13206   005192  0E08               	movlw	8
 13207   005194  5C01               	subwf	pinMode@pin^0,w,c
 13208   005196  B0D8               	btfsc	status,0,c
 13209   005198  EFD0  F028         	goto	u3541
 13210   00519C  EFD2  F028         	goto	u3540
 13211   0051A0                     u3541:
 13212   0051A0  EFFC  F028         	goto	l3704
 13213   0051A4                     u3540:
 13214   0051A4                     
 13215                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
 13216   0051A4  5003               	movf	pinMode@type^0,w,c
 13217   0051A6  1004               	iorwf	(pinMode@type+1)^0,w,c
 13218   0051A8  B4D8               	btfsc	status,2,c
 13219   0051AA  EFD9  F028         	goto	u3551
 13220   0051AE  EFDB  F028         	goto	u3550
 13221   0051B2                     u3551:
 13222   0051B2  EFEB  F028         	goto	l3702
 13223   0051B6                     u3550:
 13224   0051B6  C001  F005         	movff	pinMode@pin,??_pinMode
 13225   0051BA  0E01               	movlw	1
 13226   0051BC  6E06               	movwf	(??_pinMode+1)^0,c
 13227   0051BE  2A05               	incf	??_pinMode^0,f,c
 13228   0051C0  EFE4  F028         	goto	u3564
 13229   0051C4                     u3565:
 13230   0051C4  90D8               	bcf	status,0,c
 13231   0051C6  3606               	rlcf	(??_pinMode+1)^0,f,c
 13232   0051C8                     u3564:
 13233   0051C8  2E05               	decfsz	??_pinMode^0,f,c
 13234   0051CA  EFE2  F028         	goto	u3565
 13235   0051CE  5006               	movf	(??_pinMode+1)^0,w,c
 13236   0051D0  1292               	iorwf	146,f,c	;volatile
 13237   0051D2  EFEA  F029         	goto	l337
 13238   0051D6                     l3702:
 13239   0051D6  C001  F005         	movff	pinMode@pin,??_pinMode
 13240   0051DA  0E01               	movlw	1
 13241   0051DC  6E06               	movwf	(??_pinMode+1)^0,c
 13242   0051DE  2A05               	incf	??_pinMode^0,f,c
 13243   0051E0  EFF4  F028         	goto	u3574
 13244   0051E4                     u3575:
 13245   0051E4  90D8               	bcf	status,0,c
 13246   0051E6  3606               	rlcf	(??_pinMode+1)^0,f,c
 13247   0051E8                     u3574:
 13248   0051E8  2E05               	decfsz	??_pinMode^0,f,c
 13249   0051EA  EFF2  F028         	goto	u3575
 13250   0051EE  5006               	movf	(??_pinMode+1)^0,w,c
 13251   0051F0  0AFF               	xorlw	255
 13252   0051F2  1692               	andwf	146,f,c	;volatile
 13253   0051F4  EFEA  F029         	goto	l337
 13254   0051F8                     l3704:
 13255   0051F8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
 13256   0051FA  EF0A  F029         	goto	u3580
 13257   0051FE  5002               	movf	(pinMode@pin+1)^0,w,c
 13258   005200  E107               	bnz	u3581
 13259   005202  0E10               	movlw	16
 13260   005204  5C01               	subwf	pinMode@pin^0,w,c
 13261   005206  B0D8               	btfsc	status,0,c
 13262   005208  EF08  F029         	goto	u3581
 13263   00520C  EF0A  F029         	goto	u3580
 13264   005210                     u3581:
 13265   005210  EF38  F029         	goto	l3712
 13266   005214                     u3580:
 13267   005214                     
 13268                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
 13269   005214  5003               	movf	pinMode@type^0,w,c
 13270   005216  1004               	iorwf	(pinMode@type+1)^0,w,c
 13271   005218  B4D8               	btfsc	status,2,c
 13272   00521A  EF11  F029         	goto	u3591
 13273   00521E  EF13  F029         	goto	u3590
 13274   005222                     u3591:
 13275   005222  EF25  F029         	goto	l3710
 13276   005226                     u3590:
 13277   005226  C001  F005         	movff	pinMode@pin,??_pinMode
 13278   00522A  0EF8               	movlw	-8
 13279   00522C  2605               	addwf	??_pinMode^0,f,c
 13280   00522E  0E01               	movlw	1
 13281   005230  6E06               	movwf	(??_pinMode+1)^0,c
 13282   005232  2A05               	incf	??_pinMode^0,f,c
 13283   005234  EF1E  F029         	goto	u3604
 13284   005238                     u3605:
 13285   005238  90D8               	bcf	status,0,c
 13286   00523A  3606               	rlcf	(??_pinMode+1)^0,f,c
 13287   00523C                     u3604:
 13288   00523C  2E05               	decfsz	??_pinMode^0,f,c
 13289   00523E  EF1C  F029         	goto	u3605
 13290   005242  5006               	movf	(??_pinMode+1)^0,w,c
 13291   005244  1293               	iorwf	147,f,c	;volatile
 13292   005246  EFEA  F029         	goto	l337
 13293   00524A                     l3710:
 13294   00524A  C001  F005         	movff	pinMode@pin,??_pinMode
 13295   00524E  0EF8               	movlw	-8
 13296   005250  2605               	addwf	??_pinMode^0,f,c
 13297   005252  0E01               	movlw	1
 13298   005254  6E06               	movwf	(??_pinMode+1)^0,c
 13299   005256  2A05               	incf	??_pinMode^0,f,c
 13300   005258  EF30  F029         	goto	u3614
 13301   00525C                     u3615:
 13302   00525C  90D8               	bcf	status,0,c
 13303   00525E  3606               	rlcf	(??_pinMode+1)^0,f,c
 13304   005260                     u3614:
 13305   005260  2E05               	decfsz	??_pinMode^0,f,c
 13306   005262  EF2E  F029         	goto	u3615
 13307   005266  5006               	movf	(??_pinMode+1)^0,w,c
 13308   005268  0AFF               	xorlw	255
 13309   00526A  1693               	andwf	147,f,c	;volatile
 13310   00526C  EFEA  F029         	goto	l337
 13311   005270                     l3712:
 13312   005270  BE02               	btfsc	(pinMode@pin+1)^0,7,c
 13313   005272  EF46  F029         	goto	u3620
 13314   005276  5002               	movf	(pinMode@pin+1)^0,w,c
 13315   005278  E107               	bnz	u3621
 13316   00527A  0E18               	movlw	24
 13317   00527C  5C01               	subwf	pinMode@pin^0,w,c
 13318   00527E  B0D8               	btfsc	status,0,c
 13319   005280  EF44  F029         	goto	u3621
 13320   005284  EF46  F029         	goto	u3620
 13321   005288                     u3621:
 13322   005288  EF74  F029         	goto	l3720
 13323   00528C                     u3620:
 13324   00528C                     
 13325                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
 13326   00528C  5003               	movf	pinMode@type^0,w,c
 13327   00528E  1004               	iorwf	(pinMode@type+1)^0,w,c
 13328   005290  B4D8               	btfsc	status,2,c
 13329   005292  EF4D  F029         	goto	u3631
 13330   005296  EF4F  F029         	goto	u3630
 13331   00529A                     u3631:
 13332   00529A  EF61  F029         	goto	l3718
 13333   00529E                     u3630:
 13334   00529E  C001  F005         	movff	pinMode@pin,??_pinMode
 13335   0052A2  0EF0               	movlw	-16
 13336   0052A4  2605               	addwf	??_pinMode^0,f,c
 13337   0052A6  0E01               	movlw	1
 13338   0052A8  6E06               	movwf	(??_pinMode+1)^0,c
 13339   0052AA  2A05               	incf	??_pinMode^0,f,c
 13340   0052AC  EF5A  F029         	goto	u3644
 13341   0052B0                     u3645:
 13342   0052B0  90D8               	bcf	status,0,c
 13343   0052B2  3606               	rlcf	(??_pinMode+1)^0,f,c
 13344   0052B4                     u3644:
 13345   0052B4  2E05               	decfsz	??_pinMode^0,f,c
 13346   0052B6  EF58  F029         	goto	u3645
 13347   0052BA  5006               	movf	(??_pinMode+1)^0,w,c
 13348   0052BC  1294               	iorwf	148,f,c	;volatile
 13349   0052BE  EFEA  F029         	goto	l337
 13350   0052C2                     l3718:
 13351   0052C2  C001  F005         	movff	pinMode@pin,??_pinMode
 13352   0052C6  0EF0               	movlw	-16
 13353   0052C8  2605               	addwf	??_pinMode^0,f,c
 13354   0052CA  0E01               	movlw	1
 13355   0052CC  6E06               	movwf	(??_pinMode+1)^0,c
 13356   0052CE  2A05               	incf	??_pinMode^0,f,c
 13357   0052D0  EF6C  F029         	goto	u3654
 13358   0052D4                     u3655:
 13359   0052D4  90D8               	bcf	status,0,c
 13360   0052D6  3606               	rlcf	(??_pinMode+1)^0,f,c
 13361   0052D8                     u3654:
 13362   0052D8  2E05               	decfsz	??_pinMode^0,f,c
 13363   0052DA  EF6A  F029         	goto	u3655
 13364   0052DE  5006               	movf	(??_pinMode+1)^0,w,c
 13365   0052E0  0AFF               	xorlw	255
 13366   0052E2  1694               	andwf	148,f,c	;volatile
 13367   0052E4  EFEA  F029         	goto	l337
 13368   0052E8                     l3720:
 13369   0052E8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
 13370   0052EA  EF82  F029         	goto	u3660
 13371   0052EE  5002               	movf	(pinMode@pin+1)^0,w,c
 13372   0052F0  E107               	bnz	u3661
 13373   0052F2  0E20               	movlw	32
 13374   0052F4  5C01               	subwf	pinMode@pin^0,w,c
 13375   0052F6  B0D8               	btfsc	status,0,c
 13376   0052F8  EF80  F029         	goto	u3661
 13377   0052FC  EF82  F029         	goto	u3660
 13378   005300                     u3661:
 13379   005300  EFB0  F029         	goto	l3728
 13380   005304                     u3660:
 13381   005304                     
 13382                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
 13383   005304  5003               	movf	pinMode@type^0,w,c
 13384   005306  1004               	iorwf	(pinMode@type+1)^0,w,c
 13385   005308  B4D8               	btfsc	status,2,c
 13386   00530A  EF89  F029         	goto	u3671
 13387   00530E  EF8B  F029         	goto	u3670
 13388   005312                     u3671:
 13389   005312  EF9D  F029         	goto	l3726
 13390   005316                     u3670:
 13391   005316  C001  F005         	movff	pinMode@pin,??_pinMode
 13392   00531A  0EE8               	movlw	-24
 13393   00531C  2605               	addwf	??_pinMode^0,f,c
 13394   00531E  0E01               	movlw	1
 13395   005320  6E06               	movwf	(??_pinMode+1)^0,c
 13396   005322  2A05               	incf	??_pinMode^0,f,c
 13397   005324  EF96  F029         	goto	u3684
 13398   005328                     u3685:
 13399   005328  90D8               	bcf	status,0,c
 13400   00532A  3606               	rlcf	(??_pinMode+1)^0,f,c
 13401   00532C                     u3684:
 13402   00532C  2E05               	decfsz	??_pinMode^0,f,c
 13403   00532E  EF94  F029         	goto	u3685
 13404   005332  5006               	movf	(??_pinMode+1)^0,w,c
 13405   005334  1295               	iorwf	149,f,c	;volatile
 13406   005336  EFEA  F029         	goto	l337
 13407   00533A                     l3726:
 13408   00533A  C001  F005         	movff	pinMode@pin,??_pinMode
 13409   00533E  0EE8               	movlw	-24
 13410   005340  2605               	addwf	??_pinMode^0,f,c
 13411   005342  0E01               	movlw	1
 13412   005344  6E06               	movwf	(??_pinMode+1)^0,c
 13413   005346  2A05               	incf	??_pinMode^0,f,c
 13414   005348  EFA8  F029         	goto	u3694
 13415   00534C                     u3695:
 13416   00534C  90D8               	bcf	status,0,c
 13417   00534E  3606               	rlcf	(??_pinMode+1)^0,f,c
 13418   005350                     u3694:
 13419   005350  2E05               	decfsz	??_pinMode^0,f,c
 13420   005352  EFA6  F029         	goto	u3695
 13421   005356  5006               	movf	(??_pinMode+1)^0,w,c
 13422   005358  0AFF               	xorlw	255
 13423   00535A  1695               	andwf	149,f,c	;volatile
 13424   00535C  EFEA  F029         	goto	l337
 13425   005360                     l3728:
 13426   005360  BE02               	btfsc	(pinMode@pin+1)^0,7,c
 13427   005362  EFBE  F029         	goto	u3700
 13428   005366  5002               	movf	(pinMode@pin+1)^0,w,c
 13429   005368  E107               	bnz	u3701
 13430   00536A  0E28               	movlw	40
 13431   00536C  5C01               	subwf	pinMode@pin^0,w,c
 13432   00536E  B0D8               	btfsc	status,0,c
 13433   005370  EFBC  F029         	goto	u3701
 13434   005374  EFBE  F029         	goto	u3700
 13435   005378                     u3701:
 13436   005378  EFEA  F029         	goto	l337
 13437   00537C                     u3700:
 13438   00537C                     
 13439                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
 13440   00537C  5003               	movf	pinMode@type^0,w,c
 13441   00537E  1004               	iorwf	(pinMode@type+1)^0,w,c
 13442   005380  B4D8               	btfsc	status,2,c
 13443   005382  EFC5  F029         	goto	u3711
 13444   005386  EFC7  F029         	goto	u3710
 13445   00538A                     u3711:
 13446   00538A  EFD9  F029         	goto	l3734
 13447   00538E                     u3710:
 13448   00538E  C001  F005         	movff	pinMode@pin,??_pinMode
 13449   005392  0EE0               	movlw	-32
 13450   005394  2605               	addwf	??_pinMode^0,f,c
 13451   005396  0E01               	movlw	1
 13452   005398  6E06               	movwf	(??_pinMode+1)^0,c
 13453   00539A  2A05               	incf	??_pinMode^0,f,c
 13454   00539C  EFD2  F029         	goto	u3724
 13455   0053A0                     u3725:
 13456   0053A0  90D8               	bcf	status,0,c
 13457   0053A2  3606               	rlcf	(??_pinMode+1)^0,f,c
 13458   0053A4                     u3724:
 13459   0053A4  2E05               	decfsz	??_pinMode^0,f,c
 13460   0053A6  EFD0  F029         	goto	u3725
 13461   0053AA  5006               	movf	(??_pinMode+1)^0,w,c
 13462   0053AC  1296               	iorwf	150,f,c	;volatile
 13463   0053AE  EFEA  F029         	goto	l337
 13464   0053B2                     l3734:
 13465   0053B2  C001  F005         	movff	pinMode@pin,??_pinMode
 13466   0053B6  0EE0               	movlw	-32
 13467   0053B8  2605               	addwf	??_pinMode^0,f,c
 13468   0053BA  0E01               	movlw	1
 13469   0053BC  6E06               	movwf	(??_pinMode+1)^0,c
 13470   0053BE  2A05               	incf	??_pinMode^0,f,c
 13471   0053C0  EFE4  F029         	goto	u3734
 13472   0053C4                     u3735:
 13473   0053C4  90D8               	bcf	status,0,c
 13474   0053C6  3606               	rlcf	(??_pinMode+1)^0,f,c
 13475   0053C8                     u3734:
 13476   0053C8  2E05               	decfsz	??_pinMode^0,f,c
 13477   0053CA  EFE2  F029         	goto	u3735
 13478   0053CE  5006               	movf	(??_pinMode+1)^0,w,c
 13479   0053D0  0AFF               	xorlw	255
 13480   0053D2  1696               	andwf	150,f,c	;volatile
 13481   0053D4                     l337:
 13482   0053D4  0012               	return		;funcret
 13483   0053D6                     __end_of_pinMode:
 13484                           	callstack 0
 13485                           
 13486                           	psect	rparam
 13487   000000                     
 13488                           	psect	idloc
 13489                           
 13490                           ;Config register IDLOC0 @ 0x200000
 13491                           ;	unspecified, using default values
 13492   200000                     	org	2097152
 13493   200000  FF                 	db	255
 13494                           
 13495                           ;Config register IDLOC1 @ 0x200001
 13496                           ;	unspecified, using default values
 13497   200001                     	org	2097153
 13498   200001  FF                 	db	255
 13499                           
 13500                           ;Config register IDLOC2 @ 0x200002
 13501                           ;	unspecified, using default values
 13502   200002                     	org	2097154
 13503   200002  FF                 	db	255
 13504                           
 13505                           ;Config register IDLOC3 @ 0x200003
 13506                           ;	unspecified, using default values
 13507   200003                     	org	2097155
 13508   200003  FF                 	db	255
 13509                           
 13510                           ;Config register IDLOC4 @ 0x200004
 13511                           ;	unspecified, using default values
 13512   200004                     	org	2097156
 13513   200004  FF                 	db	255
 13514                           
 13515                           ;Config register IDLOC5 @ 0x200005
 13516                           ;	unspecified, using default values
 13517   200005                     	org	2097157
 13518   200005  FF                 	db	255
 13519                           
 13520                           ;Config register IDLOC6 @ 0x200006
 13521                           ;	unspecified, using default values
 13522   200006                     	org	2097158
 13523   200006  FF                 	db	255
 13524                           
 13525                           ;Config register IDLOC7 @ 0x200007
 13526                           ;	unspecified, using default values
 13527   200007                     	org	2097159
 13528   200007  FF                 	db	255
 13529                           
 13530                           	psect	config
 13531                           
 13532                           ;Config register CONFIG1L @ 0x300000
 13533                           ;	unspecified, using default values
 13534                           ;	PLL Prescaler Selection bits
 13535                           ;	PLLDIV = 0x0, unprogrammed default
 13536                           ;	System Clock Postscaler Selection bits
 13537                           ;	CPUDIV = 0x0, unprogrammed default
 13538                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 13539                           ;	USBDIV = 0x0, unprogrammed default
 13540   300000                     	org	3145728
 13541   300000  00                 	db	0
 13542                           
 13543                           ;Config register CONFIG1H @ 0x300001
 13544                           ;	Oscillator Selection bits
 13545                           ;	FOSC = HS, HS oscillator (HS)
 13546                           ;	Fail-Safe Clock Monitor Enable bit
 13547                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13548                           ;	Internal/External Oscillator Switchover bit
 13549                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13550   300001                     	org	3145729
 13551   300001  0C                 	db	12
 13552                           
 13553                           ;Config register CONFIG2L @ 0x300002
 13554                           ;	Power-up Timer Enable bit
 13555                           ;	PWRT = OFF, PWRT disabled
 13556                           ;	Brown-out Reset Enable bits
 13557                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 13558                           ;	Brown-out Reset Voltage bits
 13559                           ;	BORV = 0x2E, user specified literal
 13560                           ;	USB Voltage Regulator Enable bit
 13561                           ;	VREGEN = 0x1, unprogrammed default
 13562   300002                     	org	3145730
 13563   300002  71                 	db	369
 13564                           
 13565                           ;Config register CONFIG2H @ 0x300003
 13566                           ;	Watchdog Timer Enable bit
 13567                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 13568                           ;	Watchdog Timer Postscale Select bits
 13569                           ;	WDTPS = 1, 1:1
 13570   300003                     	org	3145731
 13571   300003  00                 	db	0
 13572                           
 13573                           ; Padding undefined space
 13574   300004                     	org	3145732
 13575   300004  FF                 	db	255
 13576                           
 13577                           ;Config register CONFIG3H @ 0x300005
 13578                           ;	CCP2 MUX bit
 13579                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 13580                           ;	PORTB A/D Enable bit
 13581                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 13582                           ;	Low-Power Timer 1 Oscillator Enable bit
 13583                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13584                           ;	MCLR Pin Enable bit
 13585                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 13586   300005                     	org	3145733
 13587   300005  83                 	db	131
 13588                           
 13589                           ;Config register CONFIG4L @ 0x300006
 13590                           ;	Stack Full/Underflow Reset Enable bit
 13591                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 13592                           ;	Single-Supply ICSP Enable bit
 13593                           ;	LVP = OFF, Single-Supply ICSP disabled
 13594                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 13595                           ;	ICPRT = 0x0, unprogrammed default
 13596                           ;	Extended Instruction Set Enable bit
 13597                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13598                           ;	Background Debugger Enable bit
 13599                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 13600   300006                     	org	3145734
 13601   300006  80                 	db	128
 13602                           
 13603                           ; Padding undefined space
 13604   300007                     	org	3145735
 13605   300007  FF                 	db	255
 13606                           
 13607                           ;Config register CONFIG5L @ 0x300008
 13608                           ;	Code Protection bit
 13609                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 13610                           ;	Code Protection bit
 13611                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 13612                           ;	Code Protection bit
 13613                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 13614                           ;	Code Protection bit
 13615                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 13616   300008                     	org	3145736
 13617   300008  0F                 	db	15
 13618                           
 13619                           ;Config register CONFIG5H @ 0x300009
 13620                           ;	Boot Block Code Protection bit
 13621                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 13622                           ;	Data EEPROM Code Protection bit
 13623                           ;	CPD = OFF, Data EEPROM is not code-protected
 13624   300009                     	org	3145737
 13625   300009  C0                 	db	192
 13626                           
 13627                           ;Config register CONFIG6L @ 0x30000A
 13628                           ;	Write Protection bit
 13629                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 13630                           ;	Write Protection bit
 13631                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 13632                           ;	Write Protection bit
 13633                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 13634                           ;	Write Protection bit
 13635                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 13636   30000A                     	org	3145738
 13637   30000A  0F                 	db	15
 13638                           
 13639                           ;Config register CONFIG6H @ 0x30000B
 13640                           ;	Configuration Register Write Protection bit
 13641                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 13642                           ;	Boot Block Write Protection bit
 13643                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 13644                           ;	Data EEPROM Write Protection bit
 13645                           ;	WRTD = OFF, Data EEPROM is not write-protected
 13646   30000B                     	org	3145739
 13647   30000B  E0                 	db	224
 13648                           
 13649                           ;Config register CONFIG7L @ 0x30000C
 13650                           ;	Table Read Protection bit
 13651                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13652                           ;	Table Read Protection bit
 13653                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13654                           ;	Table Read Protection bit
 13655                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13656                           ;	Table Read Protection bit
 13657                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 13658   30000C                     	org	3145740
 13659   30000C  0F                 	db	15
 13660                           
 13661                           ;Config register CONFIG7H @ 0x30000D
 13662                           ;	Boot Block Table Read Protection bit
 13663                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 13664   30000D                     	org	3145741
 13665   30000D  40                 	db	64
 13666                           tosu	equ	0xFFF
 13667                           tosh	equ	0xFFE
 13668                           tosl	equ	0xFFD
 13669                           stkptr	equ	0xFFC
 13670                           pclatu	equ	0xFFB
 13671                           pclath	equ	0xFFA
 13672                           pcl	equ	0xFF9
 13673                           tblptru	equ	0xFF8
 13674                           tblptrh	equ	0xFF7
 13675                           tblptrl	equ	0xFF6
 13676                           tablat	equ	0xFF5
 13677                           prodh	equ	0xFF4
 13678                           prodl	equ	0xFF3
 13679                           indf0	equ	0xFEF
 13680                           postinc0	equ	0xFEE
 13681                           postdec0	equ	0xFED
 13682                           preinc0	equ	0xFEC
 13683                           plusw0	equ	0xFEB
 13684                           fsr0h	equ	0xFEA
 13685                           fsr0l	equ	0xFE9
 13686                           wreg	equ	0xFE8
 13687                           indf1	equ	0xFE7
 13688                           postinc1	equ	0xFE6
 13689                           postdec1	equ	0xFE5
 13690                           preinc1	equ	0xFE4
 13691                           plusw1	equ	0xFE3
 13692                           fsr1h	equ	0xFE2
 13693                           fsr1l	equ	0xFE1
 13694                           bsr	equ	0xFE0
 13695                           indf2	equ	0xFDF
 13696                           postinc2	equ	0xFDE
 13697                           postdec2	equ	0xFDD
 13698                           preinc2	equ	0xFDC
 13699                           plusw2	equ	0xFDB
 13700                           fsr2h	equ	0xFDA
 13701                           fsr2l	equ	0xFD9
 13702                           status	equ	0xFD8

Data Sizes:
    Strings     507
    Constant    0
    Data        80
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      9     134
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memset@dest	PTR void  size(2) Largest target is 32
		 -> protocolo(BANK0[32]), 

    memset@s	PTR unsigned char  size(2) Largest target is 32
		 -> protocolo(BANK0[32]), 

    serialAlerts	PTR unsigned char [2][2] size(2) Largest target is 32
		 -> STR_49(CODE[31]), STR_48(CODE[30]), STR_47(CODE[32]), STR_46(CODE[29]), 

    lcdAlerts	PTR unsigned char [2][2] size(2) Largest target is 5
		 -> STR_45(CODE[5]), STR_44(CODE[5]), STR_43(CODE[5]), STR_42(CODE[5]), 

    msgsL2	PTR unsigned char [2][8] size(2) Largest target is 16
		 -> STR_41(CODE[9]), STR_40(CODE[9]), STR_39(CODE[9]), STR_38(CODE[9]), 
		 -> STR_37(CODE[9]), STR_36(CODE[9]), STR_35(CODE[9]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[16]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[16]), STR_28(CODE[16]), STR_27(CODE[10]), STR_26(CODE[10]), 

    msgsL1	PTR unsigned char [2][8] size(2) Largest target is 17
		 -> STR_25(CODE[17]), STR_24(CODE[16]), STR_23(CODE[17]), STR_22(CODE[16]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[17]), STR_16(CODE[16]), STR_15(CODE[17]), STR_14(CODE[16]), 
		 -> STR_13(CODE[16]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[10]), 

    serialString@msg	PTR unsigned char  size(2) Largest target is 38
		 -> STR_49(CODE[31]), STR_48(CODE[30]), STR_47(CODE[32]), STR_46(CODE[29]), 
		 -> STR_41(CODE[9]), STR_40(CODE[9]), STR_39(CODE[9]), STR_38(CODE[9]), 
		 -> STR_37(CODE[9]), STR_36(CODE[9]), STR_35(CODE[9]), STR_34(CODE[9]), 
		 -> STR_33(CODE[16]), STR_32(CODE[16]), STR_31(CODE[16]), STR_30(CODE[16]), 
		 -> STR_29(CODE[16]), STR_28(CODE[16]), STR_27(CODE[10]), STR_26(CODE[10]), 
		 -> STR_25(CODE[17]), STR_24(CODE[16]), STR_23(CODE[17]), STR_22(CODE[16]), 
		 -> STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[17]), STR_16(CODE[16]), STR_15(CODE[17]), STR_14(CODE[16]), 
		 -> STR_13(CODE[16]), STR_12(CODE[16]), STR_11(CODE[10]), STR_10(CODE[10]), 
		 -> STR_9(CODE[38]), STR_8(CODE[28]), STR_7(CODE[28]), STR_6(CODE[28]), 
		 -> STR_5(CODE[28]), STR_4(CODE[28]), STR_3(CODE[28]), STR_2(CODE[28]), 
		 -> STR_1(CODE[28]), protocolo(BANK0[32]), 

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_51(CODE[5]), STR_50(CODE[5]), STR_45(CODE[5]), STR_44(CODE[5]), 
		 -> STR_43(CODE[5]), STR_42(CODE[5]), STR_41(CODE[9]), STR_40(CODE[9]), 
		 -> STR_39(CODE[9]), STR_38(CODE[9]), STR_37(CODE[9]), STR_36(CODE[9]), 
		 -> STR_35(CODE[9]), STR_34(CODE[9]), STR_33(CODE[16]), STR_32(CODE[16]), 
		 -> STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[16]), STR_28(CODE[16]), 
		 -> STR_27(CODE[10]), STR_26(CODE[10]), STR_25(CODE[17]), STR_24(CODE[16]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[17]), STR_18(CODE[16]), STR_17(CODE[17]), STR_16(CODE[16]), 
		 -> STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[16]), STR_12(CODE[16]), 
		 -> STR_11(CODE[10]), STR_10(CODE[10]), 

    sp__memset	PTR void  size(2) Largest target is 32
		 -> protocolo(BANK0[32]), 


Critical Paths under _main in COMRAM

    _varInit->_setAlarmLevel
    _smLoop->_eventRead
    _setTimer->_getTimer
    _outputPrint->_serialInt
    _serialInt->_checkAlarm
    _ledOff->_digitalWrite
    _ledBlink->_digitalWrite
    _lcdString->_lcdData
    _lcdInt->_getSensorValue
    _lcdData->_lcdCommand4bits
    ___awmod->___awdiv
    _checkAlarm->_getSensorValue
    _getSensorValue->_adcRead
    _adcRead->___fltol
    ___fltol->___fladd
    ___fldiv->___xxtofl
    _getAlarmLevel->_dsReadData
    _getLanguage->_dsReadData
    _eventRead->_processarProtocolo
    _processarProtocolo->_setAlarmLevel
    _setLanguage->_dsWriteData
    _setAlarmLevel->_dsWriteData
    _dsWriteData->___fladd
    ___fladd->___fldiv
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _serialString->_serialSend
    _ledInit->_digitalWrite
    _lcdInit->_lcdCommand
    _lcdCommand->_Delay2ms
    _lcdCommand->_lcdCommand4bits
    _kpInit->_pinMode
    _i2cInit->_pinMode
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    _main->_smLoop
    _smLoop->_eventRead

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1223762
                            _adcInit
                             _dsInit
                          _eventInit
                             _kpInit
                            _lcdInit
                            _ledInit
                             _smLoop
                          _timerInit
                         _timerReset
                          _timerWait
                            _varInit
 ---------------------------------------------------------------------------------
 (1) _varInit                                              0     0      0  272764
                      _getAlarmLevel
                      _setAlarmLevel
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _smLoop                                               3     3      0  935883
                                              6 BANK0      3     3      0
                          _eventRead
                      _getAlarmLevel
                        _getLanguage
                           _getState
                           _getTimer
                        _outputPrint
                      _setAlarmLevel
                        _setLanguage
                           _setState
                           _setTimer
 ---------------------------------------------------------------------------------
 (2) _setTimer                                             2     0      2     174
                                              2 COMRAM     2     0      2
                           _getTimer (ARG)
 ---------------------------------------------------------------------------------
 (2) _setState                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _outputPrint                                          8     4      4  244690
                                             82 COMRAM     8     4      4
                         _checkAlarm
                      _getAlarmLevel
                        _getLanguage (ARG)
                     _getSensorValue
                           _getState (ARG)
                         _lcdCommand
                             _lcdInt
                          _lcdString
                           _ledBlink
                             _ledOff
                          _serialInt
                         _serialSend
                       _serialString
 ---------------------------------------------------------------------------------
 (3) _serialInt                                            2     0      2    4560
                                             80 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
                         _checkAlarm (ARG)
                      _getAlarmLevel (ARG)
                     _getSensorValue (ARG)
                         _serialSend
 ---------------------------------------------------------------------------------
 (3) _ledOff                                               4     2      2    2442
                                              6 COMRAM     4     2      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _ledBlink                                             4     2      2    3118
                                              6 COMRAM     4     2      2
                        _digitalRead
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _lcdString                                            6     4      2    2570
                                              3 COMRAM     6     4      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (3) _lcdInt                                               2     0      2    5270
                                             73 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
                      _getAlarmLevel (ARG)
                     _getSensorValue (ARG)
                            _lcdData
 ---------------------------------------------------------------------------------
 (4) _lcdData                                              1     1      0     808
                                              2 COMRAM     1     1      0
                          _Delay40us
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2272
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1668
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _checkAlarm                                           7     3      4  111176
                                             73 COMRAM     7     3      4
                      _getAlarmLevel
                     _getSensorValue
 ---------------------------------------------------------------------------------
 (3) _getSensorValue                                       4     2      2    6137
                                             69 COMRAM     4     2      2
                            _adcRead
 ---------------------------------------------------------------------------------
 (4) _adcRead                                              4     2      2    5613
                                             65 COMRAM     4     2      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                             55 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1703
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _getAlarmLevel                                        6     2      4  104103
                                             18 COMRAM     6     2      4
                         _dsReadData
 ---------------------------------------------------------------------------------
 (2) _getTimer                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _getState                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getLanguage                                          2     0      2  100671
                                             18 COMRAM     2     0      2
                         _dsReadData
 ---------------------------------------------------------------------------------
 (2) _eventRead                                            8     6      2  252691
                                             93 COMRAM     2     0      2
                                              0 BANK0      6     6      0
                             _kpRead
                             _memset
                 _processarProtocolo
                         _serialRead
                       _serialString
 ---------------------------------------------------------------------------------
 (3) _serialRead                                           1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _processarProtocolo                                  15    15      0  248331
                                             78 COMRAM    15    15      0
                             ___wmul
                       _serialString
                      _setAlarmLevel
                        _setLanguage
 ---------------------------------------------------------------------------------
 (2) _setLanguage                                          2     0      2   64166
                                             62 COMRAM     2     0      2
                        _dsWriteData
                        _getLanguage (ARG)
 ---------------------------------------------------------------------------------
 (2) _setAlarmLevel                                       16    10      6  168661
                                             62 COMRAM    16    10      6
                         _dsReadData
                        _dsWriteData
                      _getAlarmLevel (ARG)
 ---------------------------------------------------------------------------------
 (3) _dsWriteData                                          7     5      2   63916
                                             55 COMRAM     7     5      2
                            ___fladd
                             ___flge
                         _dsReadData (ARG)
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2692
                                             39 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _dsReadData                                           5     3      2  100671
                                             13 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (4) _i2cWriteByte                                         5     3      2   59715
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (5) _i2c_start                                            0     0      0   16464
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _i2cReadByte                                          6     5      1   39923
                                              7 COMRAM     6     5      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (5) _i2c_write_bit                                        1     1      0   16508
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _i2c_stop                                             0     0      0   11476
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (6) _clear_SDA                                            0     0      0    4988
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _i2c_read_bit                                         1     1      0   11499
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (6) _read_SDA                                             0     0      0    3244
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (6) _read_SCL                                             0     0      0    3244
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (7) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _clear_SCL                                            0     0      0    4988
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (6) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (3) _serialString                                         6     4      2    2392
                                              1 COMRAM     6     4      2
                         _serialSend
 ---------------------------------------------------------------------------------
 (4) _serialSend                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   12271
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1403
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (3) _kpRead                                               2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ledInit                                              0     0      0    2268
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (7) _digitalWrite                                         6     2      4    2268
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              1     1      0    1800
                                              3 COMRAM     1     1      0
                           _Delay2ms
                         _lcdCommand
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0     944
                                              2 COMRAM     1     1      0
                           _Delay2ms
                          _Delay40us
                    _lcdCommand4bits
 ---------------------------------------------------------------------------------
 (5) _lcdCommand4bits                                      2     1      1     718
                                              0 COMRAM     2     1      1
                        _pulseEnable
 ---------------------------------------------------------------------------------
 (6) _pulseEnable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             2     2      0      92
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _eventInit                                            0     0      0    2720
                             _kpInit
                         _serialInit
 ---------------------------------------------------------------------------------
 (2) _serialInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    2720
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _dsInit                                               0     0      0    2720
                            _i2cInit
 ---------------------------------------------------------------------------------
 (2) _i2cInit                                              0     0      0    2720
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    2720
                            _pinMode
 ---------------------------------------------------------------------------------
 (7) _pinMode                                              6     2      4    2720
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
     _pinMode
   _dsInit
     _i2cInit
       _pinMode
   _eventInit
     _kpInit
       _pinMode
     _serialInit
   _kpInit
   _lcdInit
     _Delay2ms
     _lcdCommand
       _Delay2ms
       _Delay40us
       _lcdCommand4bits
         _pulseEnable
     _lcdCommand4bits
   _ledInit
     _digitalWrite
   _smLoop
     _eventRead
       _kpRead
       _memset
       _processarProtocolo
         ___wmul
         _serialString
           _serialSend
         _setAlarmLevel
           _dsReadData
             _i2cReadByte
               _i2c_read_bit
                 _I2C_delay
                 _clear_SCL
                   _digitalWrite
                   _pinMode
                 _read_SCL
                   _digitalRead
                   _pinMode
                 _read_SDA
                   _digitalRead
                   _pinMode
               _i2c_stop
                 _I2C_delay
                 _clear_SDA
                   _digitalWrite
                   _pinMode
                 _read_SCL
                 _read_SDA
               _i2c_write_bit
                 _I2C_delay
                 _clear_SCL
                 _clear_SDA
                 _read_SCL
                 _read_SDA
             _i2cWriteByte
               _i2c_read_bit
               _i2c_start
                 _I2C_delay
                 _clear_SCL
                 _clear_SDA
                 _read_SCL
                 _read_SDA
               _i2c_stop
               _i2c_write_bit
           _dsWriteData
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flge
             _dsReadData (ARG)
             _i2cWriteByte (ARG)
           _getAlarmLevel (ARG)
             _dsReadData
         _setLanguage
           _dsWriteData
           _getLanguage (ARG)
             _dsReadData
       _serialRead
       _serialString
     _getAlarmLevel
     _getLanguage
     _getState
     _getTimer
     _outputPrint
       _checkAlarm
         _getAlarmLevel
         _getSensorValue
           _adcRead
             ___fladd
             ___fldiv
             ___fltol
               ___fladd (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl
       _getAlarmLevel
       _getLanguage (ARG)
       _getSensorValue (ARG)
       _getState (ARG)
       _lcdCommand (ARG)
       _lcdInt (ARG)
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _getAlarmLevel (ARG)
         _getSensorValue (ARG)
         _lcdData (ARG)
           _Delay40us
           _lcdCommand4bits
       _lcdString (ARG)
         _lcdData
       _ledBlink (ARG)
         _digitalRead
         _digitalWrite
       _ledOff (ARG)
         _digitalWrite
       _serialInt (ARG)
         ___awdiv
         ___awmod
         _checkAlarm (ARG)
         _getAlarmLevel (ARG)
         _getSensorValue (ARG)
         _serialSend (ARG)
       _serialSend (ARG)
       _serialString (ARG)
     _setAlarmLevel
     _setLanguage
     _setState
     _setTimer
       _getTimer (ARG)
   _timerInit
   _timerReset
   _timerWait
   _varInit
     _getAlarmLevel
     _setAlarmLevel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      9      86       5       83.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRlllh       1C      0       0      30        0.0%
BITBIGSFRhhhlh      1A      0       0      21        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRllhl        D      0       0      29        0.0%
BITBIGSFRllhhlh      C      0       0      27        0.0%
BITBIGSFRhhhll       9      0       0      22        0.0%
BITBIGSFRllhhlh      7      0       0      26        0.0%
BITBIGSFRllhhll      7      0       0      28        0.0%
BITBIGSFRhhl         5      0       0      23        0.0%
BITBIGSFRllhhh       4      0       0      24        0.0%
BITBIGSFRllll        3      0       0      31        0.0%
BITBIGSFRllhhlh      1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E5      32        0.0%
DATA                 0      0      E5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jul 10 23:27:03 2023

      __end_of_setAlarmLevel 58D6                 ___fldiv@aexp 0027                 ___fldiv@bexp 0026  
                          _j 00B9                 ___fldiv@sign 001F                 lcdString@msg 0004  
                         l27 393C                           l63 5B90                           l57 5B80  
                         l85 712A                 ___awdiv@sign 0006          ___wmul@multiplicand 0003  
              ??_i2cReadByte 0009             ??_getSensorValue 0048        i2cWriteByte@send_stop 0008  
             i2cReadByte@bit 000B                          l201 3A2A                          l210 3C0E  
                        l204 38D0                          l213 3A54                          l303 5622  
                        l207 3BD6                          l312 4CA4                          l216 3A7E  
                        l233 3B36                          l242 3F0E                          l226 3D66  
                        l307 4CA8                          l411 422A                          l308 4CA4  
                        l405 3D1C                          l261 3E0A                          l510 3952  
                        l255 3F6E                          l504 41AC                          l248 3B68  
                        l192 5186                          l408 39B8                          l337 53D4  
                        l177 3C8E                          l185 502C                          l417 3EB6  
                        l362 4328                          l427 412E                          l507 3940  
                        l515 3AAA                          l187 503A                          l532 3908  
                        l357 4038                          l541 38F2                          l518 399A  
                        l382 3AD8                          l390 406E                          l454 3C30  
                        l375 3980                          l391 4070                          l359 403E  
                        l535 3916                          l392 4084                          l560 4A5A  
                        l385 38DC                          l393 4086                          l561 4AA6  
                        l394 409A                          l634 58D4                          l650 3928  
                        l570 38EA                          l538 39DA                          l562 4AF2  
                        l395 409C                          l396 40B0                          l388 4058  
                        l564 4B3E                          l389 405A                          l573 38FC  
                        l398 40B6                          l582 47F4                          l647 3968  
                        l567 38E2                          l655 3E60                          l639 4634  
                        l807 3FD0                          l727 6930                          l576 3906  
                        l729 6974                          l818 4702                          l498 42A8  
                        l835 38D6                          l843 4566                          l846 3CD4  
                        l793 3B06                          l786 7E00                          l867 3A00  
                        _PR2 000FCB                 ___awmod@sign 000E                          wreg 000FE8  
processarProtocolo@new_value 005C             i2c_write_bit@bit 0007                ?_i2cWriteByte 0008  
     i2cWriteByte@send_start 000A              i2cReadByte@nack 000A                 ___fltol@exp1 0041  
            i2cReadByte@byte 000D                         l1111 43D8                         l1132 48B2  
                       l1137 48F8                         l1412 6234                         l1404 63EA  
                       l1164 49FE                         l1421 6304                         l1422 62F2  
                       l4000 603C                         l4010 6050                         l4002 6040  
                       l1522 4E76                         l1098 449C                         l1451 5D8A  
                       l4100 62A2                         l4020 6064                         l4012 6054  
                       l4004 6044                         l1460 5DD0                         l1525 4FD2  
                       l1542 4E1E                         l4110 62D4                         l4102 62B2  
                       l4030 60B6                         l4022 6068                         l4014 6058  
                       l4006 6048                         l1462 5E48                         l1454 5D4E  
                       l1463 5E36                         l4120 632E                         l4112 62EA  
                       l4104 62B4                         l4040 60FA                         l4032 60C6  
                       l4016 605C                         l4008 604C                         l4024 606C  
                       l5000 7084                         l4200 5CB4                         l1536 4F6A  
                       l1449 5F2A                         l1529 4F0E                         l4130 63AA  
                       l4122 6368                         l4106 62C2                         l4042 60FC  
                       l4034 60DC                         l4026 6070                         l4018 6060  
                       l5010 70DC                         l5002 7096                         l4210 5CF2  
                       l4202 5CB4                         l1395 611A                         l4140 63CA  
                       l4132 63AE                         l4116 6314                         l4124 636A  
                       l4108 62C6                         l4060 6184                         l4052 614C  
                       l4044 6106                         l4036 60E8                         l4028 609A  
                       l1396 6108                         l4300 48A0                         l5012 70EE  
                       l5004 70A6                         l5020 710C                         l4220 5D3E  
                       l4212 5D02                         l5100 3F74                         l1397 60CE  
                       l5030 3D00                         l4142 63D8                         l4134 63BC  
                       l4126 637A                         l4118 6320                         l4062 6188  
                       l4054 615C                         l4046 6128                         l4070 61A8  
                       l4038 60EC                         l4302 48F0                         l5022 711E  
                       l5006 70B8                         l5014 7100                         l4230 5D88  
                       l4222 5D4C                         l4214 5D12                         l4206 5CC8  
                       l4150 5B9E                         l4310 4910                         l5102 3F8C  
                       l5120 42AE                         l5112 3982                         l5032 3D10  
                       l5024 3CD8                         l4144 63DA                         l4136 63C2  
                       l4128 638A                         l4072 61CE                         l4080 6224  
                       l4064 6196                         l4056 616A                         l4048 6138  
                       l4304 48F6                         l5008 70CA                         l5200 5AC8  
                       l4240 5DCE                         l4232 5D9A                         l4224 5D58  
                       l4216 5D1A                         l4208 5CE2                         l4160 5BDE  
                       l4152 5BAC                         l4320 4960                         l4400 4FD8  
                       l5040 3E6E                         l5130 4300                         l5122 42B0  
                       l5114 3996                         l5034 3D18                         l5026 3CE2  
                       l4138 63C4                         l4090 6278                         l4082 624A  
                       l4074 6202                         l4066 6198                         l4058 6178  
                       l5202 5ADA                         l5210 5B18                         l4250 5E2E  
                       l4234 5DB0                         l4242 5DE0                         l4226 5D76  
                       l4218 5D2A                         l4170 5C04                         l4162 5BE0  
                       l4154 5BAE                         l4330 498A                         l4322 4964  
                       l4314 4924                         l4410 5012                         l4402 4FDC  
                       l5050 457A                         l5042 3E8A                         l5106 3FA4  
                       l3700 51B6                         l5132 4314                         l5124 42C4  
                       l5116 3998                         l5028 3CEE                         l4092 6286  
                       l4084 625A                         l4076 6204                         l4068 61A2  
                       l4500 570C                         l5220 5B60                         l5212 5B2C  
                       l5204 5AEA                         l5140 5906                         l4260 5E9C  
                       l4244 5DEE                         l4236 5DB6                         l4228 5D78  
                       l4180 5C44                         l4172 5C12                         l4156 5BBE  
                       l4164 5BE8                         l4148 5B92                         l4340 49B2  
                       l4332 4994                         l4324 4972                         l4316 494E  
                       l4308 48FA                         l4420 504E                         l4412 5026  
                       l4404 4FF0                         l5052 45C0                         l5036 41AE  
                       l5044 3E8E                         l5300 7382                         l3364 38EC  
                       l3710 524A                         l3702 51D6                         l5230 3A02  
                       l5126 42D8                         l5118 42AA                         l4430 396A  
                       l4094 6288                         l4078 6214                         l4510 5792  
                       l4502 571E                         l5222 5B70                         l5206 5AEE  
                       l5150 5952                         l5142 591A                         l5134 58D6  
                       l4270 5F06                         l4254 5E58                         l4262 5EA0  
                       l4246 5DF2                         l4238 5DC0                         l4190 5C84  
                       l4182 5C46                         l4174 5C14                         l4166 5BF8  
                       l4158 5BCE                         l4342 49BE                         l4334 499E  
                       l4318 4950                         l4422 5052                         l4414 502A  
                       l4406 4FF8                         l5062 45D8                         l5038 3E62  
                       l5046 422C                         l5310 7422                         l5302 73C0  
                       l3366 38F0                         l3720 52E8                         l3712 5270  
                       l3704 51F8                         l5128 42EC                         l4440 4042  
                       l3800 5552                         l4096 6296                         l4088 626E  
                       l4520 57F2                         l4512 57AE                         l5216 5B4C  
                       l5208 5AF8                         l5224 5B80                         l5152 595A  
                       l5144 5922                         l5160 5990                         l5136 58E0  
                       l5232 38DE                         l4272 5F0A                         l4264 5EBA  
                       l4256 5E64                         l4248 5E00                         l4192 5C8C  
                       l4176 5C24                         l4184 5C4E                         l4168 5BFE  
                       l4344 49CE                         l4360 4E9C                         l4352 4E22  
                       l4424 5096                         l4416 5040                         l4408 500C  
                       l5064 45EA                         l5048 4568                         l5080 4658  
                       l5400 79D4                         l5320 749C                         l5312 7440  
                       l5304 73D8                         l5240 38FE                         l3730 537C  
                       l3722 5304                         l3714 528C                         l3706 5214  
                       l4450 40AA                         l4442 4052                         l3810 55E4  
                       l3802 556C                         l4098 629E                         l4290 4834  
                       l4522 581C                         l4530 585E                         l4514 57BA  
                       l4506 573C                         l5226 5B88                         l5218 5B5C  
                       l5170 59DA                         l5162 5998                         l5154 596E  
                       l5146 5936                         l5138 58EE                         l5242 3954  
                       l4610 4798                         l4274 5F18                         l4266 5ED0  
                       l4258 5E72                         l4194 5C90                         l4186 5C5E  
                       l4178 5C34                         l4346 49DE                         l4370 4EF6  
                       l4354 4E32                         l4426 5110                         l4418 5046  
                       l5058 45CC                         l5082 4670                         l5410 7A90  
                       l5402 79E8                         l5330 74FA                         l5322 74BA  
                       l5314 7446                         l5306 73DE                         l5250 714C  
                       l3538 3908                         l3732 538E                         l3724 5316  
                       l3716 529E                         l3708 5226                         l4436 396E  
                       l4452 40B2                         l4444 4068                         l5500 4112  
                       l3812 5604                         l3804 558C                         l3900 3F26  
                       l4460 3CCC                         l4292 4862                         l4524 5838  
                       l4516 57C2                         l4508 5768                         l5180 5A28  
                       l5172 59EC                         l5164 59AA                         l5156 5976  
                       l5148 593E                         l4604 4756                         l4276 5F1E  
                       l4268 5EEA                         l4188 5C74                         l4348 49EE  
                       l4380 4F5A                         l4372 4EF8                         l4364 4EB0  
                       l4356 4E40                         l5084 4688                         l5092 46D6  
                       l5076 4636                         l5412 7A96                         l5404 79EE  
                       l5420 7B38                         l5340 75A0                         l5324 74D8  
                       l5316 7452                         l5308 7404                         l5260 71B0  
                       l5332 7506                         l5252 7154                         l5236 38E6  
                       l3734 53B2                         l3726 533A                         l3718 52C2  
                       l4438 3970                         l4446 407E                         l5502 4116  
                       l3806 55AE                         l4454 3940                         l4470 4130  
                       l3822 3A2C                         l3814 3BA0                         l3830 3D34  
                       l3910 3F44                         l4294 4872                         l4286 47F6  
                       l4534 587C                         l4526 5844                         l4518 57D4  
                       l5190 5A7C                         l5182 5A3A                         l5174 59F8  
                       l5166 59BC                         l5158 5988                         l5238 38F4  
                       l4630 47C8                         l4606 4782                         l4278 5F20  
                       l4198 5CA4                         l4390 4FB2                         l4382 4F78  
                       l4374 4F04                         l4366 4EB8                         l4358 4E86  
                       l4710 4348                         l4702 432A                         l5086 46A6  
                       l5078 463A                         l5430 7BF4                         l5422 7B4C  
                       l5414 7AD4                         l5406 7A2C                         l5350 763C  
                       l5342 75A6                         l5334 7518                         l5326 74DE  
                       l5318 7476                         l5270 724A                         l5262 71C8  
                       l5254 7166                         l5246 712C                         l5510 4A00  
                       l3728 5360                         l4560 3AB0                         l4448 4094  
                       l5504 411C                         l3808 55CA                         l4800 4E02  
                       l4456 394E                         l4472 413C                         l3760 4C14  
                       l3752 4BCC                         l3744 4B84                         l3736 4B40  
                       l3824 3A56                         l3840 3D58                         l3832 3D38  
                       l3912 3F46                         l4296 4880                         l4288 4824  
                       l4464 44A0                         l4528 584C                         l4480 5628  
                       l4552 3918                         l5192 5A88                         l5184 5A4C  
                       l5176 5A0A                         l5168 59C8                         l4616 47B0  
                       l4392 4FC0                         l4384 4F7A                         l4376 4F40  
                       l4368 4EC4                         l4640 3E0C                         l4720 4380  
                       l4712 4356                         l4704 432E                         l5088 46BE  
                       l5432 7BFA                         l5424 7B52                         l5440 7C9C  
                       l5416 7ADA                         l5408 7A70                         l5360 7708  
                       l5352 7642                         l5344 75E4                         l5336 751E  
                       l5328 74EE                         l5280 72C2                         l5272 7268  
                       l5264 7206                         l5256 716C                         l5248 7146  
                       l5600 65B0                         l5520 4B22                         l5512 4A0E  
                       l5522 38D2                         l4570 3AC6                         l4554 3AAC  
                       l5506 4122                         l4802 4E08                         l4474 416C  
                       l3770 4C78                         l3762 4C30                         l3754 4BE8  
                       l3746 4BA0                         l3738 4B5C                         l3818 3BD8  
                       l3850 3B10                         l3930 3DD4                         l3922 3DBA  
                       l3842 3D5C                         l3834 3D4C                         l3826 3D1E  
                       l3914 3F56                         l3906 3F2A                         l4458 3C90  
                       l4298 4892                         l4482 5652                         l4490 5694  
                       l4538 58A8                         l4810 6992                         l5194 5A9A  
                       l5186 5A58                         l5178 5A1C                         l4394 4FC2  
                       l4386 4F7E                         l4378 4F4C                         l4642 3E1E  
                       l4722 438E                         l4730 43B8                         l4714 435E  
                       l4706 433C                         l5098 3F70                         l5450 7D58  
                       l5442 7CB0                         l5434 7C38                         l5426 7B90  
                       l5418 7B18                         l5370 77A4                         l5362 770E  
                       l5354 7680                         l5346 75EA                         l5338 755C  
                       l5290 7314                         l5282 72E0                         l5274 7286  
                       l5266 721E                         l5258 7172                         l5610 6626  
                       l5602 65E4                         l5530 39BA                         l5514 4A3E  
                       l5460 392A                         l4572 3AC8                         l5508 4128  
                       l3780 5424                         l5524 3ADA                         l4804 4E0C  
                       l4652 39DC                         l4476 4170                         l3852 3B24  
                       l3860 3EBA                         l3940 3E08                         l3932 3DD8  
                       l3844 3D60                         l3828 3D30                         l3836 3D50  
                       l3916 3F5A                         l3908 3F40                         l4468 4500  
                       l4492 56B2                         l4484 566E                         l4820 69EC  
                       l4900 6CEE                         l4812 69A4                         l5196 5AB6  
                       l5188 5A6A                         l4580 4704                         l4388 4FA2  
                       l4644 3E32                         l4660 43DE                         l4732 43C8  
                       l4724 43A4                         l4716 4370                         l4708 4344  
                       l5452 7D5E                         l5444 7CB6                         l5436 7C3E  
                       l5428 7BD4                         l5372 77E8                         l5380 7870  
                       l5356 76C4                         l5364 774C                         l5348 7628  
                       l5284 72FE                         l5292 7320                         l5276 728C  
                       l5268 7224                         l5620 66B8                         l5612 662C  
                       l5604 65F8                         l5540 39D8                         l5532 39C4  
                       l5516 4A8A                         l5462 3932                         l4566 3AB4  
                       l5470 40B8                         l3790 54BE                         l3782 5446  
                       l3774 53D6                         l5526 3ADE                         l4750 400E  
                       l4654 39F8                         l3854 3B28                         l3846 3B08  
                       l3870 3EEE                         l3862 3ECA                         l3934 3DEE  
                       l3838 3D54                         l3918 3F6A                         l3950 5F46  
                       l4494 56DC                         l4486 567A                         l4478 5624  
                       l4910 6D42                         l4830 6A3C                         l4902 6CFA  
                       l4822 69F4                         l4814 69B6                         l4806 6976  
                       l5198 5ABA                         l4590 4732                         l4398 4FD4  
                       l4646 3E44                         l4670 440E                         l4662 43EC  
                       l4734 43D0                         l4726 43AC                         l4718 4378  
                       l4574 399E                         l5454 7D9C                         l5446 7CF4  
                       l5438 7C7C                         l5390 792C                         l5382 7884  
                       l5374 77EE                         l5366 7760                         l5358 76CA  
                       l5294 7326                         l5278 729C                         l5630 6700  
                       l5622 66CC                         l5614 663E                         l5606 6602  
                       l5550 6426                         l5542 63EC                         l5534 39C8  
                       l5518 4AD6                         l3696 5188                         l5464 3C4C  
                       l4568 3AB6                         l3944 38D8                         l5472 40BC  
                       l3792 54DA                         l3784 5462                         l3776 53F2  
                       l5528 3AF2                         l4752 401E                         l4744 3FD8  
                       l3768 4C5C                         l3880 3B38                         l3856 3B2C  
                       l3848 3B0C                         l3872 3EFE                         l3864 3ED2  
                       l3936 3DF4                         l3928 3DC6                         l3960 5F7A  
                       l3952 5F48                         l4496 56F8                         l4488 5682  
                       l4920 6DAA                         l4912 6D54                         l4904 6D0C  
                       l4840 6AA4                         l4832 6A4E                         l4824 6A06  
                       l4816 69C8                         l4808 697E                         l4760 3A80  
                       l4584 471A                         l4648 3E58                         l4680 443C  
                       l4672 4412                         l4664 43F4                         l4728 43B2  
                       l4576 39A8                         l5456 7DA2                         l5448 7D38  
                       l5392 7932                         l5384 788A                         l5376 782C  
                       l5368 7766                         l5296 732C                         l5288 7308  
                       l5640 67A0                         l5632 6712                         l5624 66D6  
                       l5616 6672                         l5608 6614                         l5560 6470  
                       l5552 6430                         l5544 63FA                         l5536 39D0  
                       l3698 51A4                         l5466 3C88                         l5490 40DE  
                       l5474 40BE                         l3794 54F4                         l3786 547C  
                       l3778 5404                         l4754 4030                         l4746 4004  
                       l4738 3FD2                         l3890 3B5E                         l3882 3B3C  
                       l3858 3B30                         l3874 3F02                         l3866 3ED6  
                       l3938 3E04                         l3970 5FAC                         l3954 5F58  
                       l3962 5F82                         l3946 5F2C                         l4498 5704  
                       l4922 6DC6                         l4914 6D60                         l4930 6E02  
                       l4906 6D1E                         l4842 6AC0                         l4834 6A5A  
                       l4850 6AFC                         l4826 6A18                         l4818 69DA  
                       l4770 3AA8                         l4762 3A84                         l4690 4470  
                       l4682 444A                         l4674 441A                         l4666 43F8  
                       l4658 43DA                         l4578 39B4                         l5458 7DE0  
                       l5394 7970                         l5386 78C8                         l5378 7832  
                       l5298 736A                         l5650 67E6                         l5642 67AA  
                       l5634 6746                         l5626 66E8                         l5618 6684  
                       l5570 64BA                         l5562 6484                         l5554 6442  
                       l5546 640C                         l5538 39D4                         l5468 3C8A  
                       l5492 40E8                         l5484 40C8                         l5476 40C2  
                       l3796 5514                         l3788 549C                         l4756 403C  
                       l4748 400A                         l4780 4CD4                         l3892 3B66  
                       l3884 3B40                         l3876 3F06                         l3868 3EDA  
                       l3980 5FE2                         l3972 5FB2                         l3964 5F92  
                       l3956 5F68                         l3948 5F38                         l4940 6E70  
                       l4932 6E1A                         l4924 6DEE                         l4916 6D72  
                       l4908 6D30                         l4860 6B6A                         l4852 6B14  
                       l4844 6AE8                         l4836 6A6C                         l4828 6A2A  
                       l4764 3A92                         l4596 474A                         l4692 4476  
                       l4684 4450                         l4676 442C                         l4668 4406  
                       l5396 7976                         l5388 790C                         l5652 681A  
                       l5644 67BC                         l5636 6758                         l5628 66FA  
                       l5580 64F6                         l5572 64C0                         l5564 648E  
                       l5556 6456                         l5548 6412                         l5494 40EC  
                       l5486 40CC                         l5478 40C4                         l3798 5536  
                       l4790 4D7C                         l4774 4CAA                         l3886 3B54  
                       l3878 3F0A                         l3990 601E                         l3982 5FF2  
                       l3974 5FC0                         l3966 5F98                         l3958 5F78  
                       l4950 6EC8                         l4934 6E2C                         l4918 6D8E  
                       l4942 6E80                         l4870 6BC2                         l4854 6B26  
                       l4838 6A88                         l4862 6B7A                         l4766 3A96  
                       l4686 4466                         l4678 4434                         l4694 447C  
                       l5398 79B4                         l5670 691C                         l5654 682C  
                       l5646 67CE                         l5638 678C                         l5590 6540  
                       l5582 650A                         l5574 64D4                         l5566 64A0  
                       l5558 646A                         l5662 687E                         l5496 40FA  
                       l5488 40CE                         l4792 4DA8                         l4784 4D0A  
                       l3888 3B5A                         l3896 3F12                         l3992 602C  
                       l3984 5FF4                         l3976 5FC2                         l3968 5FAA  
                       l4960 6F3A                         l4952 6ED4                         l4944 6E92  
                       l4936 6E48                         l4928 6DFE                         l4880 6C34  
                       l4872 6BCE                         l4864 6B8C                         l4856 6B42  
                       l4848 6AF8                         l4768 3AA4                         l4696 448C  
                       l4688 446E                         l5672 6950                         l5656 6860  
                       l5648 67D4                         l5592 6552                         l5584 6510  
                       l5576 64DE                         l5568 64A6                         l5664 68DC  
                       l5498 4104                         l4786 4D62                         l4778 4CC8  
                       l3898 3F22                         l3994 6030                         l3978 5FD2  
                       l3986 5FFC                         l4970 6F8E                         l4962 6F62  
                       l4954 6EE6                         l4946 6EA4                         l4938 6E50  
                       l4890 6C88                         l4882 6C5C                         l4874 6BE0  
                       l4866 6B9E                         l4858 6B4A                         l4698 4494  
                       l5674 6956                         l5666 68F0                         l5658 6874  
                       l5594 6558                         l5586 6524                         l5578 64F0  
                       l4796 4DC2                         l3996 6034                         l3988 600C  
                       l4972 6FA0                         l4956 6F02                         l4948 6EB6  
                       l4892 6C9A                         l4876 6BFC                         l4868 6BB0  
                       l5668 68FC                         l5596 656A                         l5588 652E  
                       l5692 3C10                         l4798 4DF6                         l3998 6038  
                       l4990 702A                         l4974 6FBC                         l4966 6F72  
                       l4958 6F1E                         l4894 6CB6                         l4886 6C6C  
                       l4878 6C18                         l5950 3FBA                         l5598 659E  
                       l5694 3C3C                         l5960 5892                         l4992 703C  
                       l4976 6FC4                         l4968 6F76                         l4896 6CBE  
                       l4888 6C70                         l4984 6FF4                         l5952 46EC  
                       l5696 3C40                         l5962 58BE                         l4994 704E  
                       l4986 7006                         l4978 6FE4                         l4898 6CDE  
                       l5954 476C                         l4996 7060                         l4988 7018  
                       l5956 47DE                         l5948 6896                         l5958 5752  
                       l4998 7072                         STR_1 7EA3                         STR_2 7EA3  
                       STR_3 7EA3                         STR_4 7EA3                         STR_5 7EA3  
                       STR_6 7EA3                         STR_7 7EA3                         STR_8 7EA3  
                       STR_9 7E03                         u4000 55CA                         u4001 55C6  
                       u4010 55E4                         u4011 55E0                         u4100 3B24  
                       u4101 3B20                         u4110 3ECA                         u4111 3EC6  
                       u4024 55F6                         u4040 3BD4                         u4120 3EEE  
                       u4200 3DEE                         u5000 4F3C                         u4025 55F2  
                       u4041 3BCE                         u4121 3EEA                         u4201 3DEA  
                       u5001 4F38                         u4034 5616                         u4050 3BD6  
                       u4130 3EFE                         u4210 3E04                         u5010 4F5A  
                       u4035 5612                         u4131 3EFA                         u4211 3E00  
                       u5011 4F56                         u4060 3C0C                         u4140 3B54  
                       u4300 602C                         u4220 5F46                         u5020 4F6A  
                       u5100 5096                         u4061 3C06                         u4141 3B50  
                       u4301 6028                         u4221 5F42                         u5021 4F66  
                       u5101 5092                         u5110 3980                         u4070 3C0E  
                       u4150 3F22                         u4310 609A                         u4230 5F58  
                       u5030 4F78                         u3510 3916                         u5111 397C  
                       u4151 3F1E                         u4311 6096                         u4231 5F54  
                       u5031 4F74                         u3511 3912                         u5120 4052  
                       u5200 4168                         u4080 3D30                         u4160 3F3A  
                       u4400 6178                         u4320 60B2                         u4240 5F68  
                       u6000 6EB6                         u5040 4FB2                         u5121 404E  
                       u4081 3D2C                         u4161 3F34                         u4401 6174  
                       u4321 60AC                         u4241 5F64                         u6001 6EB2  
                       u5041 4FAE                         u5130 4068                         u5210 419C  
                       u4090 3D4C                         u4170 3F3C                         u4410 6196  
                       u4330 60B4                         u4250 5FAA                         u6010 6EC8  
                       u5050 4FC0                         u5131 4064                         u4091 3D48  
                       u4411 6192                         u4251 5FA6                         u6011 6EC4  
                       u5051 4FBC                         u3700 537C                         u3620 528C  
                       u3604 523C                         u3540 51A4                         u5140 407E  
                       u5220 41AC                         u4180 3F56                         u4500 62D4  
                       u4420 61CE                         u4340 60DC                         u4260 5FC0  
                       u5300 5838                         u6100 702A                         u6020 6EE6  
                       u5060 4FF0                         u3701 5378                         u3621 5288  
                       u3605 5238                         u3541 51A0                         u5141 407A  
                       u5221 41A8                         u4181 3F52                         u4501 62D0  
                       u4421 61CA                         u4341 60D8                         u4261 5FBC  
                       u5301 5834                         u6101 7026                         u6021 6EE2  
                       u5061 4FEC                         u3710 538E                         u3630 529E  
                       u3614 5260                         u3550 51B6                         u5310 3AC6  
                       u5150 4094                         u4190 3F6A                         u4510 62EA  
                       u4430 6214                         u4350 60FA                         u4270 5FD2  
                       u5230 5652                         u6110 703C                         u6030 6F1E  
                       u5070 500C                         u3711 538A                         u3631 529A  
                       u3615 525C                         u3551 51B2                         u5311 3AC2  
                       u5151 4090                         u5207 415E                         u4191 3F66  
                       u4511 62E6                         u4431 6210                         u4351 60F6  
                       u4271 5FCE                         u5231 564E                         u6111 7038  
                       u6031 6F1A                         u5071 5008                         u5320 3AD8  
                       u5160 40AA                         u3800 4C30                         u4600 63D8  
                       u4520 6300                         u4440 624A                         u4360 611A  
                       u4280 5FE2                         u5240 566E                         u6200 70EE  
                       u6120 704E                         u6040 6F3A                         u5080 5026  
                       u5400 444A                         u7000 6874                         u5321 3AD4  
                       u5161 40A6                         u5217 4192                         u3801 4C2C  
                       u4601 63D4                         u4521 62FC                         u4441 6246  
                       u4361 6116                         u4281 5FDE                         u5241 566A  
                       u6201 70EA                         u6121 704A                         u6041 6F36  
                       u5081 5022                         u5401 4446                         u7001 6870  
                       u5170 394E                         u4530 6314                         u4450 625A  
                       u4370 6128                         u4290 601E                         u5250 56DC  
                       u6210 7100                         u6130 7060                         u6050 6F8E  
                       u5330 4716                         u4610 5BAC                         u5090 503A  
                       u5410 4466                         u7010 68F0                         u5171 394A  
                       u4531 6310                         u4451 6256                         u4371 6124  
                       u4291 601A                         u5251 56D8                         u6211 70FC  
                       u6131 705C                         u6051 6F8A                         u5331 4712  
                       u4611 5BA8                         u5091 5036                         u5411 4462  
                       u7011 68EC                         u3724 53A4                         u3660 5304  
                       u3644 52B4                         u3580 5214                         u3564 51C8  
                       u5500 4004                         u3820 4C78                         u3740 4B5C  
                       u4540 632E                         u4460 6286                         u4380 6138  
                       u5180 44FC                         u5260 56F8                         u6220 711E  
                       u6140 7072                         u6060 6FA0                         u5340 4794  
                       u4700 5D4C                         u4620 5BBE                         u5420 448C  
                       u6300 4658                         u7020 691C                         u3725 53A0  
                       u3661 5300                         u3645 52B0                         u3581 5210  
                       u3565 51C4                         u5501 4000                         u3821 4C74  
                       u3741 4B58                         u4541 632A                         u4461 6282  
                       u4381 6134                         u5181 44F8                         u5261 56F4  
                       u6221 711A                         u6141 706E                         u6061 6F9C  
                       u5341 4790                         u4701 5D48                         u4621 5BBA  
                       u5421 4488                         u6301 4654                         u7021 6918  
                       u3734 53C8                         u3670 5316                         u3654 52D8  
                       u3590 5226                         u3574 51E8                         u6230 3D00  
                       u5510 401E                         u3814 4C46                         u4550 6368  
                       u4470 6296                         u4390 616A                         u5190 4566  
                       u5270 5792                         u6150 7084                         u6070 6FBC  
                       u4710 5D76                         u4630 5BCE                         u5350 3E1E  
                       u5430 433C                         u6310 46A6                         u7030 6950  
                       u3735 53C4                         u3671 5312                         u3655 52D4  
                       u3591 5222                         u3575 51E4                         u6231 3CFC  
                       u5511 401A                         u3815 4C42                         u4551 6364  
                       u4471 6292                         u4391 6166                         u5191 4562  
                       u5271 578E                         u6151 7080                         u6071 6FB8  
                       u4711 5D72                         u4631 5BCA                         u5351 3E1A  
                       u5431 4338                         u6311 46A2                         u7031 694C  
                       u6240 3D10                         u3920 54DA                         u3904 548E  
                       u3840 53F2                         u5520 4030                         u3760 4BA0  
                       u4560 637A                         u4480 62B2                         u5280 57AE  
                       u6160 7096                         u6080 7006                         u5600 6992  
                       u6400 59DA                         u6320 5906                         u4800 5E72  
                       u4720 5D9A                         u4640 5C12                         u5360 3E44  
                       u5440 4356                         u6241 3D0C                         u3921 54D6  
                       u3905 548A                         u3841 53EE                         u5521 402C  
                       u3761 4B9C                         u4561 6376                         u4481 62AE  
                       u5281 57AA                         u6161 7092                         u6081 7002  
                       u5601 698E                         u6401 59D6                         u6321 5902  
                       u4801 5E6E                         u4721 5D96                         u4641 5C0E  
                       u5361 3E40                         u5441 4352                         u3930 54F4  
                       u3914 54AE                         u3850 5404                         u3834 4C8E  
                       u3754 4B6E                         u4570 638A                         u4490 62C2  
                       u5290 581C                         u6170 70B8                         u6090 7018  
                       u5610 69A4                         u5530 3A92                         u6410 59EC  
                       u6330 591A                         u4810 5EBA                         u4730 5DB0  
                       u4650 5C24                         u5370 43EC                         u5450 4370  
                       u6250 3EB6                         u3931 54F0                         u3915 54AA  
                       u3851 5400                         u3835 4C8A                         u3755 4B6A  
                       u4571 6386                         u4491 62BE                         u5291 5818  
                       u6171 70B4                         u6091 7014                         u5611 69A0  
                       u5531 3A8E                         u6411 59E8                         u6331 5916  
                       u4811 5EB6                         u4731 5DAC                         u4651 5C20  
                       u5371 43E8                         u5451 436C                         u6251 3EB2  
                       u3684 532C                         u3780 4BE8                         u4580 63AA  
                       u6180 70CA                         u5700 6A4E                         u5620 69B6  
                       u5540 3AA4                         u6500 5B2C                         u6420 5A0A  
                       u6340 5936                         u4820 5EEA                         u4740 5DCE  
                       u4660 5C34                         u4900 4944                         u6260 457A  
                       u5380 4406                         u5460 438E                         u3685 5328  
                       u3781 4BE4                         u4581 63A6                         u6181 70C6  
                       u5701 6A4A                         u5621 69B2                         u5541 3AA0  
                       u6501 5B28                         u6421 5A06                         u6341 5932  
                       u4821 5EE6                         u4741 5DCA                         u4661 5C30  
                       u6261 4576                         u5381 4402                         u5461 438A  
                       u3694 5350                         u5550 4CC4                         u3774 4BB6  
                       u4590 63BC                         u6190 70DC                         u5710 6A6C  
                       u5630 69C8                         u6510 5B5C                         u6430 5A1C  
                       u6350 5952                         u4830 5F18                         u4750 5DEE  
                       u4670 5C74                         u4910 4972                         u6270 45C0  
                       u5390 442C                         u5470 43A4                         u3695 534C  
                       u5551 4CC0                         u3775 4BB2                         u4591 63B8  
                       u6191 70D8                         u5711 6A68                         u5631 69C4  
                       u6511 5B58                         u6431 5A18                         u6351 594E  
                       u4831 5F14                         u4751 5DEA                         u4671 5C70  
                       u4911 496E                         u6271 45BC                         u5391 4428  
                       u5471 43A0                         u3960 5552                         u3944 5506  
                       u3880 5462                         u3864 5416                         u5560 4D06  
                       u4840 4824                         u5800 6BC2                         u5720 6AA4  
                       u5640 69DA                         u6440 5A3A                         u6360 596E  
                       u4760 5E00                         u4680 5CB4                         u4920 4986  
                       u6280 45EA                         u5480 43C8                         u6600 7760  
                       u6520 7146                         u3961 554E                         u3945 5502  
                       u3881 545E                         u3865 5412                         u5561 4D02  
                       u4841 4820                         u5801 6BBE                         u5721 6AA0  
                       u5641 69D6                         u6441 5A36                         u6361 596A  
                       u4761 5DFC                         u4681 5CB0                         u4921 4982  
                       u4905 493A                         u6281 45E6                         u5481 43C4  
                       u6601 775C                         u6521 7142                         _PIR1 000F9E  
                       u3970 556C                         u3954 5526                         u3890 547C  
                       u3874 5436                         u5570 4D78                         u3794 4BFE  
                       u4850 4862                         u5810 6BE0                         u5730 6AC0  
                       u5650 69EC                         u6450 5A4C                         u6370 5988  
                       u4770 5E2E                         u4690 5D2A                         u4930 49AE  
                       u6290 4630                         u6610 7884                         u6530 7166  
                       u3971 5568                         u3955 5522                         u3891 5478  
                       u3875 5432                         u5571 4D74                         u3795 4BFA  
                       u4851 485E                         u5811 6BDC                         u5731 6ABC  
                       u5651 69E8                         u6451 5A48                         u6371 5984  
                       u4771 5E2A                         u4691 5D26                         u4931 49AA  
                       u6291 462C                         u6611 7880                         u6531 7162  
                       u5580 4DBE                         u4860 4880                         u5900 6D42  
                       u5820 6C18                         u5740 6B14                         u5660 6A06  
                       u6460 5A6A                         u6380 59AA                         u4780 5E44  
                       u4940 49CE                         u6620 79E8                         u6540 724A  
                       u6700 640C                         u5581 4DBA                         u4861 487C  
                       u5901 6D3E                         u5821 6C14                         u5741 6B10  
                       u5661 6A02                         u6461 5A66                         u6381 59A6  
                       u4781 5E40                         u4941 49CA                         u6621 79E4  
                       u6541 7246                         u6701 6408                         u5494 3FEA  
                       u5590 4E1E                         u4870 48A0                         u5910 6D54  
                       u5830 6C34                         u5750 6B26                         u5670 6A18  
                       u6470 5A7C                         u6390 59BC                         u4790 5E58  
                       u4950 49DE                         u6630 7B4C                         u6550 72C2  
                       u6710 6426                         u5495 3FE6                         u5591 4E1A  
                       u4871 489C                         u5911 6D50                         u5831 6C30  
                       u5751 6B22                         u5671 6A14                         u6471 5A78  
                       u6391 59B8                         u4791 5E54                         u4951 49DA  
                       u6631 7B48                         u6551 72BE                         u6711 6422  
                       u3984 557E                         u4880 48F0                         u5920 6D72  
                       u5840 6C88                         u5760 6B42                         u5680 6A2A  
                       u6480 5A9A                         u4960 4E32                         u6640 7CB0  
                       u6560 7404                         u6800 6524                         u6720 6442  
                       u3985 557A                         u4881 48EC                         u5921 6D6E  
                       u5841 6C84                         u5761 6B3E                         u5681 6A26  
                       u6481 5A96                         u4961 4E2E                         u6641 7CAC  
                       u6561 7400                         u6801 6520                         u6721 643E  
                       u6650 40DE                         u3994 559E                         u5930 6DAA  
                       u5850 6C9A                         u5770 6B8C                         u5690 6A3C  
                       u6490 5ADA                         u4890 4910                         u4970 4E40  
                       u6570 749C                         u6810 6540                         u6730 646A  
                       u6651 40DA                         u3995 559A                         u5931 6DA6  
                       u5851 6C96                         u5771 6B88                         u5691 6A38  
                       u6491 5AD6                         u4891 490C                         u4971 4E3C  
                       u6571 7498                         u6811 653C                         u6731 6466  
                       u5940 6DC6                         u5860 6CB6                         u5780 6B9E  
                       u4980 4E9C                         u6580 7518                         u6900 66CC  
                       u6820 6552                         u6740 6484                         u6660 4A3E  
                       u5941 6DC2                         u5861 6CB2                         u5781 6B9A  
                       u4981 4E98                         u6581 7514                         u6901 66C8  
                       u6821 654E                         u6741 6480                         u6661 4A3A  
                       u5950 6E1A                         u5870 6D0C                         u5790 6BB0  
                       u4990 4EF2                         u6590 763C                         u6910 66E8  
                       u6830 656A                         u6750 64A0                         u6670 4A8A  
                       u5951 6E16                         u5871 6D08                         u5791 6BAC  
                       u4991 4EEE                         u6591 7638                         u6911 66E4  
                       u6831 6566                         u6751 649C                         u6671 4A86  
                       u5960 6E2C                         u5880 6D1E                         u6920 66FA  
                       u6840 65B0                         u6760 64BA                         u6680 4AD6  
                       u5961 6E28                         u5881 6D1A                         u6921 66F6  
                       u6841 65AC                         u6761 64B6                         u6681 4AD2  
                       u5970 6E48                         u5890 6D30                         u6930 6712  
                       u6850 65F8                         u6770 64D4                         u6690 4B22  
                       u5971 6E44                         u5891 6D2C                         u6931 670E  
                       u6851 65F4                         u6771 64D0                         u6691 4B1E  
                       u5980 6E92                         u6940 6758                         u6860 6614  
                       u6780 64F0                         u5981 6E8E                         u6941 6754  
                       u6861 6610                         u6781 64EC                         u5990 6EA4  
                       u6950 67A0                         u6870 6626                         u6790 650A  
                       u5991 6EA0                         u6951 679C                         u6871 6622  
                       u6791 6506                         u6960 67BC                         u6880 663E  
                       u6961 67B8                         u6881 663A                         u6970 67CE  
                       u6890 6684                         u6971 67CA                         u6891 6680  
                       u6980 67E6                         u6981 67E2                         u6990 682C  
                       u6991 6828                  _outputPrint 712C                         _main 3C10  
                       fsr0h 000FEA                         indf0 000FEF                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf2 000FDF                         fsr1l 000FE1  
                       fsr2l 000FD9                ?_i2c_read_bit 0001                         prodh 000FF4  
                       prodl 000FF3                         start 0000              ___fldiv@new_exp 0020  
               ___param_bank 000000              __end_of_i2cInit 3A2C                ___fltol@sign1 0040  
            __end_of___fladd 63EC                        ?_main 0001              __end_of_adcInit 3C90  
            __end_of___fldiv 5F2C              __end_of_adcRead 5188              __end_of___awdiv 449E  
           ?_lcdCommand4bits 0001                        STR_10 7FC4                        STR_11 7FC4  
                      STR_20 7F94                        STR_12 7F74                        STR_21 7EBF  
                      STR_13 7FB4                        STR_22 7F64                        STR_14 7F84  
                      STR_30 7F24                        STR_23 7EF2                        STR_15 7F03  
                      STR_31 7F24                        STR_24 7FA4                        STR_16 7F84  
                      STR_40 7FE1                        STR_32 7F34                        STR_25 7ED0  
                      STR_17 7F03                        STR_41 7FD8                        STR_33 7F34  
                      STR_50 7F1F                        STR_42 7FEA                        STR_18 7F54  
                      STR_34 7FE1                        STR_26 7FCE                        STR_51 7F1F  
                      STR_43 7FF4                        STR_19 7EE1                        STR_35 7FD8  
                      STR_27 7FCE                        STR_44 7FEF                        STR_36 7FE1  
                      STR_28 7F44              __end_of___awmod 43DA                        STR_45 7FF9  
                      STR_37 7FD8                        STR_29 7F14                        STR_46 7E86  
                      STR_38 7FE1                        STR_47 7E29                        STR_39 7FD8  
                      STR_48 7E68                        STR_49 7E49              __end_of___fltol 4A00  
                      _T0CON 000FD5              ___awdiv@divisor 0003                        _T2CON 000FCA  
            ___awdiv@counter 0005                        _RCREG 000FAE                        _RCSTA 000FAB  
                      _TMR0H 000FD7                        _TMR0L 000FD6                        _SPBRG 000FAF  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
            __end_of_lcdData 39BA              __end_of_lcdInit 4130               ??_i2cWriteByte 000A  
            __end_of_ledInit 3B08          __end_of_i2cReadByte 3E0C           outputPrint@numTela 0053  
            __end_of_pinMode 53D6                        _valor 00BB                        _timer 00B2  
                      _state 00B8              __end_of_varInit 4B40                        tablat 000FF5  
          __end_of_I2C_delay 38D2                _i2c_write_bit 3EB8                        status 000FD8  
             ??_i2c_read_bit 0007             __end_of_Delay2ms 3ADA         __end_of_digitalWrite 5624  
            __initialization 3B6A                 __end_of_main 3C4C              i2cWriteByte@bit 000B  
           __end_of_i2c_stop 3B38                 ?_setLanguage 003F                       ??_main 0060  
              __activetblptr 000002                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                  eventRead@ev 00DE                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _CCPR2L 000FBB             ___awdiv@dividend 0001  
             ?_i2c_write_bit 0001                       _INTCON 000FF2                       _SPBRGH 000FB0  
                     _SPPCFG 000F63                    ??_i2cInit 0007             __end_of___xxtofl 4FD4  
      __end_of_getAlarmLevel 47F6           dsWriteData@address 0038             __end_of_ledBlink 4704  
           __end_of_getTimer 38FE             __end_of_getState 38E4                       ___flge 47F6  
                  ??___fladd 0030                       ___wmul 39DC                    ??_adcInit 0007  
                  ??___fldiv 0017                    ??_adcRead 0044                    ??___awdiv 0005  
                  ??___awmod 000D                    ??___fltol 003C                       _dsInit 38D2  
                     _lcdInt 41AE                       _ledOff 3F70                       _kpInit 42AA  
                     _kpRead 3FD2             __end_of_read_SDA 3C10             __end_of_read_SCL 3BD8  
                     _memset 4CAA                       clear_0 3B90                       _smLoop 63EC  
                     _msgsL1 0080                       _msgsL2 0060             ___awdiv@quotient 0007  
            ___awmod@divisor 000B                    ??_lcdData 0003                       isa$std 000001  
                _i2cReadByte 3DB8                    ??_lcdInit 0004              ___awmod@counter 000D  
                  ??_ledInit 0007             __end_of_setTimer 3908             __end_of_setState 38EC  
                  ??_pinMode 0005                 __mediumconst 7E02                    ??_varInit 004F  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
          __end_of_Delay40us 3982                   ___flge@ff1 0001                   ___flge@ff2 0005  
               ___xxtofl@arg 000B                 ___xxtofl@exp 000A                 ___xxtofl@val 0001  
                 __accesstop 0060      __end_of__initialization 3B96                ___rparam_used 000001  
                 ___fltol@f1 0038          getSensorValue@value 0048                 ?_pulseEnable 0001  
                pinMode@type 0003         __end_of_i2cWriteByte 3F70               __pcstackCOMRAM 0001  
               __pidataBANK0 3D68             i2cWriteByte@byte 0009   __end_of_processarProtocolo 712C  
          __end_of_i2c_start 3D68         __end_of_i2c_read_bit 3B6A                    ?_Delay2ms 0001  
            ??_i2c_write_bit 0007                   _checkAlarm 4568                   __pbssBANK0 00B0  
            _protocolo_index 00B4                 ?_outputPrint 0053                    ?_i2c_stop 0001  
                 _dsReadData 3C90             dsReadData@result 0011                      ?___flge 0001  
                 _lcdCommand 3CD6                      ?___wmul 0001                      ?_dsInit 0001  
                    ?_lcdInt 004A                      ?_ledOff 0007                      ?_kpInit 0001  
                    ?_kpRead 0001                      _CCP2CON 000FBA                 eventRead@key 00E0  
                    _BAUDCON 000FB8                      ?_memset 0001                      ?_smLoop 0001  
      processarProtocolo@err 0052      eventRead@serial_command 00E2                    ?___xxtofl 0001  
                 ??_Delay2ms 0001         i2cReadByte@send_stop 0008                 _digitalWrite 53D6  
                  ?_ledBlink 0007                    ?_getTimer 0001                    ?_getState 0001  
          __end_of_clear_SDA 3A80            __end_of_clear_SCL 3A56                    ?_read_SDA 0001  
                  ?_read_SCL 0001                  setTimer@val 0003                   ??_i2c_stop 0007  
                    _i2cInit 3A02                    _I2C_delay 38D0                      __Hparam 0000  
                  ?_setTimer 0003                    ?_setState 0001                      __Lparam 0000  
              ?_serialString 0002            __end_of_lcdString 3EB8                      ___fladd 5F2C  
                    _adcInit 3C4C                      ___fldiv 5B92                      _adcRead 4FD4  
                    ___awdiv 43DA                      ___awmod 432A                      ___fltol 48FA  
                    __pcinit 3B6A               serialRead@resp 0001                      _lcdData 399C  
                    __ramtop 0800                      _lcdInit 40B8                      __ptext0 3C10  
                    __ptext1 4A00                      __ptext2 3908                      __ptext3 39BA  
                    __ptext4 38EC                      __ptext5 63EC                      __ptext6 38FE  
                    _ledInit 3ADA                      __ptext7 38E4                      __ptext8 712C  
                    __ptext9 422C            __end_of_eventInit 393E            __end_of_eventRead 5B92  
                    _key_ant 00B6                   ??___xxtofl 0005                      _pinMode 5188  
           ___awmod@dividend 0009                  serialSend@c 0001                      _varInit 4A00  
                 ??_ledBlink 0009                   ??_getTimer 0003                   ??_getState 0001  
                  Delay2ms@j 0001                    Delay2ms@k 0002                      _started 00BC  
                ?_checkAlarm 004A         end_of_initialization 3B96                   ??_read_SDA 0007  
                 ??_read_SCL 0007                      memset@c 0003                      memset@k 0009  
                    memset@n 0005                      memset@s 000B                __Lmediumconst 7E02  
          __end_of_serialInt 42AA                  ?_dsReadData 000E               digitalRead@pin 0001  
                 ?_I2C_delay 0001            __end_of_timerInit 38F4            __end_of_timerWait 3918  
             ??_serialString 0004                   ??_setTimer 0005                   ??_setState 0001  
                 _serialInit 3982                   _serialRead 3A80                   _serialSend 393E  
                    postdec1 000FE5                      postdec2 000FDD                  ?_lcdCommand 0001  
                    postinc0 000FEE                      postinc2 000FDE                _setAlarmLevel 5624  
              ??_digitalRead 0003                ??_getLanguage 0015                   _timerReset 39BA  
               ?_i2cReadByte 0008              i2c_read_bit@bit 0007                    _PORTAbits 000F80  
                ___fladd@grs 0037                ___xxtofl@sign 0009                   lcdString@i 0008  
                ___fldiv@grs 0022                  ___fldiv@rem 001B                 _i2cWriteByte 3F10  
              ??_dsWriteData 003A                    _Delay40us 396A                 _i2c_read_bit 3B38  
       getSensorValue@sensor 0046               ?_setAlarmLevel 003F               __end_of___flge 48FA  
          outputPrint@idioma 0055               adcRead@ADvalor 0044               __end_of___wmul 3A02  
             __end_of_dsInit 38D8               __end_of_lcdInt 422C               __end_of_ledOff 3FD2  
             __end_of_kpInit 432A               __end_of_kpRead 4040               __end_of_memset 4E20  
             __end_of_smLoop 6976            _setAlarmLevel$540 004B            _setAlarmLevel$541 004D  
          _setAlarmLevel$538 0047            _setAlarmLevel$539 0049          start_initialization 3B6A  
        __end_of_digitalRead 4CAA          __end_of_getLanguage 396A                    _i2c_start 3D1E  
         _processarProtocolo 6976                   ?_Delay40us 0001          processarProtocolo@i 0054  
               smLoop@evento 00E5            ??_lcdCommand4bits 0002          ?_processarProtocolo 0001  
                ??_I2C_delay 0001          __end_of_dsWriteData 4568               adcRead@channel 0042  
                ?_serialInit 0001                  ?_serialRead 0001                  ?_serialSend 0001  
                   ??___flge 0009                     ??___wmul 0005                     ??_dsInit 0007  
                   ??_lcdInt 004C                     ??_ledOff 0009                     ??_kpInit 0007  
                   ??_kpRead 0001                  __pdataBANK0 0060                     ??_memset 0007  
                ?_timerReset 0001                     ??_smLoop 00E3                   memset@dest 0001  
          dsReadData@address 000E                    ___fladd@a 002C                    ___fladd@b 0028  
       ??_processarProtocolo 004F                    ___fldiv@a 0013                    ___fldiv@b 000F  
              __pcstackBANK0 00DD         __end_of_serialString 41AE                   pinMode@pin 0001  
                 ?_i2c_start 0001             setState@newState 0001               _getSensorValue 3E0C  
      __end_of_i2c_write_bit 3F10                     ?_i2cInit 0001                _getAlarmLevel 4704  
            ??_setAlarmLevel 0045                    _clear_SDA 3A56                    _clear_SCL 3A2C  
            checkAlarm@alarm 004A                    _lcdAlerts 00A8              checkAlarm@level 004C  
              __pmediumconst 7E02                     ?___fladd 0028                     ?_adcInit 0001  
                   ?___fldiv 000F                     ?_adcRead 0042                     ?___awdiv 0001  
                   ?___awmod 0009                     ?___fltol 0038                    _lcdString 3E62  
                _digitalRead 4B40                  _getLanguage 3954                     ?_lcdData 0001  
              ??_setLanguage 0041                     ?_lcdInit 0001                     ?_ledInit 0001  
              lcdCommand@cmd 0003                     ?_pinMode 0001                     ?_varInit 0001  
     processarProtocolo@i_92 0058       processarProtocolo@i_95 005A       processarProtocolo@i_89 0056  
     __end_of_getSensorValue 3E62                    _eventInit 392A                    _eventRead 58D6  
               ??_checkAlarm 004E                  _dsWriteData 449E   setAlarmLevel@newAlarmLevel 0043  
                ??_Delay40us 0001               ___wmul@product 0005                 ??_dsReadData 0010  
             ?_getAlarmLevel 0013                   ?_clear_SDA 0001                   ?_clear_SCL 0001  
                  _serialInt 422C                    lcdInt@val 004A                 ??_lcdCommand 0003  
                  _timerInit 38EC                serialString@i 0006                    ledOff@pos 0007  
                  _timerWait 3908                   ?_lcdString 0004           __end_of_checkAlarm 4636  
          ___wmul@multiplier 0001                    _protocolo 00BD                     _Delay2ms 3AAC  
         __end_of_dsReadData 3CD6              ?_getSensorValue 0046                   ?_eventInit 0001  
                 ?_eventRead 005E                  ??_i2c_start 0007          __end_of_setLanguage 392A  
           timerReset@ciclos 0003                    copy_data0 3B7E           __end_of_lcdCommand 3D1E  
               lcdData@valor 0003                     _i2c_stop 3B08                     __Hrparam 0000  
              ??_pulseEnable 0001                   ?_serialInt 0051                     __Lrparam 0000  
           dsWriteData@value 003A                   ?_timerInit 0001                   ?_timerWait 0001  
                   ___xxtofl 4E20              _lcdCommand4bits 4040                     _ledBlink 4636  
                   __ptext10 3F70                     __ptext11 4636                     __ptext20 4E20  
                   __ptext12 3E62                     __ptext21 48FA                     __ptext13 41AE  
                   __ptext30 3918                     __ptext22 5B92                     __ptext14 399C  
                   __ptext31 5624                     __ptext23 4704                     __ptext15 432A  
                   __ptext40 3B08                     __ptext32 449E                     __ptext24 38F4  
                   __ptext16 43DA                     __ptext41 3A56                     __ptext33 47F6  
                   __ptext25 38DE                     __ptext17 4568                     __ptext50 39DC  
                   __ptext42 3B38                     __ptext34 5F2C                     __ptext26 3954  
                   __ptext18 3E0C                     __ptext51 4CAA                     __ptext43 3BD8  
                   __ptext35 3C90                     __ptext27 58D6                     __ptext19 4FD4  
                   __ptext60 3AAC                     __ptext52 3FD2                     __ptext44 3BA0  
                   __ptext36 3F10                     __ptext28 3A80                     __ptext61 392A  
                   __ptext53 3ADA                     __ptext45 4B40                     __ptext37 3D1E  
                   __ptext29 6976                     __ptext62 3982                     __ptext54 53D6  
                   __ptext46 3A2C                     __ptext38 3DB8                     __ptext63 42AA  
                   __ptext55 40B8                     __ptext47 38D0                     __ptext39 3EB8  
                   __ptext64 38D2                     __ptext56 3CD6                     __ptext48 4130  
                   __ptext65 3A02                     __ptext57 4040                     __ptext49 393E  
                   __ptext66 3C4C                     __ptext58 38D8                     __ptext67 5188  
                   __ptext59 396A                     _getTimer 38F4                     _getState 38DE  
              ??_outputPrint 0057              ??_getAlarmLevel 0017                     _read_SDA 3BD8  
                   _read_SCL 3BA0                 serialInt@val 0051                 _serialAlerts 00A0  
                ??_clear_SDA 0007                  ??_clear_SCL 0007                     _tela_ant 00B0  
               ??_serialInit 0001                 ??_serialRead 0001                     _setTimer 38FE  
               ??_serialSend 0001                     _setState 38E4                   Delay40us@j 0001  
                   lcdInit@i 0004                 _serialString 4130                     isa$xinst 000000  
                ??_lcdString 0006                 ??_timerReset 0003          __end_of_pulseEnable 38DE  
                _setLanguage 3918       setLanguage@newLanguage 003F              timerReset@tempo 0001  
                ??_eventInit 0007                  ??_eventRead 00DD                ?_digitalWrite 0001  
         __end_of_serialInit 399C           __end_of_serialRead 3AAC           __end_of_serialSend 3954  
          digitalWrite@value 0003           getAlarmLevel@alarm 0013           setAlarmLevel@alarm 003F  
         getAlarmLevel@level 0015           setAlarmLevel@level 0041           __end_of_timerReset 39DC  
        __end_of_outputPrint 7E02                  ??_serialInt 0053                  ??_timerInit 0001  
                _valorAntigo 00BA                  ??_timerWait 0001                  ledBlink@pos 0007  
               ?_digitalRead 0001                 ?_getLanguage 0013      __end_of_lcdCommand4bits 40B8  
            serialString@msg 0002               ??_digitalWrite 0005                ___fladd@signs 0034  
            digitalWrite@pin 0001                 ?_dsWriteData 0038                 ___fladd@aexp 0035  
               ___fladd@bexp 0036                 dsWriteData@i 003B          lcdCommand4bits@data 0001  
         lcdCommand4bits@cmd 0002                  _pulseEnable 38D8  
